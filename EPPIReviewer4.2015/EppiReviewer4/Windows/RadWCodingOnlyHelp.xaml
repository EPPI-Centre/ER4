<telerik:RadWindow x:Class="EppiReviewer4.RadWCodingOnlyHelp"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
		           Header="Coding Only Quick guide"
                   Width="600"
                   CanClose="True"
                   CanMove="False" 
                   IsRestricted="True"
                   ResizeMode="NoResize"
                   RestoreMinimizedLocation="True"
                   RestrictedAreaMargin="22"
                   WindowStartupLocation="CenterScreen"
                   WindowState="Normal"
                   >
    <!--
    NOTES:
    Header = Text in the header
    Height and Width: can be omitted, Window will be large enough to show the contents
    IsRestricted: forces the window inside the visible area
    ResizeMode: should normally be False
    RestoreMinimizedLocation: makes the window remember where it was before being minimised, it's pointless if can't be minimised, moved or resized
    RestrictedAreaMargin: the margin from the browser edges useful for maximised windows
    WindowStartupLocation: to be used for windows that are not maximised, CenterScreen is a safe bet
    WindowState: maximise or normal?
    -->
    <!--HOW TO:
        1) Take the inner code of the original window and paste it so to replace the <Grid /> tag below. Keep track of the x:Name attribute for later ref.
        2) Find the properties of the original window in the original XAML and use them to set them in the initial declaration above. 
           This is about things like "header", "CanMove" and so on.
        3) Look at the pasted code, some elements will not be recognised as they will need a namespace pointer such as 
            xmlns:telerikGridView="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.GridView"
            in the declaration. Copy & Paste the needed pointers from the original XAML file.
        4) Find all Resources that are used in bindings. Search for their name in the original XAML file. 
            1. If they are not there in the original file, they are already in App.xaml, you can forget them.
            2. if they are in the original file, and the current window is the only one that uses them, move them in the local Resources element.
            3. If they are in the original file, but used more than once, you can either replicate them here (*!*) or move them into App.xaml
        5) If 2. or 3., fix references to them in (original)code-behind. See code behind of this page for details.
    -->
    <telerik:RadWindow.Resources>
        
    </telerik:RadWindow.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="34" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <RichTextBox Grid.Column="0" Grid.Row="0" IsReadOnly="True" >
            <Paragraph>The '<Bold>Coding Only</Bold>' interface is designed to simplify your coding tasks by using your coding allocations to direct your work in an optimised interface. 
            </Paragraph>
            <Paragraph>It also allows true double blind coding / screening by ensuring that the different reviewers cannot access each other's work.
            </Paragraph>
            <Paragraph>In order to use this interface, you should first set up each reviewers coding assignments in the Collaborate tab.</Paragraph>
            <Paragraph>To enter the '<Bold>Coding Only</Bold>' interface you must click on the '<Bold>Coding Only</Bold>' button when selecting your review. 
                A review admin can also restrict a reviewer to the '<Bold>Coding Only</Bold>' role through the
                <Hyperlink TargetName="_blank" NavigateUri="http://eppi.ioe.ac.uk/cms/Default.aspx?tabid=2935">EPPI-Reviewer 4 account and review manager</Hyperlink>.
            </Paragraph>
            <Paragraph></Paragraph>
            <Paragraph>When you enter the '<Bold>Coding Only</Bold>' interface the system will automatically load the list of 
                '<Italic>Remaining</Italic>' items from your first coding allocation. You can then code your items as normal and the system will keep track of your progress.
            </Paragraph>
        </RichTextBox>
        <Button Grid.Column="0" Grid.Row="1" Width="50" Click="Button_Click" Margin="4">OK</Button>
    </Grid>
</telerik:RadWindow>