<telerik:RadWindow x:Class="EppiReviewer4.RadWduplgr_ConfirmWipeOut"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        xmlns:cslaXAML="clr-namespace:Csla.Xaml;assembly=Csla.Xaml"
        xmlns:csla="clr-namespace:Csla.Silverlight;assembly=Csla"
		           Header="Delete Duplicate Data"
                   CanClose="True"
                   CanMove="True" 
                   IsRestricted="True"
                   ResizeMode="NoResize"
                   RestoreMinimizedLocation="True"
                   RestrictedAreaMargin="20"
                   WindowStartupLocation="CenterScreen"
                   WindowState="Normal"
                   >
        <!--
    NOTES:
    Header = Text in the header
    Height and Width: can be omitted, Window will be large enough to show the contents
    IsRestricted: forces the window inside the visible area
    ResizeMode: should normally be False
    RestoreMinimizedLocation: makes the window remember where it was before being minimised, it's pointless if can't be minimised, moved or resized
    RestrictedAreaMargin: the margin from the browser edges useful for maximised windows
    WindowStartupLocation: to be used for windows that are not maximised, CenterScreen is a safe bet
    WindowState: maximise or normal?
    -->
    <!--HOW TO:
        1) Take the inner code of the original window and paste it so to replace the <Grid /> tag below. Keep track of the x:Name attribute for later ref.
        2) Find the properties of the original window in the original XAML and use them to set them in the initial declaration above. 
           This is about things like "header", "CanMove" and so on.
        3) Look at the pasted code, some elements will not be recognised as they will need a namespace pointer such as 
            xmlns:telerikGridView="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.GridView"
            in the declaration. Copy & Paste the needed pointers from the original XAML file.
        4) Find all Resources that are used in bindings. Search for their name in the original XAML file. 
            1. If they are not there in the original file, they are already in App.xaml, you can forget them.
            2. if they are in the original file, and the current window is the only one that uses them, move them in the local Resources element.
            3. If they are in the original file, but used more than once, you can either replicate them here (*!*) or move them into App.xaml
        5) If 2. or 3., fix references to them in (original)code-behind. See code behind of this page for details.
    -->
    <telerik:RadWindow.Resources>
        
    </telerik:RadWindow.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="20" />
                <RowDefinition />
                <RowDefinition Height="32"/>
                <RowDefinition />
                <RowDefinition Height="32"/>
                <RowDefinition Height="20" />
            </Grid.RowDefinitions>
            <cslaXAML:BusyAnimation x:Name="duplgr_ConfirmWipeOutBusyWindow" Height="19" Width="19" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center"/>
            <TextBlock Grid.Column="0" Grid.Row="1" Margin="3"
                            Text="You can delete all duplicate groups and keep information about documents already marked as duplicates.&#x0a;
This will give you a fresh start to re-evaluate duplicates without losing the work you've done already.&#x0a;
Note that documents already marked as duplicates will not be re-evaluated, and this will have a few consequences:&#x0a;
1) When you 'Get new Duplicates' you should get a smaller number of groups as all 'completed' groups should not reappear.&#x0a;
2) Overlapping groups will not show up again; they may re-appear only if you import new items and 'get new duplicates' once more.&#x0a;
3) Information about the old groups will be LOST! You will not be able to find out the similarity scores of items you have already marked as duplicates.&#x0a;
If you are really sure that you want to proceed, type 'I agree' in the box below and click 'Yes, I confirm'."
                            HorizontalAlignment="Left"/>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="2">
                <TextBox x:Name="duplgr_tbRemoveGroupsWindow" AcceptsReturn="False" Width="80"  TextWrapping="NoWrap" Margin="2" TextChanged="duplgr_tbRemoveGroupsWindow_TextChanged" />
                <Button x:Name="duplgr_cmdWipeOutGroupsWindow" Click="duplgr_cmdWipeOutGroupsWindow_Click" Tag="Groups" Content="Yes, I confirm" 
                            ToolTipService.ToolTip="This will erase all groups without resetting the 'Mark as duplicate' flags."
                            Margin="2" Height="28" VerticalAlignment="Center" HorizontalAlignment="Center" IsEnabled="False"/>
            </StackPanel>

            <Border BorderThickness="0,1,0,0" BorderBrush="Black" x:Name="duplgr_BorderRemoveGroupsWindow" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="3" Margin="2">
                <TextBlock 
                           Text="Alternatively, you can delete all duplicate information, effectively erasing all information.&#x0a;
This will give you a fresh start to re-evaluate duplicates in case you believe what you have done so far is likely to be wrong.&#x0a;
Note that documents already marked as duplicates will reappar. &#x0a;
You might want to proceed with this rather radical choice in case:&#x0a;
1) You have used the 'Advanced Mark Automatically' feature with too permissive thresholds and you have marked as duplicates too many false positives.&#x0a;
In this case, deleting all de-dup data and starting over again is likely to be faster than manually looking for errors.&#x0a;
2) You have a large number of overlapping groups and you have not invested a lot of time in manually evaluating groups.&#x0a;
Getting a 100% fresh start will eliminate overlapping groups and allow you to re-run the automatic marking procedure with little waste of time.&#x0a;
If you are really sure that you want to proceed, type 'Confirm' in the box below and click 'Yes, wipe all'."
                            HorizontalAlignment="Left"/>
            </Border>
            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="4" HorizontalAlignment="Center" >
                <TextBox x:Name="duplgr_tbWipeAllWindow" AcceptsReturn="False" Width="80"  TextWrapping="NoWrap" Margin="2" TextChanged="duplgr_tbWipeAllWindow_TextChanged"/>
                <Button x:Name="duplgr_cmdWipeAllWindow" Click="duplgr_cmdWipeOutGroupsWindow_Click" Tag="All" Content="Yes, Wipe All" 
                        ToolTipService.ToolTip="This will erase all groups and reset all 'Mark as duplicate' flags."
                        Margin="2" Height="28" VerticalAlignment="Center" HorizontalAlignment="Center" IsEnabled="False"/>
            </StackPanel>

        </Grid>
</telerik:RadWindow>