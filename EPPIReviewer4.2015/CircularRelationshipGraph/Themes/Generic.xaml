<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:CircularRelationshipGraph"
    xmlns:prim="clr-namespace:CircularRelationshipGraph.Primitives"
    xmlns:datavis="clr-namespace:System.Windows.Controls.DataVisualization"
    xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows">

  <prim:DoubleToVisibilityConverter x:Key="DoubleToVisibility"/>
  <prim:NegateDoubleConverter x:Key="NegateDouble"/>

  <Style TargetType="local:NodeSegment">
    <Setter Property="Canvas.ZIndex" Value="100"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:NodeSegment">
          <Canvas x:Name="rootElement"
                  DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <vsm:VisualStateManager.VisualStateGroups>
              <vsm:VisualStateGroup x:Name="CommonStates">
                <vsm:VisualState x:Name="Normal">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="segmentShape"
                                    Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                    Duration="0:0:0.2"/>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Highlighted">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="segmentShape"
                                    Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                    To="LightGray" Duration="0:0:0.2" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="label"
                                    Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            
            <!-- the segment itself -->
            <Path Stroke="{TemplateBinding Stroke}"
                  StrokeThickness="{TemplateBinding StrokeThickness}"
                  Fill="{TemplateBinding Background}"
                  DataContext="{Binding ViewModel}"
                  x:Name="segmentShape">
              <Path.Data>
                <PathGeometry>
                  <PathFigure StartPoint="{Binding Path=S1}"
                              IsClosed="True">
                    <ArcSegment Point="{Binding Path=S2}"
                                SweepDirection="Counterclockwise"
                                IsLargeArc="{Binding Path=IsLargeArc}"
                                Size="{Binding Path=OuterSize}"/>
                    <LineSegment Point="{Binding Path=S3}"/>
                    <ArcSegment Point="{Binding Path=S4}"
                                SweepDirection="Clockwise"
                                IsLargeArc="{Binding Path=IsLargeArc}"
                                Size="{Binding Path=InnerSize}"/>
                  </PathFigure>
                </PathGeometry>
              </Path.Data>
            </Path>

            <!-- the text label for this segment -->
            <TextBlock Text="{Binding Path=LabelText}"
                        Visibility="{Binding Path=SweepAngle, Converter={StaticResource DoubleToVisibility}, ConverterParameter=3}"
                        Canvas.Top="{Binding Path=ViewModel.LabelLocation.Y}"
                        Canvas.Left="{Binding Path=ViewModel.LabelLocation.X}"
                        x:Name="label"
                        Height="20"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center">
             <TextBlock.RenderTransform>
                <TransformGroup>
                  <TranslateTransform X="0" Y="-10"/>
                  <RotateTransform Angle="{Binding Path=MidPointAngle, Converter={StaticResource NegateDouble}}"/>
                  <RotateTransform Angle="90"/>
                </TransformGroup>
              </TextBlock.RenderTransform>
            </TextBlock>         
          
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:RelationshipGraph">
    <Setter Property="ConnectorFillInterpolator">
      <Setter.Value>
        <datavis:SolidColorBrushInterpolator To="#55000000" From="#99000000" />
      </Setter.Value>
    </Setter>
    <Setter Property="SegmentFillInterpolator">
      <Setter.Value>
        <datavis:SolidColorBrushInterpolator  To="DarkRed" From="DarkBlue" />
      </Setter.Value>
    </Setter>
    <Setter Property="ConnectorThickness">
      <Setter.Value>
        <local:DoubleRange Minimum="0.5" Maximum="8"/>
      </Setter.Value>
    </Setter>
    <Setter Property="NodeSegmentStyle">
      <Setter.Value>
        <Style TargetType="local:NodeSegment">
          <Setter Property="Stroke" Value="White"/>
          <Setter Property="StrokeThickness" Value="2"/>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:RelationshipGraph">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid x:Name="graphContainer">
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:NodeConnection">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:NodeConnection">
          <Canvas x:Name="rootElement">
            <vsm:VisualStateManager.VisualStateGroups>
              <vsm:VisualStateGroup x:Name="CommonStates">
                <vsm:VisualState x:Name="Normal">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="connectorPath"
                                    Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"
                                    Duration="0:0:0.2"/>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Highlighted">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="connectorPath"
                                    Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"
                                    To="Red" Duration="0:0:0.2" />
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            
            <Path Stroke="{Binding Path=Stroke}"
                  StrokeThickness="{Binding Path=StrokeThickness}"
                  x:Name="connectorPath">
              <Path.Data>
                <PathGeometry>
                  <PathFigure StartPoint="{Binding Path=From}"
                              IsClosed="False">
                    <ArcSegment Point="{Binding Path=To}"
                                Size="{Binding Path=ViewModel.Size}"
                                SweepDirection="{Binding Path=ViewModel.SweepDirection}"/>
                  </PathFigure>
                </PathGeometry>
              </Path.Data>
            </Path>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
