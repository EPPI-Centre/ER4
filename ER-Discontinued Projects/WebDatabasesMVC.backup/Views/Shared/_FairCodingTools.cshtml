@using Microsoft.AspNetCore.Mvc;
@{
    //this is a trick, to ensure the JS method ItemsWithThisCode will work from pages with urls like "[root]/fair", "[root]/fair/Index", "[root]/fair/", "[root]/fair/Topic?TopicId=121783" and more... 

}
<script type="text/javascript">
    var treeviewData = null;
    var dataItem = null;
    var withTheseCodes = [];
    var withoutTheseCodes = [];
    function ItemsWithThisCode() {

        var elem = document.getElementById("AdvancedBtn");
        var txt = elem.textContent || elem.innerText;

        if ((txt == "Close Advanced...") &&
            ((withTheseCodes.length > 0) || (withoutTheseCodes.length > 0))) {
            AdvancedCodesSearch();
        }
        else {
            console.log(dataItem);
            if (dataItem && !dataItem.isCodeset)
                window.location.href = pathRoot + 'Fair/Topic?TopicId=' + dataItem.id;
        }
    }

    function TreeViewSelection(e) {
        if (treeviewData == null) retrun;
        dataItem = treeviewData.dataItem(e.node);
        console.log(dataItem);
        if (!dataItem) {
            $("#GoToItemsWithThisCodeSB").prop("disabled", true);
            $("#AddWithThisCodeBtn").prop("disabled", true);
            $("#AddWithoutThisCodeBtn").prop("disabled", true);
            return;
        }
        if (dataItem.items && dataItem.items.length > 0) {
            $("#GoToItemsWithThisCodeSB").prop("disabled", true);
            $("#AddWithThisCodeBtn").prop("disabled", true);
            $("#AddWithoutThisCodeBtn").prop("disabled", true);
        }
        else {
            $("#GoToItemsWithThisCodeSB").prop("disabled", false);
            $("#AddWithThisCodeBtn").prop("disabled", false);
            $("#AddWithoutThisCodeBtn").prop("disabled", false);
        }
        if (dataItem.isCodeset) {
            $("#GoToItemsWithThisCodeSB").prop("disabled", true);
            $("#AddWithThisCodeBtn").prop("disabled", true);
            $("#AddWithoutThisCodeBtn").prop("disabled", true);
        }
        /*else {
            if (withoutTheseCodes.findIndex(f => f.id == dataItem.id) == -1 && withTheseCodes.findIndex(f => f.id == dataItem.id) == -1) {
                $("#AddWithThisCodeBtn").prop("disabled", false);
                $("#AddWithoutThisCodeBtn").prop("disabled", false);
            } else {
                $("#AddWithThisCodeBtn").prop("disabled", true);
                $("#AddWithoutThisCodeBtn").prop("disabled", true);
            }
        }*/
    }
    function expandTreeNode(Uid) {
        //treeviewData

        var nodeitem = treeviewData.findByUid(Uid);

        if (nodeitem.length > 0) {
            treeviewData.select(nodeitem);
            var parent = treeviewData.parent(nodeitem);
            while (parent && parent.length > 0) {
                treeviewData.expand(parent);
                parent = treeviewData.parent(parent);
            }
            const tV = $("#treeView");
            var b2 = treeviewData.select()[0];
            var itemScrollTop = b2.offsetTop;
            let counter = 0;
            while (counter < 1000 && b2.offsetParent && b2.className != "card full-height") {
                counter++;
                //console.log(b2.innerText);
                b2 = b2.offsetParent;
                itemScrollTop = itemScrollTop + b2.offsetTop;
            }
            tV.animate({ scrollTop: itemScrollTop - 85 });
        }
    }
    function ToggleAdvanced() {
        const btn = $("#AdvancedBtn");
        if (btn.text() == "Advanced...") {
            btn.text("Close Advanced...");
            $("#AdvancedCodesPanel").show();
            withTheseCodes = [];
            withoutTheseCodes = [];
        } else {
            $("#AdvancedCodesSearchBtn").prop("disabled", true);
            $("#WithTheseCodesList").html('');
            $("#WithoutTheseCodesList").html('');
            btn.text("Advanced...");
            $("#AdvancedCodesPanel").hide();
        }
    }
    function AddWithThisCode() {
        withTheseCodes.push(dataItem);
        $("#AdvancedCodesSearchBtn").prop("disabled", false);
        let html = "";

        let withCodeIndex = 0;
        for (let node of withTheseCodes) {
            html += "<div class='border-bottom small'>" +
                "<button class='btn-xs btn-link' onclick='RemoveWith(" + withCodeIndex + ")'>" +
                "<span class='btn-label'><i class='flaticon-cross'></i></span></button>&nbsp;" +
                node.text + "</div>";
            withCodeIndex = withCodeIndex + 1;

            //html += "<div class='border-bottom small'>" + node.text + "</div>";
        }
        $("#WithTheseCodesList").html(html);
        $("#AddWithThisCodeBtn").prop("disabled", true);
        $("#AddWithoutThisCodeBtn").prop("disabled", true);
    }

    function AddWithoutThisCode() {
        withoutTheseCodes.push(dataItem);
        $("#AdvancedCodesSearchBtn").prop("disabled", false);
        let html = "";

        let withoutCodeIndex = 0;
        for (let node of withoutTheseCodes) {
            html += "<div class='border-bottom small'>" +
                "<button class='btn-xs btn-link' onclick='RemoveWithout(" + withoutCodeIndex + ")'>" +
                "<span class='btn-label'><i class='flaticon-cross'></i></span></button>&nbsp;" +
                node.text + "</div>";
            withoutCodeIndex = withoutCodeIndex + 1;

            //html += "<div class='border-bottom small'>" + node.text + "</div>";
        }
        $("#WithoutTheseCodesList").html(html);
        $("#AddWithThisCodeBtn").prop("disabled", true);
        $("#AddWithoutThisCodeBtn").prop("disabled", true);
    }

    function RemoveWith(withCodeIndex) {
        withTheseCodes.splice(withCodeIndex, 1);
        let htmlWith = "";

        let withCodeIndexTmp = 0;
        for (let node of withTheseCodes) {
            htmlWith += "<div class='border-bottom small'>" +
                "<button class='btn-xs btn-link' onclick='RemoveWith(" + withCodeIndexTmp + ")'>" +
                "<span class='btn-label'><i class='flaticon-cross'></i></span></button>&nbsp;" +
                node.text + "</div>";
            withCodeIndexTmp = withCodeIndexTmp + 1;
        }
        $("#WithTheseCodesList").html(htmlWith);
    }

    function RemoveWithout(withoutCodeIndex) {
        withoutTheseCodes.splice(withoutCodeIndex, 1);
        let htmlWithout = "";
        let withoutCodeIndexTmp = 0;
        for (let node of withoutTheseCodes) {
            htmlWithout += "<div class='border-bottom small'>" +
                "<button class='btn-xs btn-link' onclick='RemoveWithout(" + withoutCodeIndexTmp + ")'>" +
                "<span class='btn-label'><i class='flaticon-cross'></i></span></button>&nbsp;" +
                node.text + "</div>";
            withoutCodeIndexTmp = withoutCodeIndexTmp + 1;
        }
        $("#WithoutTheseCodesList").html(htmlWithout);
    }

    function AdvancedCodesSearch() {
        //WithAttIds, string WithSetId, string WithoutAttIds, string WithoutSetId, string included, string Description
        if (withTheseCodes.length + withoutTheseCodes.length < 1) return;

        let WithAttIds = "";
        let WithSetId = "";
        let WithoutAttIds = "";
        let WithoutSetId = "";
        let Description = "Custom list:";
        if (withTheseCodes.length > 0) {
            Description += " with (all) these codes [";
            for (let code of withTheseCodes) {
                WithAttIds += code.id.toString() + ", ";
                WithSetId += code.setId.toString() + ", ";
                Description += code.text + ", ";
            }
            WithAttIds = WithAttIds.substring(0, WithAttIds.length - 2);
            WithSetId = WithSetId.substring(0, WithSetId.length - 2);
            Description = Description.substring(0, Description.length - 2) + "]";
        }

        if (withoutTheseCodes.length > 0) {
            if (withTheseCodes.length == 0) Description += " without (all) these codes [";
            else Description += " and without (all) these codes [";
            for (let code of withoutTheseCodes) {
                WithoutAttIds += code.id.toString() + ", ";
                WithoutSetId += code.setId.toString() + ", ";
                Description += code.text + ", ";
            }
            WithoutAttIds = WithoutAttIds.substring(0, WithoutAttIds.length - 2);
            WithoutSetId = WithoutSetId.substring(0, WithoutSetId.length - 2);
            Description = Description.substring(0, Description.length - 2) + "]";
        }
        let pars = {
            withAttributesIds: WithAttIds
            , withSetIdsList: WithSetId
            , withOutAttributesIdsList: WithoutAttIds
            , withOutSetIdsList: WithoutSetId
            , description: Description
            , onlyIncluded: 'True'
            , listType: "WebDbWithWithoutCodes"
        };
        
        postwith(pathRoot + "Fair/ListFromCrit", pars);
    }
</script>

<div class="">
    <div class="">
        <div class="py-2">
            <button id="GoToItemsWithThisCodeSB" class="btn btn-secondary btn-sm btn-round" onclick="ItemsWithThisCode()" disabled>List records</button>
            <button id="AdvancedBtn" class="btn btn-sm btn-secondary" onclick="ToggleAdvanced()">Advanced...</button>
        </div>
    </div>
    <div>
        
        <div class="container m-1 p-1 border border-right" style="display:none;" id="AdvancedCodesPanel">
            <div class="row mx-0">
                <button id="AddWithThisCodeBtn" class="btn btn-sm btn-info px-1 py-1 mr-1" onclick="AddWithThisCode()" disabled>
                    <span style="color:black;">With this code</span></button>
                <button id="AddWithoutThisCodeBtn" class="btn btn-sm btn-warning px-1 py-1 mr-1" onclick="AddWithoutThisCode()" disabled>
                    <span style="color:black;">Without this code</span></button>
            </div>
            <div>
                With these codes:
                <div class="alert-primary border-left" id="WithTheseCodesList"></div>
            </div>
            <div>
                Without these codes:
                <div class="alert-warning border-left" id="WithoutTheseCodesList"></div>
            </div>
            <div style="display:none" class="row mx-0 my-1">
                <button id="AdvancedCodesSearchBtn" class="btn btn-primary btn-sm px-2 py-1 mr-1" onclick="AdvancedCodesSearch()" disabled>
                    <span class="btn-label"><i class="flaticon-search-2"></i></span>&nbsp;&nbsp;Go!&nbsp;&nbsp;&nbsp;&nbsp;</button>
                <button  class="btn btn-sm btn-link" onclick="ToggleAdvanced()">Close</button>
            </div>
        </div>
    </div>
    <div class="">
        <div id="treeView" style="overflow: auto;height: 100%;max-height: 75vh;font-size: 14px;color: #000000;font-family: Lato,sans-serif;"></div>
    </div>
</div>