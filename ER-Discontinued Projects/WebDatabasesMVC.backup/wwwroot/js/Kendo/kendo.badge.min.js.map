{"version":3,"sources":["kendo.badge.js"],"names":["f","define","$","undefined","kendo","window","Widget","ui","HIDDEN","iconTemplate","svgIconTemplate","Badge","extend","init","element","options","that","this","fn","call","_deprecated","_content","_appearance","notify","destroy","name","badgeStyle","color","cutoutBorder","data","icon","max","Infinity","placement","position","sizes","small","medium","large","size","shape","template","text","visible","_classNames","value","type","appearance","look","overlay","_text","_template","bind","html","_color","_shape","_sizes","_size","_badgeStyle","_cutoutBorder","_placement","_position","_visible","_updateClassNames","positions","classNames","keepClassNames","sizeAbbr","sizeSuffix","badgeStyleInfix","placementInfix","toLowerCase","removeClass","index","className","indexOf","push","split","length","addClass","join","setOptions","arguments","iconTemplateFunction","_icon","hide","show","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.badge.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.badge', ['kendo.core'], f);\n}(function () {\n    var __meta__ = {\n        id: 'badge',\n        name: 'Badge',\n        category: 'web',\n        description: 'The Badge decorates avatars, navigation menus, or other components in the application when visual notification is needed',\n        depends: ['core']\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo;\n        var Widget = kendo.ui.Widget;\n        var ui = kendo.ui;\n        var HIDDEN = 'k-hidden';\n        var iconTemplate = '<span class=\\'k-badge-icon k-icon k-i-#= icon #\\'></span>';\n        var svgIconTemplate = '<span class=\\'k-badge-icon k-svg-icon\\'>#= icon #</span>';\n        var Badge = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that._deprecated();\n                that._content();\n                that._appearance();\n                kendo.notify(that);\n            },\n            destroy: function () {\n                var that = this;\n                Widget.fn.destroy.call(that);\n            },\n            options: {\n                name: 'Badge',\n                badgeStyle: 'solid',\n                color: 'secondary',\n                cutoutBorder: false,\n                data: {},\n                icon: '',\n                max: Infinity,\n                placement: 'edge',\n                position: 'inline',\n                sizes: {\n                    'small': 'sm',\n                    'medium': '',\n                    'large': 'lg'\n                },\n                size: 'medium',\n                shape: 'rounded',\n                template: null,\n                text: '',\n                visible: true,\n                _classNames: []\n            },\n            _deprecated: function () {\n                var that = this;\n                var options = that.options;\n                if (options.text === '' && options.value !== '' && options.value !== undefined) {\n                    options.text = options.value;\n                }\n                if (options.color === 'secondary' && typeof options.type === 'string' && options.type !== '') {\n                    options.color = options.type;\n                }\n                if (options.shape === 'rounded' && typeof options.appearance === 'string' && options.appearance !== '') {\n                    options.shape = options.appearance;\n                }\n                if (options.badgeStyle === 'solid' && typeof options.look === 'string' && options.look !== '') {\n                    options.badgeStyle = options.look;\n                }\n                if (options.position === 'inline' && typeof options.overlay === 'boolean' && options.overlay === true) {\n                    options.position = 'top end';\n                }\n            },\n            _content: function () {\n                var that = this;\n                var text = that.options.text;\n                var template = that.options.template;\n                var data = that.options.data;\n                var icon = that.options.icon;\n                if (template !== null) {\n                    that._text = text;\n                    that._template = kendo.template(template).bind(that);\n                    that.element.html(that._template(data));\n                    return;\n                }\n                if (icon !== '') {\n                    that.icon(icon);\n                    return;\n                }\n                if (text !== '') {\n                    that.text(text);\n                    return;\n                }\n                that.text(that.element.html());\n            },\n            _appearance: function () {\n                var that = this;\n                that._color = that.options.color;\n                that._shape = that.options.shape;\n                that._sizes = that.options.sizes;\n                that._size = that.options.size;\n                that._badgeStyle = that.options.badgeStyle;\n                that._cutoutBorder = that.options.cutoutBorder;\n                that._placement = that.options.placement;\n                that._position = that.options.position;\n                that._visible = that.options.visible;\n                that._updateClassNames();\n            },\n            _updateClassNames: function () {\n                var that = this;\n                var classNames = ['k-badge'];\n                var keepClassNames = that.options._classNames;\n                var color = that._color;\n                var shape = that._shape;\n                var sizes = that._sizes;\n                var size = that._size;\n                var sizeAbbr = sizes[size] === undefined ? size : sizes[size];\n                var sizeSuffix = '';\n                var badgeStyle = that._badgeStyle;\n                var badgeStyleInfix = '';\n                var cutoutBorder = this._cutoutBorder;\n                var placement = that._placement;\n                var placementInfix = '';\n                var position = this._position.toLowerCase();\n                var positions;\n                var visible = that._visible;\n                that.element.removeClass(function (index, className) {\n                    if (className.indexOf('k-') === 0 && keepClassNames.indexOf(className) === -1) {\n                        that.element.removeClass(className);\n                    }\n                });\n                if (typeof badgeStyle === 'string' && badgeStyle !== '' && badgeStyle !== 'solid') {\n                    classNames.push('k-badge-' + badgeStyle);\n                    badgeStyleInfix = badgeStyle + '-';\n                }\n                if (typeof color === 'string' && color !== '' && color !== 'inherit') {\n                    classNames.push('k-badge-' + badgeStyleInfix + color);\n                }\n                if (typeof size === 'string' && size !== '' && size !== 'medium' && sizeAbbr !== '') {\n                    classNames.push('k-badge-' + sizeAbbr);\n                    sizeSuffix = '-' + sizeAbbr;\n                }\n                if (typeof shape === 'string' && shape !== '' && shape !== 'rectangle') {\n                    classNames.push('k-badge-' + shape);\n                    if (sizeSuffix !== '') {\n                        classNames.push('k-badge-' + shape + sizeSuffix);\n                    }\n                }\n                if (typeof cutoutBorder === 'boolean' && cutoutBorder === true) {\n                    classNames.push('k-badge-border-cutout');\n                }\n                if (typeof placement === 'string' && placement !== '' && placement !== 'edge') {\n                    placementInfix = placement + '-';\n                }\n                if (typeof position === 'string' && position.split(' ').length == 2) {\n                    positions = position.split(' ');\n                    classNames.push('k-badge-' + placementInfix + positions[0] + '-' + positions[1]);\n                }\n                if (visible === false) {\n                    classNames.push(HIDDEN);\n                }\n                that.element.addClass(classNames.join(' '));\n            },\n            setOptions: function (options) {\n                var that = this;\n                that.element.removeClass(function (index, className) {\n                    if (className.indexOf('k-') >= 0) {\n                        that.element.removeClass(className);\n                    }\n                });\n                Widget.fn.setOptions.call(that, options);\n                that._deprecated();\n                that._content();\n                that._appearance();\n            },\n            text: function (text) {\n                var that = this;\n                var max = that.options.max;\n                if (arguments.length === 0 || text === undefined) {\n                    return that._text;\n                }\n                that._text = text;\n                if (text === true || text === false || text === null) {\n                    that.element.html('');\n                    return;\n                }\n                if (typeof text === 'string') {\n                    that.element.html(text);\n                    return;\n                }\n                if (typeof text === 'number') {\n                    if (text > max) {\n                        that.element.html(max + '+');\n                    } else {\n                        that.element.html(text);\n                    }\n                    return;\n                }\n                if (typeof text === 'object' && 'toString' in text) {\n                    that.element.html(text.toString());\n                    return;\n                }\n            },\n            icon: function (icon) {\n                var that = this;\n                var iconTemplateFunction;\n                if (arguments.length === 0 || icon === undefined) {\n                    return that._icon;\n                }\n                that._icon = icon;\n                if (icon.indexOf('<svg') === 0) {\n                    iconTemplateFunction = kendo.template(svgIconTemplate);\n                    that.element.html(iconTemplateFunction({ icon: icon }));\n                    return;\n                }\n                iconTemplateFunction = kendo.template(iconTemplate);\n                that.element.html(iconTemplateFunction({ icon: icon }));\n            },\n            color: function (color) {\n                var that = this;\n                if (arguments.length === 0 || color === undefined) {\n                    return that._color;\n                }\n                that._color = color;\n                that._updateClassNames();\n            },\n            shape: function (shape) {\n                var that = this;\n                if (arguments.length === 0 || shape === undefined) {\n                    return that._shape;\n                }\n                that._shape = shape;\n                that._updateClassNames();\n            },\n            hide: function () {\n                var that = this;\n                that._visible = false;\n                that._updateClassNames();\n            },\n            show: function () {\n                var that = this;\n                that._visible = true;\n                that._updateClassNames();\n            }\n        });\n        Badge.fn.value = Badge.fn.text;\n        ui.plugin(Badge);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}