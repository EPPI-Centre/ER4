{"version":3,"sources":["kendo.editable.js"],"names":["f","define","$","undefined","fieldType","field","type","convertToValueBinding","container","find","kendo","attr","each","bindAttr","binding","this","getAttribute","bindingName","fieldName","name","indexOf","length","createAttributes","options","ruleName","rule","culture","numberFormat","stringRule","attributeName","model","fields","validation","attributes","DATATYPE","BINDING","id","title","inArray","specialRules","isFunction","getCulture","replace","POINT","isPlainObject","value","message","autocomplete","AUTOCOMPLETEVALUE","addIdAttribute","removeAttr","convertItems","items","idx","item","text","result","getEditorTag","tag","checkboxes","addValidationRules","modelField","rules","descriptor","window","ui","Widget","extend","oldIE","support","browser","msie","version","nameSpecialCharRegExp","ERRORTEMPLATE","CHANGE","EQUAL_SET","kendoEditors","editors","number","appendTo","kendoNumericTextBox","format","date","_extractFormat","kendoDatePicker","string","addClass","boolean","values","stringify","kendoEditor","editor","editorOptions","mobileEditors","index","select","Editable","init","element","that","target","$angular","pane","_isMobile","fn","call","_validateProxy","proxy","_validate","refresh","events","clearContainer","validateOnBlur","validationSummary","errorTemplate","skipFocus","isObject","isValuesEditor","isCustomEditor","isKendoEditor","append","e","input","preventChangeTrigger","_validationEventInProgress","bindAttribute","bindingRegex","RegExp","filter","test","is","val","validatable","validateInput","trigger","preventDefault","end","validate","destroy","angular","elements","unbind","removeData","modelFields","focusable","empty","isArray","data","map","dataItem","bind","Validator","eq","focus","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.editable.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.editable', [\n        'kendo.dropdownlist',\n        'kendo.datepicker',\n        'kendo.numerictextbox',\n        'kendo.validator',\n        'kendo.binder'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'editable',\n        name: 'Editable',\n        category: 'framework',\n        depends: [\n            'dropdownlist',\n            'datepicker',\n            'numerictextbox',\n            'validator',\n            'binder'\n        ],\n        hidden: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, Widget = ui.Widget, extend = $.extend, oldIE = kendo.support.browser.msie && kendo.support.browser.version < 9, isFunction = kendo.isFunction, isPlainObject = $.isPlainObject, inArray = $.inArray, POINT = '.', AUTOCOMPLETEVALUE = 'off', nameSpecialCharRegExp = /(\"|\\%|'|\\[|\\]|\\$|\\.|\\,|\\:|\\;|\\+|\\*|\\&|\\!|\\#|\\(|\\)|<|>|\\=|\\?|\\@|\\^|\\{|\\}|\\~|\\/|\\||`)/g, ERRORTEMPLATE = '<div class=\"k-tooltip k-tooltip-error k-validator-tooltip\">' + '<span class=\"k-tooltip-icon k-icon k-i-warning\"></span>' + '<span class=\"k-tooltip-content\">#= message #</span>' + '<span class=\"k-callout k-callout-n\"></span>' + '</div>', CHANGE = 'change';\n        var EQUAL_SET = 'equalSet';\n        var specialRules = [\n            'url',\n            'email',\n            'number',\n            'date',\n            'boolean'\n        ];\n        function fieldType(field) {\n            field = field != null ? field : '';\n            return field.type || $.type(field) || 'string';\n        }\n        function convertToValueBinding(container) {\n            container.find(':input:not(:button, .k-combobox .k-input, [' + kendo.attr('role') + '=listbox], [' + kendo.attr('role') + '=upload], [' + kendo.attr('skip') + '], [type=file])').each(function () {\n                var bindAttr = kendo.attr('bind'), binding = this.getAttribute(bindAttr) || '', bindingName = this.type === 'checkbox' || this.type === 'radio' ? 'checked:' : 'value:', fieldName = this.name;\n                if (binding.indexOf(bindingName) === -1 && fieldName) {\n                    binding += (binding.length ? ',' : '') + bindingName + fieldName;\n                    $(this).attr(bindAttr, binding);\n                }\n            });\n        }\n        function createAttributes(options) {\n            var field = (options.model.fields || options.model)[options.field], type = fieldType(field), validation = field ? field.validation : {}, attributes = field ? field.attributes : {}, ruleName, DATATYPE = kendo.attr('type'), BINDING = kendo.attr('bind'), rule, attr = {\n                    id: options.id || options.field,\n                    name: options.field,\n                    title: options.title ? options.title : options.field\n                };\n            for (ruleName in validation) {\n                rule = validation[ruleName];\n                if (inArray(ruleName, specialRules) >= 0) {\n                    attr[DATATYPE] = ruleName;\n                } else if (!isFunction(rule)) {\n                    var culture = kendo.getCulture();\n                    if (typeof rule === 'number' && culture.name.length) {\n                        var numberFormat = culture.numberFormat;\n                        var stringRule = rule.toString().replace(POINT, numberFormat[POINT]);\n                        attr[ruleName] = stringRule;\n                    } else {\n                        attr[ruleName] = isPlainObject(rule) ? rule.value || ruleName : rule;\n                    }\n                }\n                attr[kendo.attr(ruleName + '-msg')] = rule.message;\n                attr.autocomplete = AUTOCOMPLETEVALUE;\n            }\n            for (var attributeName in attributes) {\n                attr[attributeName] = attributes[attributeName];\n            }\n            if (inArray(type, specialRules) >= 0) {\n                attr[DATATYPE] = type;\n            }\n            attr[BINDING] = 'value:' + options.field;\n            return attr;\n        }\n        function addIdAttribute(container, attr) {\n            var id = container.attr('id');\n            if (id) {\n                attr.id = id;\n                container.removeAttr('id');\n            }\n            return attr;\n        }\n        function convertItems(items) {\n            var idx, length, item, value, text, result;\n            if (items && items.length) {\n                result = [];\n                for (idx = 0, length = items.length; idx < length; idx++) {\n                    item = items[idx];\n                    text = item.text || item.value || item;\n                    value = item.value == null ? item.text || item : item.value;\n                    result[idx] = {\n                        text: text,\n                        value: value\n                    };\n                }\n            }\n            return result;\n        }\n        function getEditorTag(type, options) {\n            var tag;\n            if (!type.length) {\n                return;\n            }\n            if (type === 'DropDownTree' && options && options.checkboxes || type === 'MultiSelect') {\n                tag = '<select />';\n            } else {\n                tag = type === 'Editor' ? '<textarea />' : '<input />';\n            }\n            return tag;\n        }\n        var kendoEditors = [\n            'AutoComplete',\n            'ColorPicker',\n            'ComboBox',\n            'DateInput',\n            'DatePicker',\n            'DateTimePicker',\n            'DropDownTree',\n            'Editor',\n            'MaskedTextBox',\n            'MultiColumnComboBox',\n            'MultiSelect',\n            'NumericTextBox',\n            'Rating',\n            'Slider',\n            'Switch',\n            'TimePicker',\n            'DropDownList'\n        ];\n        var editors = {\n            'number': function (container, options) {\n                var attr = createAttributes(options);\n                $('<input type=\"text\"/>').attr(attr).appendTo(container).kendoNumericTextBox({ format: options.format });\n                $('<span ' + kendo.attr('for') + '=\"' + options.field + '\" class=\"k-invalid-msg k-hidden\"/>').appendTo(container);\n            },\n            'date': function (container, options) {\n                var attr = createAttributes(options), format = options.format;\n                if (format) {\n                    format = kendo._extractFormat(format);\n                }\n                attr[kendo.attr('format')] = format;\n                $('<input type=\"text\"/>').attr(attr).appendTo(container).kendoDatePicker({ format: options.format });\n                $('<span ' + kendo.attr('for') + '=\"' + options.field + '\" class=\"k-invalid-msg k-hidden\"/>').appendTo(container);\n            },\n            'string': function (container, options) {\n                var attr = createAttributes(options);\n                $('<input type=\"text\" />').attr(attr).addClass('k-textbox').appendTo(container);\n            },\n            'boolean': function (container, options) {\n                var attr = createAttributes(options);\n                $('<input type=\"checkbox\" />').attr(attr).addClass('k-checkbox').appendTo(container);\n            },\n            'values': function (container, options) {\n                var attr = createAttributes(options);\n                var items = kendo.stringify(convertItems(options.values));\n                $('<select ' + kendo.attr('text-field') + '=\"text\"' + kendo.attr('value-field') + '=\"value\"' + kendo.attr('source') + '=\\'' + (items ? items.replace(/\\'/g, '&apos;') : items) + '\\'' + kendo.attr('role') + '=\"dropdownlist\"/>').attr(attr).appendTo(container);\n                $('<span ' + kendo.attr('for') + '=\"' + options.field + '\" class=\"k-invalid-msg  k-hidden\"/>').appendTo(container);\n            },\n            'kendoEditor': function (container, options) {\n                var attr = createAttributes(options);\n                var type = options.editor;\n                var editor = 'kendo' + type;\n                var editorOptions = options.editorOptions;\n                var tag = getEditorTag(type, editorOptions);\n                $(tag).attr(attr).appendTo(container)[editor](editorOptions);\n            }\n        };\n        var mobileEditors = {\n            'number': function (container, options) {\n                var attr = createAttributes(options);\n                attr = addIdAttribute(container, attr);\n                $('<input type=\"number\"/>').attr(attr).appendTo(container);\n            },\n            'date': function (container, options) {\n                var attr = createAttributes(options);\n                attr = addIdAttribute(container, attr);\n                $('<input type=\"date\"/>').attr(attr).appendTo(container);\n            },\n            'string': function (container, options) {\n                var attr = createAttributes(options);\n                attr = addIdAttribute(container, attr);\n                $('<input type=\"text\" />').attr(attr).appendTo(container);\n            },\n            'boolean': function (container, options) {\n                var attr = createAttributes(options);\n                attr = addIdAttribute(container, attr);\n                $('<input type=\"checkbox\" />').attr(attr).appendTo(container);\n            },\n            'values': function (container, options) {\n                var attr = createAttributes(options);\n                var items = options.values;\n                var select = $('<select />');\n                attr = addIdAttribute(container, attr);\n                for (var index in items) {\n                    $('<option value=\"' + items[index].value + '\">' + items[index].text + '</option>').appendTo(select);\n                }\n                select.attr(attr).appendTo(container);\n            }\n        };\n        function addValidationRules(modelField, rules) {\n            var validation = modelField ? modelField.validation || {} : {}, rule, descriptor;\n            for (rule in validation) {\n                descriptor = validation[rule];\n                if (isPlainObject(descriptor) && descriptor.value) {\n                    descriptor = descriptor.value;\n                }\n                if (isFunction(descriptor)) {\n                    rules[rule] = descriptor;\n                }\n            }\n        }\n        var Editable = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                if (options.target) {\n                    options.$angular = options.target.options.$angular;\n                    if (options.target.pane) {\n                        that._isMobile = true;\n                    }\n                }\n                Widget.fn.init.call(that, element, options);\n                that._validateProxy = $.proxy(that._validate, that);\n                that.refresh();\n            },\n            events: [CHANGE],\n            options: {\n                name: 'Editable',\n                editors: editors,\n                mobileEditors: mobileEditors,\n                clearContainer: true,\n                validateOnBlur: true,\n                validationSummary: false,\n                errorTemplate: ERRORTEMPLATE,\n                skipFocus: false\n            },\n            editor: function (field, modelField) {\n                var that = this, editors = that._isMobile ? mobileEditors : that.options.editors, isObject = isPlainObject(field), fieldName = isObject ? field.field : field, model = that.options.model || {}, isValuesEditor = isObject && field.values, type = isValuesEditor ? 'values' : fieldType(modelField), isCustomEditor = isObject && field.editor, isKendoEditor = isObject && $.inArray(field.editor, kendoEditors) !== -1, editor = isCustomEditor ? field.editor : editors[type], container = that.element.find('[' + kendo.attr('container-for') + '=' + fieldName.replace(nameSpecialCharRegExp, '\\\\$1') + ']');\n                editor = editor ? editor : editors.string;\n                if (isKendoEditor) {\n                    editor = editors.kendoEditor;\n                } else if (isCustomEditor && typeof field.editor === 'string') {\n                    editor = function (container) {\n                        container.append(field.editor);\n                    };\n                }\n                container = container.length ? container : that.element;\n                editor(container, extend(true, {}, isObject ? field : { field: fieldName }, { model: model }));\n            },\n            _validate: function (e) {\n                var that = this, input, value = e.value, preventChangeTrigger = that._validationEventInProgress, values = {}, bindAttribute = kendo.attr('bind'), fieldName = e.field.replace(nameSpecialCharRegExp, '\\\\$1'), bindingRegex = new RegExp('(value|checked)\\\\s*:\\\\s*' + fieldName + '\\\\s*(,|$)');\n                values[e.field] = e.value;\n                input = $(':input[' + bindAttribute + '*=\"' + fieldName + '\"]', that.element).filter('[' + kendo.attr('validate') + '!=\\'false\\']').filter(function () {\n                    return bindingRegex.test($(this).attr(bindAttribute));\n                });\n                if (input.length > 1) {\n                    input = input.filter(function () {\n                        var element = $(this);\n                        return !element.is(':radio') || element.val() == value;\n                    });\n                }\n                try {\n                    that._validationEventInProgress = true;\n                    if (!that.validatable.validateInput(input) || !preventChangeTrigger && that.trigger(CHANGE, { values: values })) {\n                        e.preventDefault();\n                    }\n                } finally {\n                    that._validationEventInProgress = false;\n                }\n            },\n            end: function () {\n                return this.validatable.validate();\n            },\n            destroy: function () {\n                var that = this;\n                that.angular('cleanup', function () {\n                    return { elements: that.element };\n                });\n                Widget.fn.destroy.call(that);\n                that.options.model.unbind('set', that._validateProxy);\n                that.options.model.unbind(EQUAL_SET, that._validateProxy);\n                kendo.unbind(that.element);\n                if (that.validatable) {\n                    that.validatable.destroy();\n                }\n                kendo.destroy(that.element);\n                that.element.removeData('kendoValidator');\n                if (that.element.is('[' + kendo.attr('role') + '=editable]')) {\n                    that.element.removeAttr(kendo.attr('role'));\n                }\n            },\n            refresh: function () {\n                var that = this, idx, length, fields = that.options.fields || [], container = that.options.clearContainer ? that.element.empty() : that.element, model = that.options.model || {}, rules = {}, field, isObject, fieldName, modelField, modelFields;\n                if (!$.isArray(fields)) {\n                    fields = [fields];\n                }\n                for (idx = 0, length = fields.length; idx < length; idx++) {\n                    field = fields[idx];\n                    isObject = isPlainObject(field);\n                    fieldName = isObject ? field.field : field;\n                    modelField = (model.fields || model)[fieldName];\n                    addValidationRules(modelField, rules);\n                    that.editor(field, modelField);\n                }\n                if (that.options.target) {\n                    that.angular('compile', function () {\n                        return {\n                            elements: container,\n                            data: container.map(function () {\n                                return { dataItem: model };\n                            })\n                        };\n                    });\n                }\n                if (!length) {\n                    modelFields = model.fields || model;\n                    for (fieldName in modelFields) {\n                        addValidationRules(modelFields[fieldName], rules);\n                    }\n                }\n                convertToValueBinding(container);\n                if (that.validatable) {\n                    that.validatable.destroy();\n                }\n                kendo.bind(container, that.options.model);\n                if (that.options.validateOnBlur) {\n                    that.options.model.unbind('set', that._validateProxy).bind('set', that._validateProxy);\n                    that.options.model.unbind(EQUAL_SET, that._validateProxy).bind(EQUAL_SET, that._validateProxy);\n                }\n                that.validatable = new kendo.ui.Validator(container, {\n                    validateOnBlur: that.options.validateOnBlur,\n                    validationSummary: that.options.validationSummary,\n                    errorTemplate: that.options.errorTemplate || undefined,\n                    rules: rules\n                });\n                if (!that.options.skipFocus) {\n                    var focusable = container.find(':kendoFocusable').eq(0).focus();\n                    if (oldIE) {\n                        focusable.focus();\n                    }\n                }\n            }\n        });\n        ui.plugin(Editable);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}