{"version":3,"sources":["kendo.numerictextbox.js"],"names":["f","define","$","undefined","buttonHtml","direction","text","className","CLASS_ICON","truncate","value","precision","parts","parseFloat","split","POINT","substring","join","kendo","window","caret","keys","ui","Widget","activeElement","_activeElement","extractFormat","_extractFormat","parse","placeholderSupported","support","placeholder","getCulture","CHANGE","DISABLED","READONLY","INPUT","SPIN","ns","TOUCHEND","MOUSELEAVE","HOVEREVENTS","DEFAULT","FOCUSED","HOVER","FOCUS","LABELCLASSES","SELECTED","STATEDISABLED","STATE_INVALID","ARIA_DISABLED","INTEGER_REGEXP","NULL","proxy","isPlainObject","extend","NumericTextBox","init","element","options","min","max","step","disabled","inputType","that","this","isStep","fn","call","on","_focusout","attr","_parse","_initialOptions","_reset","_wrapper","_arrows","_validation","_input","mobileOS","_text","browser","edge","one","_toggleText","focus","_click","factor","format","val","is","parents","enable","readonly","angular","elements","get","_label","notify","name","decimals","restrictDecimals","round","culture","spinners","upArrowText","downArrowText","label","events","_editable","disable","add","wrapper","_inputWrapper","off","_upArrowEventHandler","unbind","_downArrowEventHandler","_inputLabel","addClass","removeClass","_toggleHover","removeAttr","bind","e","preventDefault","_spin","_upArrow","_downArrow","_keydown","_keyup","_paste","_inputHandler","floatingLabel","setOptions","_arrowsWrap","toggle","toggleClass","prop","_placeholder","aria-valuemin","aria-valuemax","destroy","_form","_resetHandler","_option","adjusted","_value","_adjust","_update","_old","_focusin","arrows","_release","clearTimeout","_spinning","siblings","insertAfter","wrapAll","parent","eq","UserEvents","release","_validationIcon","hide","_blur","_change","_focusing","setTimeout","result","groupRegExp","extractRegExp","input","target","idx","_format","group","caretPosition","RegExp","exec","replace","length","indexOf","_typing","trigger","_culture","_removeInvalidState","numberFormat","toLowerCase","currency","percent","CLASSNAME","show","accessKey","find","insertBefore","setAttribute","type","title","tabIndex","style","cssText","role","autocomplete","key","keyCode","NUMPAD_DOT","_numPadDot","DOWN","_step","UP","ENTER","TAB","_cachedCaret","decimalSeparator","minInvalid","charAt","_numericRegex","test","_oldText","_blinkInvalidState","_addInvalidState","_invalidStateTimeout","separator","fractionRule","_separator","_floatRegExp","option","timeout","originalValue","toFixed","currentTarget","_round","rounder","isNotNull","toString","floating","labelText","id","content","_floatingLabelContainer","wrap","FloatingLabel","widget","isFunction","guid","DOMElement","width","css","firstChild","formId","form","closest","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.numerictextbox.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.numerictextbox', [\n        'kendo.core',\n        'kendo.userevents',\n        'kendo.floatinglabel'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'numerictextbox',\n        name: 'NumericTextBox',\n        category: 'web',\n        description: 'The NumericTextBox widget can format and display numeric, percentage or currency textbox.',\n        depends: [\n            'core',\n            'userevents',\n            'floatinglabel'\n        ]\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, caret = kendo.caret, keys = kendo.keys, ui = kendo.ui, Widget = ui.Widget, activeElement = kendo._activeElement, extractFormat = kendo._extractFormat, parse = kendo.parseFloat, placeholderSupported = kendo.support.placeholder, getCulture = kendo.getCulture, CHANGE = 'change', DISABLED = 'disabled', READONLY = 'readonly', INPUT = 'k-input', SPIN = 'spin', ns = '.kendoNumericTextBox', TOUCHEND = 'touchend', MOUSELEAVE = 'mouseleave' + ns, HOVEREVENTS = 'mouseenter' + ns + ' ' + MOUSELEAVE, DEFAULT = 'k-state-default', FOCUSED = 'k-state-focused', HOVER = 'k-state-hover', FOCUS = 'focus', POINT = '.', CLASS_ICON = 'k-icon', LABELCLASSES = 'k-label k-input-label', SELECTED = 'k-state-selected', STATEDISABLED = 'k-state-disabled', STATE_INVALID = 'k-state-invalid', ARIA_DISABLED = 'aria-disabled', INTEGER_REGEXP = /^(-)?(\\d*)$/, NULL = null, proxy = $.proxy, isPlainObject = $.isPlainObject, extend = $.extend;\n        var NumericTextBox = Widget.extend({\n            init: function (element, options) {\n                var that = this, isStep = options && options.step !== undefined, min, max, step, value, disabled;\n                var inputType;\n                Widget.fn.init.call(that, element, options);\n                options = that.options;\n                element = that.element.on('focusout' + ns, proxy(that._focusout, that)).attr('role', 'spinbutton');\n                options.placeholder = options.placeholder || element.attr('placeholder');\n                min = that.min(element.attr('min'));\n                max = that.max(element.attr('max'));\n                step = that._parse(element.attr('step'));\n                if (options.min === NULL && min !== NULL) {\n                    options.min = min;\n                }\n                if (options.max === NULL && max !== NULL) {\n                    options.max = max;\n                }\n                if (!isStep && step !== NULL) {\n                    options.step = step;\n                }\n                that._initialOptions = extend({}, options);\n                inputType = element.attr('type');\n                that._reset();\n                that._wrapper();\n                that._arrows();\n                that._validation();\n                that._input();\n                if (!kendo.support.mobileOS) {\n                    that._text.on(FOCUS + ns, proxy(that._click, that));\n                } else {\n                    that._text.on(TOUCHEND + ns + ' ' + FOCUS + ns, function () {\n                        if (kendo.support.browser.edge) {\n                            that._text.one(FOCUS + ns, function () {\n                                that._toggleText(false);\n                                element.focus();\n                            });\n                        } else {\n                            that._toggleText(false);\n                            element.focus();\n                        }\n                    });\n                }\n                element.attr('aria-valuemin', options.min !== NULL ? options.min * options.factor : options.min).attr('aria-valuemax', options.max !== NULL ? options.max * options.factor : options.max);\n                options.format = extractFormat(options.format);\n                value = options.value;\n                if (value == NULL) {\n                    if (inputType == 'number') {\n                        value = parseFloat(element.val());\n                    } else {\n                        value = element.val();\n                    }\n                }\n                that.value(value);\n                disabled = element.is('[disabled]') || $(that.element).parents('fieldset').is(':disabled');\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is('[readonly]'));\n                }\n                that.angular('compile', function () {\n                    return { elements: that._text.get() };\n                });\n                that._label();\n                kendo.notify(that);\n            },\n            options: {\n                name: 'NumericTextBox',\n                decimals: NULL,\n                restrictDecimals: false,\n                min: NULL,\n                max: NULL,\n                value: NULL,\n                step: 1,\n                round: true,\n                culture: '',\n                format: 'n',\n                spinners: true,\n                placeholder: '',\n                factor: 1,\n                upArrowText: 'Increase value',\n                downArrowText: 'Decrease value',\n                label: null\n            },\n            events: [\n                CHANGE,\n                SPIN\n            ],\n            _editable: function (options) {\n                var that = this, element = that.element, disable = options.disable, readonly = options.readonly, text = that._text.add(element), wrapper = that._inputWrapper.off(HOVEREVENTS);\n                that._toggleText(true);\n                that._upArrowEventHandler.unbind('press');\n                that._downArrowEventHandler.unbind('press');\n                element.off('keydown' + ns).off('keyup' + ns).off('input' + ns).off('paste' + ns);\n                if (that._inputLabel) {\n                    that._inputLabel.off(ns);\n                }\n                if (!readonly && !disable) {\n                    wrapper.addClass(DEFAULT).removeClass(STATEDISABLED).on(HOVEREVENTS, that._toggleHover);\n                    text.removeAttr(DISABLED).removeAttr(READONLY).attr(ARIA_DISABLED, false);\n                    that._upArrowEventHandler.bind('press', function (e) {\n                        e.preventDefault();\n                        that._spin(1);\n                        that._upArrow.addClass(SELECTED);\n                    });\n                    that._downArrowEventHandler.bind('press', function (e) {\n                        e.preventDefault();\n                        that._spin(-1);\n                        that._downArrow.addClass(SELECTED);\n                    });\n                    that.element.on('keydown' + ns, proxy(that._keydown, that)).on('keyup' + ns, proxy(that._keyup, that)).on('paste' + ns, proxy(that._paste, that)).on('input' + ns, proxy(that._inputHandler, that));\n                    if (that._inputLabel) {\n                        that._inputLabel.on('click' + ns, proxy(that.focus, that));\n                    }\n                } else {\n                    wrapper.addClass(disable ? STATEDISABLED : DEFAULT).removeClass(disable ? DEFAULT : STATEDISABLED);\n                    text.attr(DISABLED, disable).attr(READONLY, readonly).attr(ARIA_DISABLED, disable);\n                }\n            },\n            readonly: function (readonly) {\n                var that = this;\n                this._editable({\n                    readonly: readonly === undefined ? true : readonly,\n                    disable: false\n                });\n                if (that.floatingLabel) {\n                    that.floatingLabel.readonly(readonly === undefined ? true : readonly);\n                }\n            },\n            enable: function (enable) {\n                var that = this;\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined ? true : enable)\n                });\n                if (that.floatingLabel) {\n                    that.floatingLabel.enable(enable = enable === undefined ? true : enable);\n                }\n            },\n            setOptions: function (options) {\n                var that = this;\n                Widget.fn.setOptions.call(that, options);\n                that._arrowsWrap.toggle(that.options.spinners);\n                that._inputWrapper.toggleClass('k-expand-padding', !that.options.spinners);\n                that._text.prop('placeholder', that.options.placeholder);\n                that._placeholder(that.options.placeholder);\n                that.element.attr({\n                    'aria-valuemin': that.options.min !== NULL ? that.options.min * that.options.factor : that.options.min,\n                    'aria-valuemax': that.options.max !== NULL ? that.options.max * that.options.factor : that.options.max\n                });\n                that.options.format = extractFormat(that.options.format);\n                if (options.value !== undefined) {\n                    that.value(options.value);\n                }\n            },\n            destroy: function () {\n                var that = this;\n                if (that._inputLabel) {\n                    that._inputLabel.off(ns);\n                    if (that.floatingLabel) {\n                        that.floatingLabel.destroy();\n                    }\n                }\n                that.element.add(that._text).add(that._upArrow).add(that._downArrow).add(that._inputWrapper).off(ns);\n                that._upArrowEventHandler.destroy();\n                that._downArrowEventHandler.destroy();\n                if (that._form) {\n                    that._form.off('reset', that._resetHandler);\n                }\n                Widget.fn.destroy.call(that);\n            },\n            min: function (value) {\n                return this._option('min', value);\n            },\n            max: function (value) {\n                return this._option('max', value);\n            },\n            step: function (value) {\n                return this._option('step', value);\n            },\n            value: function (value) {\n                var that = this, adjusted;\n                if (value === undefined) {\n                    return that._value;\n                }\n                value = that._parse(value);\n                adjusted = that._adjust(value);\n                if (value !== adjusted) {\n                    return;\n                }\n                that._update(value);\n                that._old = that._value;\n            },\n            focus: function () {\n                this._focusin();\n            },\n            _adjust: function (value) {\n                var that = this, options = that.options, min = options.min, max = options.max;\n                if (value === NULL) {\n                    return value;\n                }\n                if (min !== NULL && value < min) {\n                    value = min;\n                } else if (max !== NULL && value > max) {\n                    value = max;\n                }\n                return value;\n            },\n            _arrows: function () {\n                var that = this, arrows, _release = function () {\n                        clearTimeout(that._spinning);\n                        arrows.removeClass(SELECTED);\n                    }, options = that.options, spinners = options.spinners, element = that.element;\n                arrows = element.siblings('.' + CLASS_ICON);\n                if (!arrows[0]) {\n                    arrows = $(buttonHtml('increase', options.upArrowText) + buttonHtml('decrease', options.downArrowText)).insertAfter(element);\n                    that._arrowsWrap = arrows.wrapAll('<span class=\"k-select\"/>').parent();\n                }\n                if (!spinners) {\n                    arrows.parent().toggle(spinners);\n                    that._inputWrapper.addClass('k-expand-padding');\n                }\n                that._upArrow = arrows.eq(0);\n                that._upArrowEventHandler = new kendo.UserEvents(that._upArrow, { release: _release });\n                that._downArrow = arrows.eq(1);\n                that._downArrowEventHandler = new kendo.UserEvents(that._downArrow, { release: _release });\n            },\n            _validation: function () {\n                var that = this;\n                var element = that.element;\n                that._validationIcon = $('<span class=\\'' + CLASS_ICON + ' k-i-warning\\'></span>').hide().insertAfter(element);\n            },\n            _blur: function () {\n                var that = this;\n                that._toggleText(true);\n                that._change(that.element.val());\n            },\n            _click: function (e) {\n                var that = this;\n                clearTimeout(that._focusing);\n                that._focusing = setTimeout(function () {\n                    var input = e.target, idx = caret(input)[0], value = input.value.substring(0, idx), format = that._format(that.options.format), group = format[','], result, groupRegExp, extractRegExp, caretPosition = 0;\n                    if (group) {\n                        groupRegExp = new RegExp('\\\\' + group, 'g');\n                        extractRegExp = new RegExp('(^(-)$)|(^(-)?([\\\\d\\\\' + group + ']+)(\\\\' + format[POINT] + ')?(\\\\d+)?)');\n                    }\n                    if (extractRegExp) {\n                        result = extractRegExp.exec(value);\n                    }\n                    if (result) {\n                        caretPosition = result[0].replace(groupRegExp, '').length;\n                        if (value.indexOf('(') != -1 && that._value < 0) {\n                            caretPosition++;\n                        }\n                    }\n                    that._focusin();\n                    caret(that.element[0], caretPosition);\n                });\n            },\n            _change: function (value) {\n                var that = this, factor = that.options.factor;\n                if (factor && factor !== 1) {\n                    value = kendo.parseFloat(value);\n                    if (value !== null) {\n                        value = value / factor;\n                    }\n                }\n                that._update(value);\n                value = that._value;\n                if (that._old != value) {\n                    that._old = value;\n                    if (!that._typing) {\n                        that.element.trigger(CHANGE);\n                    }\n                    that.trigger(CHANGE);\n                }\n                that._typing = false;\n            },\n            _culture: function (culture) {\n                return culture || getCulture(this.options.culture);\n            },\n            _focusin: function () {\n                var that = this;\n                that._inputWrapper.addClass(FOCUSED);\n                that._toggleText(false);\n                that.element[0].focus();\n            },\n            _focusout: function () {\n                var that = this;\n                clearTimeout(that._focusing);\n                that._inputWrapper.removeClass(FOCUSED).removeClass(HOVER);\n                that._blur();\n                that._removeInvalidState();\n            },\n            _format: function (format, culture) {\n                var numberFormat = this._culture(culture).numberFormat;\n                format = format.toLowerCase();\n                if (format.indexOf('c') > -1) {\n                    numberFormat = numberFormat.currency;\n                } else if (format.indexOf('p') > -1) {\n                    numberFormat = numberFormat.percent;\n                }\n                return numberFormat;\n            },\n            _input: function () {\n                var that = this, options = that.options, CLASSNAME = 'k-formatted-value', element = that.element.addClass(INPUT).show()[0], accessKey = element.accessKey, wrapper = that.wrapper, text;\n                text = wrapper.find(POINT + CLASSNAME);\n                if (!text[0]) {\n                    text = $('<input type=\"text\"/>').insertBefore(element).addClass(CLASSNAME).attr('aria-hidden', 'true');\n                }\n                try {\n                    element.setAttribute('type', 'text');\n                } catch (e) {\n                    element.type = 'text';\n                }\n                text[0].title = element.title;\n                text[0].tabIndex = element.tabIndex;\n                text[0].style.cssText = element.style.cssText;\n                text.prop('placeholder', options.placeholder);\n                if (accessKey) {\n                    text.attr('accesskey', accessKey);\n                    element.accessKey = '';\n                }\n                that._text = text.addClass(element.className).attr({\n                    'role': 'spinbutton',\n                    'aria-valuemin': options.min !== NULL ? options.min * options.factor : options.min,\n                    'aria-valuemax': options.max !== NULL ? options.max * options.factor : options.max,\n                    'autocomplete': 'off'\n                });\n            },\n            _keydown: function (e) {\n                var that = this, key = e.keyCode;\n                if (key === keys.NUMPAD_DOT) {\n                    that._numPadDot = true;\n                }\n                if (key == keys.DOWN) {\n                    that._step(-1);\n                    return;\n                } else if (key == keys.UP) {\n                    that._step(1);\n                    return;\n                } else if (key == keys.ENTER) {\n                    that._change(that.element.val());\n                    return;\n                }\n                if (key != keys.TAB) {\n                    that._typing = true;\n                }\n                that._cachedCaret = caret(that.element);\n            },\n            _keyup: function () {\n                this._removeInvalidState();\n            },\n            _inputHandler: function () {\n                var element = this.element;\n                var value = element.val();\n                var min = this.options.min;\n                var numberFormat = this._format(this.options.format);\n                var decimalSeparator = numberFormat[POINT];\n                var minInvalid = min !== null && min >= 0 && value.charAt(0) === '-';\n                if (this._numPadDot && decimalSeparator !== POINT) {\n                    value = value.replace(POINT, decimalSeparator);\n                    this.element.val(value);\n                    this._numPadDot = false;\n                }\n                if (this._numericRegex(numberFormat).test(value) && !minInvalid) {\n                    this._oldText = value;\n                } else {\n                    this._blinkInvalidState();\n                    this.element.val(this._oldText);\n                    if (this._cachedCaret) {\n                        caret(element, this._cachedCaret[0]);\n                        this._cachedCaret = null;\n                    }\n                }\n            },\n            _blinkInvalidState: function () {\n                var that = this;\n                that._addInvalidState();\n                clearTimeout(that._invalidStateTimeout);\n                that._invalidStateTimeout = setTimeout(proxy(that._removeInvalidState, that), 100);\n            },\n            _addInvalidState: function () {\n                var that = this;\n                that._inputWrapper.addClass(STATE_INVALID);\n                that._validationIcon.show();\n            },\n            _removeInvalidState: function () {\n                var that = this;\n                that._inputWrapper.removeClass(STATE_INVALID);\n                that._validationIcon.hide();\n                that._invalidStateTimeout = null;\n            },\n            _numericRegex: function (numberFormat) {\n                var that = this;\n                var separator = numberFormat[POINT];\n                var precision = that.options.decimals;\n                var fractionRule = '*';\n                if (separator === POINT) {\n                    separator = '\\\\' + separator;\n                }\n                if (precision === NULL) {\n                    precision = numberFormat.decimals;\n                }\n                if (precision === 0 && that.options.restrictDecimals) {\n                    return INTEGER_REGEXP;\n                }\n                if (that.options.restrictDecimals) {\n                    fractionRule = '{0,' + precision + '}';\n                }\n                if (that._separator !== separator) {\n                    that._separator = separator;\n                    that._floatRegExp = new RegExp('^(-)?(((\\\\d+(' + separator + '\\\\d' + fractionRule + ')?)|(' + separator + '\\\\d' + fractionRule + ')))?$');\n                }\n                return that._floatRegExp;\n            },\n            _paste: function (e) {\n                var that = this;\n                var element = e.target;\n                var value = element.value;\n                var numberFormat = that._format(that.options.format);\n                setTimeout(function () {\n                    var result = that._parse(element.value);\n                    if (result === NULL) {\n                        that._update(value);\n                    } else {\n                        element.value = result.toString().replace(POINT, numberFormat[POINT]);\n                        if (that._adjust(result) !== result || !that._numericRegex(numberFormat).test(element.value)) {\n                            that._update(value);\n                        }\n                    }\n                });\n            },\n            _option: function (option, value) {\n                var that = this, element = that.element, options = that.options;\n                if (value === undefined) {\n                    return options[option];\n                }\n                value = that._parse(value);\n                if (!value && option === 'step') {\n                    return;\n                }\n                options[option] = value;\n                element.add(that._text).attr('aria-value' + option, value);\n                element.attr(option, value);\n            },\n            _spin: function (step, timeout) {\n                var that = this;\n                timeout = timeout || 500;\n                clearTimeout(that._spinning);\n                that._spinning = setTimeout(function () {\n                    that._spin(step, 50);\n                }, timeout);\n                that._step(step);\n            },\n            _step: function (step) {\n                var that = this, element = that.element, originalValue = that._value, value = that._parse(element.val()) || 0, precision = that.options.decimals || 2;\n                if (activeElement() != element[0]) {\n                    that._focusin();\n                }\n                if (that.options.factor && value) {\n                    value = value / that.options.factor;\n                }\n                value = +(value + that.options.step * step).toFixed(precision);\n                value = that._adjust(value);\n                that._update(value);\n                that._typing = false;\n                if (originalValue !== value) {\n                    that.trigger(SPIN);\n                }\n            },\n            _toggleHover: function (e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === 'mouseenter');\n            },\n            _toggleText: function (toggle) {\n                var that = this;\n                that._text.toggle(toggle);\n                that.element.toggle(!toggle);\n            },\n            _parse: function (value, culture) {\n                return parse(value, this._culture(culture), this.options.format);\n            },\n            _round: function (value, precision) {\n                var rounder = this.options.round ? kendo._round : truncate;\n                return rounder(value, precision);\n            },\n            _update: function (value) {\n                var that = this, options = that.options, factor = options.factor, format = options.format, decimals = options.decimals, culture = that._culture(), numberFormat = that._format(format, culture), isNotNull;\n                if (decimals === NULL) {\n                    decimals = numberFormat.decimals;\n                }\n                value = that._parse(value, culture);\n                isNotNull = value !== NULL;\n                if (isNotNull) {\n                    value = parseFloat(that._round(value, decimals), 10);\n                }\n                that._value = value = that._adjust(value);\n                that._placeholder(kendo.toString(value, format, culture));\n                if (isNotNull) {\n                    if (factor) {\n                        value = parseFloat(that._round(value * factor, decimals), 10);\n                    }\n                    value = value.toString();\n                    if (value.indexOf('e') !== -1) {\n                        value = that._round(+value, decimals);\n                    }\n                    value = value.replace(POINT, numberFormat[POINT]);\n                } else {\n                    value = null;\n                }\n                that.element.val(value);\n                that._oldText = value;\n                that.element.add(that._text).attr('aria-valuenow', value);\n            },\n            _placeholder: function (value) {\n                var input = this._text;\n                input.val(value);\n                if (!placeholderSupported && !value) {\n                    input.val(this.options.placeholder);\n                }\n                input.attr('title', this.element.attr('title') || input.val());\n            },\n            _label: function () {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var id = element.attr('id');\n                var floating;\n                var labelText;\n                if (options.label !== null) {\n                    floating = isPlainObject(options.label) ? options.label.floating : false;\n                    labelText = isPlainObject(options.label) ? options.label.content : options.label;\n                    if (floating) {\n                        that._floatingLabelContainer = that.wrapper.wrap('<span></span>').parent();\n                        that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                    }\n                    if (kendo.isFunction(labelText)) {\n                        labelText = labelText.call(that);\n                    }\n                    if (!labelText) {\n                        labelText = '';\n                    }\n                    if (!id) {\n                        id = options.name + '_' + kendo.guid();\n                        element.attr('id', id);\n                    }\n                    that._inputLabel = $('<label class=\\'' + LABELCLASSES + '\\' for=\\'' + id + '\\'>' + labelText + '</label>\\'').insertBefore(that.wrapper);\n                    if (that.element.attr('disabled') === undefined && that.element.attr('readonly') === undefined) {\n                        that._inputLabel.on('click' + ns, proxy(that.focus, that));\n                    }\n                }\n            },\n            _wrapper: function () {\n                var that = this, element = that.element, DOMElement = element[0], wrapper;\n                wrapper = element.parents('.k-numerictextbox');\n                if (!wrapper.is('span.k-numerictextbox')) {\n                    wrapper = element.hide().wrap('<span class=\"k-numeric-wrap k-state-default\" />').parent();\n                    wrapper = wrapper.wrap('<span/>').parent();\n                }\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = '';\n                that.wrapper = wrapper.addClass('k-widget k-numerictextbox').addClass(DOMElement.className).removeClass('input-validation-error').css('display', '');\n                that._inputWrapper = $(wrapper[0].firstChild);\n            },\n            _reset: function () {\n                var that = this, element = that.element, formId = element.attr('form'), form = formId ? $('#' + formId) : element.closest('form');\n                if (form[0]) {\n                    that._resetHandler = function () {\n                        setTimeout(function () {\n                            that.value(element[0].value);\n                            that.max(that._initialOptions.max);\n                            that.min(that._initialOptions.min);\n                        });\n                    };\n                    that._form = form.on('reset', that._resetHandler);\n                }\n            }\n        });\n        function buttonHtml(direction, text) {\n            var className = 'k-i-arrow-' + (direction === 'increase' ? '60-up' : '60-down');\n            return '<span unselectable=\"on\" class=\"k-link k-link-' + direction + '\" aria-label=\"' + text + '\" title=\"' + text + '\">' + '<span unselectable=\"on\" class=\"' + CLASS_ICON + ' ' + className + '\"></span>' + '</span>';\n        }\n        function truncate(value, precision) {\n            var parts = parseFloat(value, 10).toString().split(POINT);\n            if (parts[1]) {\n                parts[1] = parts[1].substring(0, precision);\n            }\n            return parts.join(POINT);\n        }\n        ui.plugin(NumericTextBox);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}