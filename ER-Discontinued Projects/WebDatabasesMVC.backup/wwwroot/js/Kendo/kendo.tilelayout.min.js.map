{"version":3,"sources":["kendo.tilelayout.js"],"names":["f","define","$","containsOrEqualTo","parent","child","contains","e","kendo","window","ui","Widget","Draggable","selector","selectorFromClasses","RESIZE","REORDER","NS","DOWNCURSOR","RIGHTCURSOR","DIAGONALCURSOR","RTLDIAGONALCURSOR","GRABCURSOR","GRABBINGCURSOR","MINIMALSPAN","CURSORCLASSES","tileLayoutStyles","wrapper","item","itemHeader","itemHeaderTitle","itemBody","reorderHint","resizeHint","TileLayout","extend","init","element","options","that","this","fn","call","cssNumber","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","addClass","styles","_setWrapperStyles","_initContainers","_resizable","_reorderable","events","name","columns","gap","rows","containers","resizable","reorderable","columnsWidth","rowsHeight","height","width","destroy","_draggableInstance","find","each","data","draggable","off","setOptions","deepExtend","empty","getOptions","result","items","id","container","header","headerSettings","body","containerSettings","headerContent","i","containerElements","children","hasElements","length","itemsMap","guid","current","attr","_addContainer","template","text","append","appendTo","bodyTemplate","index","order","_setContainerCoordinates","push","css","grid-template-columns","format","grid-auto-rows","column-gap","padding","row-gap","settings","grid-column-end","colSpan","grid-row-end","rowSpan","_updateContainers","_createResizeHandle","side","down","_isresizing","resizeHandle","remove","_positionResizeHandle","cursorClass","leftBorderWidth","parseFloat","bottomBorderWidth","containerHeight","containerWidth","top","left","support","isRtl","removeClass","show","_createResizeHint","hint","insertAfter","_removeResizeHint","_positionHint","_removeAbsoluteStyles","_positionAbsolutely","position","outerWidth","outerHeight","fractionWidth","fractionHeight","currentContainer","rowsCount","lastXLocation","lastYLocation","initialWidth","initialHeight","startColSpan","startRowSpan","itemsMaxSpace","on","rectPosition","getBoundingClientRect","rightPosition","Math","abs","right","clientX","downPosition","bottom","clientY","Resizable","handle","start","currentTarget","split","_calculateFractionWidth","_calculateRightEndSide","x","location","parseInt","replace","scrollHeight","y","resize","overflowsLayout","isBeyondMinimum","hintColumns","hintRows","mouseDeltaX","mouseDeltaY","deltaFromStart","resizeRowsCount","resizeColumnsCount","clientRect","scrollX","floor","max","scrollY","resizeend","trigger","first","totalWidth","columnGap","_createDropHint","dropHint","columnEnd","rowEnd","direction","_insertDropHint","insertBefore","_removeDropHint","originalElement","itemSelector","headerSelector","filter","autoScroll","target","closest","clone","dragstart","drag","dropContainer","containerBoundaries","pixelsToLeftBorder","pixelsToRightBorder","newOrder","futureContainer","elementUnderCursor","sender","draggedItem","hide","hasClass","next","prev","dragend","oldOrder","itemId","indexAttr","end","sort","a","b","indexA","indexB","undefined","min","newIndex","oldIndex","kendoDropTarget","dragenter","dropContainerBoundaries","dropTarget","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.tilelayout.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.tilelayout', [\n        'kendo.core',\n        'kendo.draganddrop',\n        'kendo.resizable'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'tilelayout',\n        name: 'TileLayout',\n        category: 'web',\n        depends: ['core']\n    };\n    (function ($) {\n        var kendo = window.kendo, ui = kendo.ui, Widget = ui.Widget, Draggable = ui.Draggable, selector = kendo.selectorFromClasses, RESIZE = 'resize', REORDER = 'reorder', NS = '.kendoTileLayout', DOWNCURSOR = 'k-cursor-ns-resize', RIGHTCURSOR = 'k-cursor-ew-resize', DIAGONALCURSOR = 'k-cursor-nwse-resize', RTLDIAGONALCURSOR = 'k-cursor-nesw-resize', GRABCURSOR = 'k-cursor-grab', GRABBINGCURSOR = 'k-cursor-grabbing', MINIMALSPAN = 1, CURSORCLASSES = 'k-cursor-nesw-resize k-cursor-nwse-resize k-cursor-ew-resize k-cursor-ns-resize';\n        var tileLayoutStyles = {\n            wrapper: 'k-widget k-tilelayout',\n            item: 'k-tilelayout-item k-card',\n            itemHeader: 'k-tilelayout-item-header k-card-header',\n            itemHeaderTitle: 'k-card-title',\n            itemBody: 'k-tilelayout-item-body k-card-body',\n            reorderHint: 'k-layout-item-hint k-layout-item-hint-reorder',\n            resizeHint: 'k-layout-item-hint k-layout-item-hint-resize'\n        };\n        var TileLayout = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                $.cssNumber.gridColumnStart = true;\n                $.cssNumber.gridColumnEnd = true;\n                $.cssNumber.gridRowStart = true;\n                $.cssNumber.gridRowEnd = true;\n                that.element = $(element).addClass(TileLayout.styles.wrapper);\n                that._setWrapperStyles();\n                that._initContainers();\n                that._resizable();\n                that._reorderable();\n            },\n            events: [\n                RESIZE,\n                REORDER\n            ],\n            options: {\n                name: 'TileLayout',\n                columns: null,\n                gap: {\n                    columns: 16,\n                    rows: 16\n                },\n                containers: [],\n                resizable: false,\n                reorderable: false,\n                columnsWidth: '1fr',\n                rowsHeight: '1fr',\n                height: '',\n                width: ''\n            },\n            destroy: function () {\n                Widget.fn.destroy.call(this);\n                if (this._draggableInstance) {\n                    this.element.find('.k-tilelayout-item').each(function () {\n                        var item = $(this);\n                        if (item.data('kendoDropTarget')) {\n                            item.data('kendoDropTarget').destroy();\n                        }\n                    });\n                    this._draggableInstance.destroy();\n                    this._draggableInstance.element = this._draggableInstance.draggable = null;\n                }\n                if (this.resizable) {\n                    this.resizable.destroy();\n                    this.resizable = null;\n                }\n                this.element.off(NS);\n            },\n            setOptions: function (options) {\n                this.destroy();\n                kendo.deepExtend(this.options, options);\n                this.element.empty();\n                this.init(this.element, this.options);\n            },\n            getOptions: function () {\n                var result = $.extend(true, {}, this.options);\n                result.containers = kendo.deepExtend([], this.items);\n                return result;\n            },\n            _initContainers: function () {\n                var that = this;\n                var containers = that.options.containers;\n                var containerElements = that.element.children();\n                var hasElements = !!containerElements.length;\n                var id;\n                var container;\n                var header;\n                var headerSettings;\n                var body;\n                var containerSettings;\n                var headerContent;\n                that.items = [];\n                that.itemsMap = {};\n                if (hasElements) {\n                    containerElements.each(function (i, element) {\n                        id = kendo.guid();\n                        var current = $(element).addClass(TileLayout.styles.item).attr('id', id);\n                        that._addContainer(current, containers[i], i, id);\n                    });\n                } else {\n                    for (var i = 0; i < containers.length; i++) {\n                        id = kendo.guid();\n                        containerSettings = containers[i];\n                        container = $('<div></div>').addClass(TileLayout.styles.item).attr('id', id);\n                        headerSettings = containerSettings.header;\n                        if (headerSettings && (headerSettings.template || headerSettings.text)) {\n                            header = $('<div></div>').addClass(TileLayout.styles.itemHeader);\n                            if (that.options.reorderable) {\n                                header.addClass(GRABCURSOR);\n                            }\n                            if (headerSettings.text) {\n                                headerContent = '<h5 class=\\'' + TileLayout.styles.itemHeaderTitle + '\\'>' + headerSettings.text + '</h5>';\n                            }\n                            header.append(headerContent || kendo.template(headerSettings.template)({}));\n                            header.appendTo(container);\n                        }\n                        body = $('<div></div>').addClass(TileLayout.styles.itemBody);\n                        body.append(kendo.template(containerSettings.bodyTemplate)({}));\n                        body.appendTo(container);\n                        container.appendTo(that.element);\n                        that._addContainer(container, containerSettings, i, id);\n                    }\n                }\n            },\n            _addContainer: function (element, item, index, id) {\n                var that = this;\n                item.order = typeof item.order == 'number' ? item.order : index;\n                element.attr(kendo.attr('index'), item.order);\n                item.id = id;\n                that._setContainerCoordinates(element, item);\n                that.itemsMap[id] = item;\n                that.items.push(that.itemsMap[id]);\n            },\n            _setWrapperStyles: function () {\n                var that = this;\n                var options = that.options;\n                that.element.css({\n                    'grid-template-columns': kendo.format('repeat({0}, minmax(0, {1}))', options.columns, typeof options.columnsWidth === 'string' ? options.columnsWidth : options.columnsWidth + 'px'),\n                    'grid-auto-rows': kendo.format('minmax(0, {0})', typeof options.rowsHeight === 'string' ? options.rowsHeight : options.rowsHeight + 'px'),\n                    'column-gap': options.gap.columns,\n                    'width': typeof options.width === 'string' ? options.width : options.width + 'px',\n                    'height': typeof options.height === 'string' ? options.height : options.height + 'px',\n                    'padding': options.gap.rows + 'px ' + options.gap.columns + 'px ',\n                    'row-gap': options.gap.rows\n                });\n            },\n            _setContainerCoordinates: function (element, settings) {\n                if (!settings) {\n                    return;\n                }\n                element.css({\n                    'order': settings.order,\n                    'grid-column-end': kendo.format('span {0}', settings.colSpan),\n                    'grid-row-end': kendo.format('span {0}', settings.rowSpan)\n                }).attr(kendo.attr('index'), settings.order);\n            },\n            _updateContainers: function () {\n                var that = this;\n                for (var i = 0; i < that.items.length; i++) {\n                    that._setContainerCoordinates(that.element.find('#' + that.items[i].id), that.items[i]);\n                }\n            },\n            _createResizeHandle: function (container, side, down) {\n                var that = this;\n                if (that._isresizing) {\n                    return;\n                }\n                if (that.resizeHandle && that.resizeHandle.data('div')[0] !== container[0]) {\n                    that.resizeHandle.off(NS).remove();\n                    that.resizeHandle = null;\n                }\n                if (!that.resizeHandle) {\n                    that.resizeHandle = $('<div class=\"k-resize-handle\"></div>');\n                    that.resizeHandle.appendTo(container);\n                }\n                that._positionResizeHandle(container, side, down);\n            },\n            _positionResizeHandle: function (container, side, down) {\n                var that = this;\n                var leftBorderWidth = parseFloat(container.css('borderRightWidth'));\n                var bottomBorderWidth = parseFloat(container.css('borderBottomWidth'));\n                var containerHeight = container.height();\n                var containerWidth = container.width();\n                var top = down ? containerHeight - 6.5 - bottomBorderWidth : 0;\n                var left = side ? containerWidth - 4.5 - leftBorderWidth : 0;\n                var width = 9;\n                var height = 9;\n                var cursorClass;\n                if (side && down) {\n                    height = width = 25;\n                    top -= 12.5;\n                    left -= 12.5;\n                    cursorClass = kendo.support.isRtl(that.element) ? RTLDIAGONALCURSOR : DIAGONALCURSOR;\n                } else if (side && !down) {\n                    height = containerHeight;\n                    cursorClass = RIGHTCURSOR;\n                } else if (!side && down) {\n                    width = containerWidth;\n                    cursorClass = DOWNCURSOR;\n                }\n                that.resizeHandle.css({\n                    top: top,\n                    left: left,\n                    height: height,\n                    width: width\n                }).attr('side', side).attr('down', down).removeClass(CURSORCLASSES).addClass(cursorClass).data('div', container).show();\n            },\n            _createResizeHint: function (container) {\n                var that = this;\n                if (that.hint) {\n                    return;\n                }\n                var colSpan = container.css('grid-column-end');\n                var rowSpan = container.css('grid-row-end');\n                var order = container.css('order');\n                that.hint = $('<div class=\\'' + TileLayout.styles.resizeHint + '\\'></div>').css({\n                    'order': order,\n                    'grid-column-end': colSpan,\n                    'grid-row-end': rowSpan\n                }).insertAfter(container);\n            },\n            _removeResizeHint: function () {\n                if (this._isresizing) {\n                    return;\n                }\n                if (this.hint) {\n                    this.hint.remove();\n                    this.hint = null;\n                }\n            },\n            _positionHint: function (colSpan, rowSpan) {\n                var that = this;\n                if (colSpan) {\n                    that.hint.css('grid-column-end', kendo.format('span {0}', colSpan));\n                }\n                if (rowSpan) {\n                    that.hint.css('grid-row-end', kendo.format('span {0}', rowSpan));\n                }\n            },\n            _removeAbsoluteStyles: function (container) {\n                container.css('position', '');\n                container.css('left', '');\n                container.css('top', '');\n                container.css('width', '');\n                container.css('height', '');\n                container.css('z-index', '');\n            },\n            _positionAbsolutely: function (container) {\n                if (container.css('position') == 'absolute') {\n                    return;\n                }\n                var position = container.position();\n                var width = container.outerWidth();\n                var height = container.outerHeight();\n                container.css('position', 'absolute');\n                container.css('left', position.left);\n                container.css('top', position.top);\n                container.css('width', width);\n                container.css('height', height);\n                container.css('z-index', 2);\n            },\n            _resizable: function () {\n                var that = this;\n                var side;\n                var down;\n                var id;\n                var fractionWidth;\n                var fractionHeight;\n                var currentContainer;\n                var lastXLocation = 0;\n                var lastYLocation = 0;\n                var initialWidth = 0;\n                var initialHeight = 0;\n                var startColSpan = 0;\n                var startRowSpan = 0;\n                var itemsMaxSpace = 0;\n                var rowsCount;\n                if (that.options.resizable) {\n                    that.element.on('mousemove' + NS, selector(TileLayout.styles.item), function (e) {\n                        var rightPosition;\n                        var downPosition;\n                        var container = $(this);\n                        var rectPosition = container[0].getBoundingClientRect();\n                        rightPosition = Math.abs(rectPosition.right - e.clientX) < 16;\n                        downPosition = Math.abs(rectPosition.bottom - e.clientY) < 16;\n                        if (rightPosition && downPosition) {\n                            that._createResizeHandle(container, true, true);\n                        } else if (rightPosition) {\n                            that._createResizeHandle(container, true, false);\n                        } else if (downPosition) {\n                            that._createResizeHandle(container, false, true);\n                        }\n                    });\n                    that.resizable = new ui.Resizable(that.element, {\n                        handle: '.k-resize-handle',\n                        start: function (e) {\n                            var resizeHandle = $(e.currentTarget);\n                            currentContainer = resizeHandle.data('div');\n                            id = currentContainer.attr('id');\n                            side = resizeHandle.attr('side');\n                            down = resizeHandle.attr('down');\n                            rowsCount = that.element.css('grid-template-rows').split(' ').length;\n                            if (side) {\n                                fractionWidth = that._calculateFractionWidth();\n                                itemsMaxSpace = that._calculateRightEndSide(fractionWidth);\n                                lastXLocation = e.x.location;\n                                initialWidth = currentContainer.width();\n                                startColSpan = parseInt(currentContainer.css('grid-column-end').replace('span', ''), 10);\n                            }\n                            if (down) {\n                                fractionHeight = (that.element[0].scrollHeight - (rowsCount + 1) * that.options.gap.rows) / rowsCount;\n                                lastYLocation = e.y.location;\n                                initialHeight = currentContainer.height();\n                                startRowSpan = parseInt(currentContainer.css('grid-row-end').replace('span', ''), 10);\n                            }\n                            that._isresizing = true;\n                        },\n                        resize: function (e) {\n                            var hintColumns = 0;\n                            var hintRows = 0;\n                            var mouseDeltaX = 0;\n                            var mouseDeltaY = 0;\n                            var overflowsLayout;\n                            var isBeyondMinimum;\n                            var deltaFromStart = 0;\n                            var resizeRowsCount = 0;\n                            var resizeColumnsCount = 0;\n                            var clientRect = that.element[0].getBoundingClientRect();\n                            that._positionAbsolutely(currentContainer);\n                            that._createResizeHint(currentContainer);\n                            if (side == 'true') {\n                                mouseDeltaX = e.x.location - lastXLocation;\n                                overflowsLayout = clientRect.left + itemsMaxSpace - window.scrollX - e.x.location < that.options.gap.columns;\n                                isBeyondMinimum = initialWidth + mouseDeltaX < fractionWidth;\n                                if (!overflowsLayout && !isBeyondMinimum) {\n                                    resizeColumnsCount = mouseDeltaX / (fractionWidth + that.options.gap.columns);\n                                    deltaFromStart = mouseDeltaX - Math.floor(resizeColumnsCount) * (fractionWidth + that.options.gap.columns);\n                                    hintColumns = startColSpan + Math.floor(resizeColumnsCount) + (deltaFromStart >= fractionWidth / 2 ? 1 : 0);\n                                    that.itemsMap[id].colSpan = Math.max(hintColumns, MINIMALSPAN);\n                                } else {\n                                    mouseDeltaX = 0;\n                                }\n                            }\n                            if (down == 'true') {\n                                mouseDeltaY = e.y.location - lastYLocation;\n                                overflowsLayout = clientRect.bottom + window.scrollY - e.y.location < that.options.gap.rows;\n                                isBeyondMinimum = initialHeight + mouseDeltaY <= fractionHeight;\n                                if (!overflowsLayout && !isBeyondMinimum) {\n                                    resizeRowsCount = mouseDeltaY / (fractionHeight + that.options.gap.rows);\n                                    deltaFromStart = mouseDeltaY - Math.floor(resizeRowsCount) * (fractionHeight + that.options.gap.rows);\n                                    hintRows = startRowSpan + Math.floor(resizeRowsCount) + (deltaFromStart >= fractionHeight / 2 ? 1 : 0);\n                                    that.itemsMap[id].rowSpan = Math.max(hintRows, MINIMALSPAN);\n                                } else {\n                                    mouseDeltaY = 0;\n                                }\n                            }\n                            that._positionHint(hintColumns, hintRows);\n                            that._positionResizeHandle(currentContainer, side == 'true', down == 'true');\n                            if (mouseDeltaY) {\n                                currentContainer.css('height', initialHeight + mouseDeltaY);\n                            }\n                            if (mouseDeltaX) {\n                                currentContainer.css('width', initialWidth + mouseDeltaX);\n                            }\n                        },\n                        resizeend: function () {\n                            that._isresizing = false;\n                            that._setContainerCoordinates(currentContainer, that.itemsMap[id]);\n                            that._removeAbsoluteStyles(currentContainer);\n                            that._removeResizeHint();\n                            that.trigger(RESIZE, { container: currentContainer });\n                        }\n                    });\n                }\n            },\n            _calculateFractionWidth: function () {\n                var that = this;\n                var container = that.element.children().first();\n                var colSpan = that.itemsMap[container.attr('id')].colSpan;\n                var totalWidth = container.outerWidth();\n                return (totalWidth - (colSpan - 1) * that.options.gap.columns) / colSpan;\n            },\n            _calculateRightEndSide: function (fractionWidth) {\n                var that = this;\n                var columns = that.options.columns;\n                var columnGap = that.options.gap.columns;\n                return columns * (fractionWidth + columnGap) + columnGap;\n            },\n            _createDropHint: function (settings) {\n                this.dropHint = $('<div class=\\'' + TileLayout.styles.reorderHint + '\\'></div>').css({\n                    'order': settings.order,\n                    'grid-column-end': settings.columnEnd,\n                    'grid-row-end': settings.rowEnd\n                }).attr(kendo.attr('index'), settings.order).attr('direction', settings.direction);\n            },\n            _insertDropHint: function (container, direction) {\n                if (direction == 'right') {\n                    this.dropHint.insertAfter(container);\n                } else {\n                    this.dropHint.insertBefore(container);\n                }\n            },\n            _removeDropHint: function () {\n                if (this.dropHint) {\n                    this.dropHint.remove();\n                    this.dropHint = null;\n                }\n            },\n            _reorderable: function () {\n                if (!this.options.reorderable) {\n                    return;\n                }\n                var that = this;\n                var element = that.element;\n                var originalElement;\n                var itemSelector = selector(TileLayout.styles.item);\n                var headerSelector = selector(TileLayout.styles.itemHeader);\n                this._draggableInstance = new Draggable(this.element, {\n                    filter: headerSelector,\n                    autoScroll: true,\n                    hint: function (target) {\n                        var item = target.closest(itemSelector);\n                        var width = item.width();\n                        var height = item.height();\n                        var clone = item.clone();\n                        clone.find(headerSelector).removeClass(GRABCURSOR).addClass(GRABBINGCURSOR);\n                        return clone.width(width).height(height);\n                    },\n                    dragstart: function (e) {\n                        originalElement = $(e.currentTarget).closest(itemSelector);\n                    },\n                    drag: function (e) {\n                        var elementUnderCursor = kendo.elementUnderCursor(e);\n                        var hint = e.sender.hint;\n                        var dropContainer;\n                        var containerBoundaries;\n                        var pixelsToLeftBorder;\n                        var pixelsToRightBorder;\n                        var direction;\n                        var draggedItem = that._draggableInstance.currentTarget.closest(itemSelector);\n                        var newOrder;\n                        if (containsOrEqualTo(hint[0], elementUnderCursor)) {\n                            hint.hide();\n                            elementUnderCursor = kendo.elementUnderCursor(e);\n                            if (!containsOrEqualTo(originalElement[0], elementUnderCursor)) {\n                                if (that.dropHint && that.dropHint[0] == elementUnderCursor[0]) {\n                                    hint.show();\n                                    return;\n                                }\n                                dropContainer = $(elementUnderCursor);\n                                dropContainer = dropContainer.hasClass(TileLayout.styles.item) ? dropContainer : dropContainer.closest(itemSelector);\n                                if (dropContainer.hasClass(TileLayout.styles.item)) {\n                                    containerBoundaries = dropContainer[0].getBoundingClientRect();\n                                    pixelsToLeftBorder = e.clientX - containerBoundaries.left;\n                                    pixelsToRightBorder = containerBoundaries.right - e.clientX;\n                                    direction = pixelsToLeftBorder > pixelsToRightBorder ? 'right' : 'left';\n                                    newOrder = dropContainer.css('order');\n                                    if (that.dropHint && that.dropHint.attr('direction') !== direction) {\n                                        var clone = that.dropHint.clone();\n                                        clone.css('order', newOrder);\n                                        that.dropHint.remove();\n                                        that.dropHint = clone;\n                                        that._insertDropHint(dropContainer, direction);\n                                        that.dropHint.attr('direction', direction).attr(kendo.attr('index'), newOrder);\n                                    } else if (!that.dropHint) {\n                                        var futureContainer = direction == 'right' ? dropContainer.next() : dropContainer.prev();\n                                        if (futureContainer[0] != originalElement[0]) {\n                                            that._createDropHint({\n                                                order: newOrder,\n                                                columnEnd: draggedItem.css('grid-column-end'),\n                                                rowEnd: draggedItem.css('grid-row-end'),\n                                                direction: direction\n                                            });\n                                            originalElement.hide();\n                                            that._insertDropHint(dropContainer, direction);\n                                        }\n                                    }\n                                }\n                            }\n                            hint.show();\n                        }\n                    },\n                    dragend: function (e) {\n                        if (!that.dropHint) {\n                            e.sender.hint.remove();\n                            that._removeDropHint();\n                            return;\n                        }\n                        var newOrder = parseInt(that.dropHint.css('order'), 10);\n                        var container = e.currentTarget.closest(itemSelector);\n                        var items = that.element.find(itemSelector);\n                        var oldOrder = parseInt(container.css('order'), 10);\n                        var itemId = container.attr('id');\n                        var containers = that.element.children(':visible');\n                        var indexAttr = kendo.attr('index');\n                        var start;\n                        var end;\n                        var item;\n                        var direction;\n                        containers.sort(function (a, b) {\n                            a = $(a);\n                            b = $(b);\n                            var indexA = a.attr(indexAttr);\n                            var indexB = b.attr(indexAttr);\n                            if (indexA === undefined) {\n                                indexA = $(a).index();\n                            }\n                            if (indexB === undefined) {\n                                indexB = $(b).index();\n                            }\n                            indexA = parseInt(indexA, 10);\n                            indexB = parseInt(indexB, 10);\n                            return indexA > indexB ? 1 : indexA < indexB ? -1 : 0;\n                        });\n                        newOrder = containers.index(that.dropHint[0]);\n                        end = Math.max(newOrder, oldOrder);\n                        start = Math.min(newOrder, oldOrder);\n                        that.itemsMap[itemId].order = newOrder;\n                        direction = newOrder > oldOrder ? 'right' : 'left';\n                        if (direction == 'left') {\n                            end--;\n                        } else {\n                            start++;\n                        }\n                        for (var i = start; i <= end; i++) {\n                            item = items.filter('[' + kendo.attr('index') + '=\\'' + i + '\\']');\n                            that.itemsMap[item.attr('id')].order += direction == 'left' ? 1 : -1;\n                        }\n                        container.show();\n                        that._updateContainers();\n                        e.sender.hint.remove();\n                        that._removeDropHint();\n                        that.trigger(REORDER, {\n                            newIndex: newOrder,\n                            oldIndex: oldOrder,\n                            container: container\n                        });\n                    }\n                });\n                element.find(itemSelector).kendoDropTarget({\n                    dragenter: function (e) {\n                        if (that._isresizing) {\n                            return;\n                        }\n                        var dropContainer = $(e.dropTarget);\n                        var target = that._draggableInstance.currentTarget.closest(itemSelector);\n                        var dropContainerBoundaries;\n                        var pixelsToLeftBorder;\n                        var pixelsToRightBorder;\n                        var futureContainer;\n                        var direction;\n                        if (originalElement[0] != dropContainer[0]) {\n                            dropContainerBoundaries = dropContainer[0].getBoundingClientRect();\n                            pixelsToLeftBorder = e.clientX - dropContainerBoundaries.left;\n                            pixelsToRightBorder = dropContainerBoundaries.right - e.clientX;\n                            direction = pixelsToLeftBorder > pixelsToRightBorder ? 'right' : 'left';\n                            futureContainer = direction == 'right' ? dropContainer.next() : dropContainer.prev();\n                            if (futureContainer[0] == originalElement[0]) {\n                                return;\n                            }\n                            that._removeDropHint();\n                            originalElement.hide();\n                            that._createDropHint({\n                                order: dropContainer.css('order'),\n                                columnEnd: target.css('grid-column-end'),\n                                rowEnd: target.css('grid-row-end'),\n                                direction: direction\n                            });\n                            originalElement.hide();\n                            that._insertDropHint(dropContainer, direction);\n                        }\n                    }\n                });\n            }\n        });\n        function containsOrEqualTo(parent, child) {\n            try {\n                return $.contains(parent, child) || parent == child;\n            } catch (e) {\n                return false;\n            }\n        }\n        ui.plugin(TileLayout);\n        $.extend(true, TileLayout, { styles: tileLayoutStyles });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}