{"version":3,"sources":["kendo.upload.js"],"names":["f","define","$","undefined","getFileName","input","map","inputFiles","file","name","join","$input","files","getAllFileInfo","stripPath","value","extension","getFileExtension","size","rawFiles","getFileInfo","rawFile","fileName","kendo","htmlEncode","fileSize","matches","match","rFileExtension","slashIndex","lastIndexOf","substr","assignGuidToFiles","unique","uid","guid","validateFiles","validationInfo","i","allowedExtensions","parseAllowedExtensions","maxFileSize","minFileSize","length","validateFileExtension","validateFileSize","extensions","ext","parsedExt","substring","toLowerCase","indexOf","validationErrors","inArray","INVALIDFILEEXTENSION","push","INVALIDMINFILESIZE","INVALIDMAXFILESIZE","getTotalFilesSizeMessage","totalSize","toFixed","shouldRemoveFileEntry","upload","multiple","wrapper","removeUploadedFile","fileEntry","eventArgs","shouldSendRemoveRequest","fileNames","_supportsRemove","data","_removeFileEntry","_submitRemove","textStatus","xhr","prevented","trigger","SUCCESS","operation","response","XMLHttpRequest","ERROR","logToConsole","responseText","tryParseJSON","onSuccess","onError","success","json","parseJSON","normalizeJSON","e","stopEvent","stopPropagation","preventDefault","bindDragEventWrappers","element","namespace","onDragEnter","onDragLeave","hideInterval","lastDrag","on","Date","setInterval","sinceLastDrag","clearInterval","isFileUploadStarted","is","getFileEntry","target","closest","iframeUploadModule","formDataUploadModule","window","Widget","ui","antiForgeryTokens","NS","SELECT","UPLOAD","COMPLETE","CANCEL","CLEAR","PAUSE","RESUME","PROGRESS","REMOVE","VALIDATIONERRORS","PROGRESSHIDEDELAY","PROGRESSHIDEDURATION","headerStatusIcon","loading","warning","Upload","extend","init","options","activeInput","ns","initialFiles","that","this","fn","call","directory","localization","_wrapInput","_activeInput","toggle","enabled","_ns","proxy","_onParentFormSubmit","_onParentFormReset","async","saveUrl","_module","_supportsFormData","_async","_renderInitialFiles","syncUploadModule","_toggleDropZone","_onFileAction","_onClearSelected","_onUploadSelected","val","_onInputChange","events","showFileList","template","autoRetryAfter","bufferChunkSize","maxAutoRetries","removeVerb","autoUpload","withCredentials","accept","useArrayBuffer","select","cancel","retry","remove","pause","resume","clearSelectedFiles","uploadSelectedFiles","dropFilesHere","invalidFiles","statusUploading","statusUploaded","statusWarning","statusFailed","headerStatusUploading","headerStatusPaused","headerStatusUploaded","uploadSuccess","uploadFail","invalidMaxFileSize","invalidMinFileSize","invalidFileExtension","validation","dropZone","setOptions","off","attr","_supportsMultiple","enable","disable","toggleClass","prop","focus","destroy","customDropZone","document","add","onPause","pauseIcon","find","removeClass","addClass","parent","onResume","playIcon","onSaveSelected","getFiles","filesData","j","allFiles","listItems","clearAllFiles","each","index","_removeFileByDomElement","removeAllFiles","removeFileByUid","_removeFileByUid","clearFileByUid","clearFile","callback","_removeFile","removeFile","fileData","hasClass","onCancel","onRemove","_hideHeaderUploadstatus","_updateHeaderUploadStatus","_addInput","sourceInput","nodeType","clone","insertAfter","prefix","hide","removeAttr","_onInputKeyDown","firstButton","keyCode","keys","TAB","shiftKey","_inputFiles","_isAsyncNonBatch","onSelect","_readDirectory","item","deferred","Deferred","dirReader","createReader","allFolderFiles","readEntries","entries","concat","resolve","reject","promise","_readFile","fullpath","fullPath","relativePath","slice","droppedFolderFiles","droppedFolderCounter","setTimeout","_proceedDroppedItems","_traverseFileTree","skipCounter","then","items","isFile","isDirectory","_onDrop","entry","dt","originalEvent","dataTransfer","droppedFiles","directoryDrop","webkitGetAsEntry","splice","_filesContainValidationErrors","hasErrors","batch","currentFile","idx","_enqueueFile","_fileAction","_prepareTemplateData","templateData","_prepareDefaultSingleFileEntryTemplate","fileGroup","getFileGroup","errors","_prepareDefaultMultipleFileEntriesTemplate","filesHaveValidationErrors","totalFileSize","sort","a","b","existingFileEntries","removeEventArgs","fileUid","fileList","appendTo","angular","elements","width","headers","allCompletedFiles","allInvalidFiles","_hideActionButtons","fileElement","actionKey","skipClear","firstActionButton","classDictionary","iconsClassDictionary","hasOwnProperty","_clearFileAction","first","next","append","show","_renderAction","_fileState","stateKey","states","uploading","text","uploaded","failed","currentState","actionClass","actionText","iconClass","empty","button","icon","hasValidationErrors","_retryClicked","_checkAllComplete","finish","onRetry","clearEventArgs","_onFileProgress","percentComplete","progressPct","prepend","_onUploadSuccess","fileInfo","_setUploadErrorState","after","_hideUploadProgress","_onUploadError","module","chunkSize","_decreasePosition","_autoRetryAfter","retries","performUpload","uploadPercentage","_updateUploadProgress","fileMetaData","metaData","totalChunks","Math","round","chunkIndex","delay","fadeOut","css","_showActionButtons","actionsWrapper","uploadButton","clearButton","_showHeaderUploadStatus","isUploading","headerUploadStatus","failedUploads","headerUploadStatusIcon","currentlyUploading","not","currentlyInvalid","currentlyFailed","currentlyPaused","concurrent","html","onAbort","FormData","windows","_userAgent","support","browser","opera","safari","_supportsDrop","userAgent","isChrome","test","isSafari","isWindowsSafari","navigator","_setupDropZone","_bindDocumentDragEventWrappers","_setupCustomDropZone","removeUrl","removeField","params","jQuery","ajax","type","dataType","dataFilter","url","traditional","error","xhrFields","wrap","prototype","filesContainErrors","relatedInput","iframes","_frameId","prepareUpload","iframe","form","saveField","createFrame","registerFrame","createForm","frame","key","dataInput","fileValidation","cleanupFrame","unregisterFrame","body","prependTo","one","onIframeLoad","submit","started","contents","ex","processResponse","fakeXHR","jsonResult","statusText","status","stopFrameSubmit","id","action","stop","execCommand","grep","position","cancelled","paused","prev","sourceElement","fileEntries","prepareChunk","enqueueFiles","filesLength","webkitRelativePath","formData","createFormData","createXHR","removeFileEntry","populateFormData","FileReader","postFormData","reader","onload","fileArrayBuffer","_appendBuffer","result","err","onerror","readAsArrayBuffer","_getCurrentChunk","buffer1","buffer2","tmp","Uint8Array","byteLength","set","buffer","filter","prevEntry","stopUploadRequest","_increaseChunkIndex","addEventListener","onRequestSuccess","onRequestError","onRequestProgress","open","setRequestHeader","send","chunk","serializedMetaData","JSON","stringify","raiseError","parseSuccess","cleanupFileEntry","_resetChunkIndex","uploadComplete","isUploadButtonVisible","loaded","total","abort","contentType","ceil","uploadUid","_decreaseChunkIndex","methodToInvoke","oldPosition","_getChunker","mozSlice","webkitSlice","plugin","amd","a1","a2","a3"],"mappings":"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","file":"kendo.upload.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.upload', ['kendo.core'], f);\n}(function () {\n    var __meta__ = {\n        id: 'upload',\n        name: 'Upload',\n        category: 'web',\n        description: 'The Upload widget uses progressive enhancement to deliver the best possible uploading experience to users.',\n        depends: ['core']\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, Widget = kendo.ui.Widget, antiForgeryTokens = kendo.antiForgeryTokens, logToConsole = kendo.logToConsole, rFileExtension = /\\.([^\\.]+)$/, NS = '.kendoUpload', SELECT = 'select', UPLOAD = 'upload', SUCCESS = 'success', ERROR = 'error', COMPLETE = 'complete', CANCEL = 'cancel', CLEAR = 'clear', PAUSE = 'pause', RESUME = 'resume', PROGRESS = 'progress', REMOVE = 'remove', VALIDATIONERRORS = 'validationErrors', INVALIDMAXFILESIZE = 'invalidMaxFileSize', INVALIDMINFILESIZE = 'invalidMinFileSize', INVALIDFILEEXTENSION = 'invalidFileExtension', PROGRESSHIDEDELAY = 1000, PROGRESSHIDEDURATION = 2000;\n        var headerStatusIcon = {\n            loading: 'k-i-upload',\n            warning: 'k-i-warning',\n            success: 'k-i-check'\n        };\n        var Upload = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that.name = element.name;\n                that.multiple = that.options.multiple;\n                that.directory = that.options.directory;\n                that.localization = that.options.localization;\n                var activeInput = that.element;\n                that.wrapper = activeInput.closest('.k-upload');\n                if (that.wrapper.length === 0) {\n                    that.wrapper = that._wrapInput(activeInput);\n                }\n                that._activeInput(activeInput);\n                that.toggle(that.options.enabled);\n                var ns = that._ns = NS + '-' + kendo.guid();\n                activeInput.closest('form').on('submit' + ns, $.proxy(that._onParentFormSubmit, that)).on('reset' + ns, $.proxy(that._onParentFormReset, that));\n                if (that.options.async.saveUrl) {\n                    that._module = that._supportsFormData() ? new formDataUploadModule(that) : new iframeUploadModule(that);\n                    that._async = true;\n                    var initialFiles = that.options.files;\n                    if (initialFiles.length > 0) {\n                        that._renderInitialFiles(initialFiles);\n                    }\n                } else {\n                    that._module = new syncUploadModule(that);\n                }\n                that._toggleDropZone();\n                that.wrapper.on('click', '.k-upload-action', $.proxy(that._onFileAction, that)).on('click', '.k-clear-selected', $.proxy(that._onClearSelected, that)).on('click', '.k-upload-selected', $.proxy(that._onUploadSelected, that));\n                if (that.element.val()) {\n                    that._onInputChange({ target: that.element });\n                }\n            },\n            events: [\n                SELECT,\n                UPLOAD,\n                SUCCESS,\n                ERROR,\n                COMPLETE,\n                CANCEL,\n                CLEAR,\n                PROGRESS,\n                REMOVE,\n                PAUSE,\n                RESUME\n            ],\n            options: {\n                name: 'Upload',\n                enabled: true,\n                multiple: true,\n                directory: false,\n                showFileList: true,\n                template: '',\n                files: [],\n                async: {\n                    autoRetryAfter: 0,\n                    bufferChunkSize: 10000000,\n                    maxAutoRetries: 1,\n                    removeVerb: 'POST',\n                    autoUpload: true,\n                    withCredentials: true,\n                    accept: '*/*; q=0.5, application/json',\n                    useArrayBuffer: false\n                },\n                localization: {\n                    'select': 'Select files...',\n                    'cancel': 'Cancel',\n                    'retry': 'Retry',\n                    'remove': 'Remove',\n                    'pause': 'Pause',\n                    'resume': 'Resume',\n                    'clearSelectedFiles': 'Clear',\n                    'uploadSelectedFiles': 'Upload',\n                    'dropFilesHere': 'Drop files here to upload',\n                    'invalidFiles': 'Invalid file(s). Please check file upload requirements.',\n                    'statusUploading': 'uploading',\n                    'statusUploaded': 'uploaded',\n                    'statusWarning': 'warning',\n                    'statusFailed': 'failed',\n                    'headerStatusUploading': 'Uploading...',\n                    'headerStatusPaused': 'Paused',\n                    'headerStatusUploaded': 'Done',\n                    'uploadSuccess': 'File(s) uploaded successfully.',\n                    'uploadFail': 'File(s) failed to upload.',\n                    'invalidMaxFileSize': 'File size too large.',\n                    'invalidMinFileSize': 'File size too small.',\n                    'invalidFileExtension': 'File type not allowed.'\n                },\n                validation: {\n                    allowedExtensions: [],\n                    maxFileSize: 0,\n                    minFileSize: 0\n                },\n                dropZone: ''\n            },\n            setOptions: function (options) {\n                var that = this, activeInput = that.element;\n                $(that.options.dropZone).off(that._ns);\n                Widget.fn.setOptions.call(that, options);\n                that.multiple = that.options.multiple;\n                that.directory = that.options.directory;\n                activeInput.attr('multiple', that._supportsMultiple() ? that.multiple : false);\n                if (that.directory) {\n                    activeInput.attr('webkitdirectory', that.directory);\n                    activeInput.attr('directory', that.directory);\n                }\n                that.toggle(that.options.enabled);\n                that._toggleDropZone();\n            },\n            enable: function (enable) {\n                enable = typeof enable === 'undefined' ? true : enable;\n                this.toggle(enable);\n            },\n            disable: function () {\n                this.toggle(false);\n            },\n            toggle: function (enable) {\n                enable = typeof enable === 'undefined' ? enable : !enable;\n                this.wrapper.toggleClass('k-state-disabled', enable);\n                this.element.prop('disabled', enable);\n            },\n            focus: function () {\n                this.element.focus();\n            },\n            destroy: function () {\n                var that = this;\n                var customDropZone = $(that.options.dropZone);\n                $(document).add($('.k-dropzone', that.wrapper)).add(that.wrapper.closest('form')).off(that._ns);\n                if (customDropZone.length > 0) {\n                    customDropZone.off(that._ns);\n                }\n                $(that.element).off(NS);\n                Widget.fn.destroy.call(that);\n            },\n            pause: function (fileEntry) {\n                this._module.onPause({ target: $(fileEntry, this.wrapper) });\n                var pauseIcon = fileEntry.find('.k-i-pause-sm');\n                pauseIcon.removeClass('k-i-pause-sm').addClass('k-i-play-sm').attr('title', this.localization.resume);\n                $(pauseIcon).parent().attr('aria-label', this.localization.resume);\n            },\n            resume: function (fileEntry) {\n                this._module.onResume({ target: $(fileEntry, this.wrapper) });\n                var playIcon = fileEntry.find('.k-i-play-sm');\n                playIcon.removeClass('k-i-play-sm').addClass('k-i-pause-sm').attr('title', this.localization.pause);\n                $(playIcon).parent().attr('aria-label', this.localization.pause);\n            },\n            upload: function () {\n                var that = this;\n                that._module.onSaveSelected();\n            },\n            getFiles: function () {\n                var that = this;\n                var filesData;\n                var allFiles = [];\n                var listItems = that.wrapper.find('.k-file');\n                for (var i = 0; i < listItems.length; i++) {\n                    filesData = $(listItems[i]).data('fileNames');\n                    if (filesData) {\n                        for (var j = 0; j < filesData.length; j++) {\n                            allFiles.push(filesData[j]);\n                        }\n                    }\n                }\n                return allFiles;\n            },\n            clearAllFiles: function () {\n                var that = this;\n                var files = that.wrapper.find('.k-file');\n                files.each(function (index, file) {\n                    that._removeFileByDomElement(file, false);\n                });\n            },\n            removeAllFiles: function () {\n                var that = this;\n                var files = that.wrapper.find('.k-file');\n                files.each(function (index, file) {\n                    that._removeFileByDomElement(file, true);\n                });\n            },\n            removeFileByUid: function (uid) {\n                this._removeFileByUid(uid, true);\n            },\n            clearFileByUid: function (uid) {\n                this._removeFileByUid(uid, false);\n            },\n            _removeFileByUid: function (uid, shouldSendRemoveRequest) {\n                var that = this;\n                var fileEntry;\n                if (typeof uid !== 'string') {\n                    return;\n                }\n                fileEntry = $('.k-file[' + kendo.attr('uid') + '=\"' + uid + '\"]', that.wrapper);\n                if (fileEntry.length > 0) {\n                    that._removeFileByDomElement(fileEntry, shouldSendRemoveRequest);\n                }\n            },\n            clearFile: function (callback) {\n                this._removeFile(callback, false);\n            },\n            removeFile: function (callback) {\n                this._removeFile(callback, true);\n            },\n            _removeFile: function (callback, shouldSendRemoveRequest) {\n                var that = this;\n                var files = that.wrapper.find('.k-file');\n                var fileData;\n                if (typeof callback === 'function') {\n                    files.each(function (index, file) {\n                        fileData = $(file).data('fileNames');\n                        if (callback(fileData)) {\n                            that._removeFileByDomElement(file, shouldSendRemoveRequest);\n                        }\n                    });\n                }\n            },\n            _removeFileByDomElement: function (fileEntry, shouldSendRemoveRequest) {\n                var that = this;\n                var fileData = { target: $(fileEntry, that.wrapper) };\n                var allFiles;\n                if (that.options.async.saveUrl) {\n                    if ($(fileEntry).hasClass('k-file-progress')) {\n                        that._module.onCancel(fileData);\n                    } else {\n                        that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                    }\n                    allFiles = $('.k-file', that.wrapper);\n                    if (allFiles.length === 0) {\n                        that._hideHeaderUploadstatus();\n                    } else {\n                        that._updateHeaderUploadStatus();\n                    }\n                } else {\n                    that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                }\n            },\n            _addInput: function (sourceInput) {\n                if (!sourceInput[0].nodeType) {\n                    return;\n                }\n                var that = this, input = sourceInput.clone().val('');\n                input.insertAfter(that.element).data('kendo' + that.options.prefix + that.options.name, that);\n                $(that.element).hide().attr('tabindex', '-1').removeAttr('id').off(NS);\n                that._activeInput(input);\n                that.element.focus();\n            },\n            _activeInput: function (input) {\n                var that = this, wrapper = that.wrapper;\n                that.element = input;\n                if (that.directory) {\n                    input.attr('webkitdirectory', that.directory);\n                    input.attr('directory', that.directory);\n                }\n                input.attr('multiple', that._supportsMultiple() ? that.multiple : false).attr('autocomplete', 'off').on('click' + NS, function (e) {\n                    if (wrapper.hasClass('k-state-disabled')) {\n                        e.preventDefault();\n                    }\n                }).on('focus' + NS, function () {\n                    $(this).parent().addClass('k-state-focused');\n                }).on('blur' + NS, function () {\n                    $(this).parent().removeClass('k-state-focused');\n                }).on('change' + NS, $.proxy(that._onInputChange, that)).on('keydown' + NS, $.proxy(that._onInputKeyDown, that));\n            },\n            _onInputKeyDown: function (e) {\n                var that = this;\n                var firstButton = that.wrapper.find('.k-upload-action:visible:first');\n                if (e.keyCode === kendo.keys.TAB && firstButton.length > 0 && !e.shiftKey) {\n                    e.preventDefault();\n                    firstButton.focus();\n                }\n            },\n            _onInputChange: function (e) {\n                var that = this;\n                var input = $(e.target);\n                var files = assignGuidToFiles(that._inputFiles(input), that._isAsyncNonBatch());\n                validateFiles(files, that.options.validation);\n                var prevented = that.trigger(SELECT, { files: files });\n                if (prevented) {\n                    that._addInput(input);\n                    input.remove();\n                } else {\n                    that._module.onSelect({ target: input }, files);\n                }\n            },\n            _readDirectory: function (item) {\n                var deferred = new $.Deferred();\n                var dirReader = item.createReader();\n                var allFolderFiles = [];\n                var readEntries = function () {\n                    dirReader.readEntries(function (entries) {\n                        if (!entries.length) {\n                            deferred.resolve(allFolderFiles);\n                        } else {\n                            allFolderFiles = allFolderFiles.concat(entries);\n                            readEntries();\n                        }\n                    }, deferred.reject);\n                };\n                readEntries();\n                return deferred.promise();\n            },\n            _readFile: function (item) {\n                var that = this;\n                var fullpath = item.fullPath;\n                item.file(function (file) {\n                    file.relativePath = fullpath.slice(1);\n                    that.droppedFolderFiles.push(file);\n                    that.droppedFolderCounter--;\n                    if (that.droppedFolderCounter === 0) {\n                        setTimeout(function () {\n                            if (that.droppedFolderCounter === 0) {\n                                if (that.droppedFolderFiles.length) {\n                                    that._proceedDroppedItems(that.droppedFolderFiles);\n                                    that.droppedFolderFiles = [];\n                                }\n                            }\n                        }, 0);\n                    }\n                }, function () {\n                    logToConsole('File error.');\n                });\n            },\n            _traverseFileTree: function (item, skipCounter) {\n                var that = this;\n                if (!skipCounter) {\n                    that.droppedFolderCounter--;\n                }\n                this._readDirectory(item).then(function (items) {\n                    that.droppedFolderCounter += items.length;\n                    for (var i = 0; i < items.length; i++) {\n                        if (items[i].isFile) {\n                            that._readFile(items[i]);\n                        } else if (items[i].isDirectory) {\n                            that._traverseFileTree(items[i]);\n                        }\n                    }\n                });\n            },\n            _onDrop: function (e) {\n                var dt = e.originalEvent.dataTransfer;\n                var that = this;\n                var droppedFiles = dt.files;\n                var length;\n                stopEvent(e);\n                if (that.options.directoryDrop && dt.items) {\n                    length = dt.items.length;\n                    that.droppedFolderCounter = 0;\n                    that.droppedFolderFiles = [];\n                    for (var i = 0; i < length; i++) {\n                        if (dt.items[i].webkitGetAsEntry) {\n                            var entry = dt.items[i].webkitGetAsEntry();\n                            if (entry.isDirectory) {\n                                that._traverseFileTree(entry, true);\n                            } else if (entry.isFile) {\n                                that.droppedFolderFiles.push(dt.files[i]);\n                            }\n                        } else {\n                            that._proceedDroppedItems(droppedFiles);\n                        }\n                    }\n                } else {\n                    that._proceedDroppedItems(droppedFiles);\n                }\n            },\n            _proceedDroppedItems: function (droppedFiles) {\n                var that = this;\n                var files = assignGuidToFiles(getAllFileInfo(droppedFiles), that._isAsyncNonBatch());\n                if (droppedFiles.length > 0 && !that.wrapper.hasClass('k-state-disabled')) {\n                    if (!that.multiple && files.length > 1) {\n                        files.splice(1, files.length - 1);\n                    }\n                    validateFiles(files, that.options.validation);\n                    var prevented = that.trigger(SELECT, { files: files });\n                    if (!prevented) {\n                        that._module.onSelect({ target: $('.k-dropzone', that.wrapper) }, files);\n                    }\n                }\n            },\n            _filesContainValidationErrors: function (files) {\n                var hasErrors = false;\n                $(files).each(function (index, file) {\n                    if (file[VALIDATIONERRORS] && file[VALIDATIONERRORS].length > 0) {\n                        hasErrors = true;\n                        return false;\n                    }\n                });\n                return hasErrors;\n            },\n            _isAsyncNonBatch: function () {\n                return this._async && !this.options.async.batch || false;\n            },\n            _renderInitialFiles: function (files) {\n                var that = this;\n                var idx = 0;\n                files = assignGuidToFiles(files, true);\n                for (idx = 0; idx < files.length; idx++) {\n                    var currentFile = files[idx];\n                    var fileEntry = that._enqueueFile(currentFile.name, { fileNames: [currentFile] });\n                    fileEntry.addClass('k-file-success').data('files', [files[idx]]);\n                    if (that._supportsRemove()) {\n                        that._fileAction(fileEntry, REMOVE);\n                    }\n                }\n            },\n            _prepareTemplateData: function (name, data) {\n                var filesData = data.fileNames, templateData = {}, totalSize = 0, idx = 0;\n                for (idx = 0; idx < filesData.length; idx++) {\n                    totalSize += filesData[idx].size;\n                }\n                templateData.name = name;\n                templateData.size = totalSize;\n                templateData.files = data.fileNames;\n                return templateData;\n            },\n            _prepareDefaultSingleFileEntryTemplate: function (data) {\n                var that = this;\n                var file = data.fileNames[0];\n                var fileSize = getTotalFilesSizeMessage(data.fileNames);\n                var fileGroup = kendo.getFileGroup(file.extension, true);\n                var errors = file[VALIDATIONERRORS];\n                var template = '';\n                if (errors && errors.length > 0) {\n                    template += '<li class=\\'k-file k-file-invalid\\'><div class=\\'k-progressbar k-hidden\\'><span class=\\'k-progress\\'></span></div>' + '<span class=\\'k-file-invalid-group-wrapper\\'>' + '<span class=\\'k-file-group k-icon k-i-' + fileGroup + '\\'></span>' + '<span class=\\'k-file-state\\'></span>' + '</span>' + '<span class=\\'k-file-name-size-wrapper\\'>' + '<span class=\\'k-file-name k-file-name-invalid\\' title=\\'' + file.name + '\\'>' + file.name + '</span>' + '<span class=\\'k-file-validation-message k-text-error\\'>' + that.localization[errors[0]] + '</span>' + '</span>';\n                } else {\n                    template += '<li class=\\'k-file\\'><div class=\\'k-progressbar k-hidden\\'><span class=\\'k-progress\\'></span></div>' + '<span class=\\'k-file-group-wrapper\\'>' + '<span class=\\'k-file-group k-icon k-i-' + fileGroup + '\\'></span>' + '<span class=\\'k-file-state\\'></span>' + '</span>' + '<span class=\\'k-file-name-size-wrapper\\'><span class=\\'k-file-name\\' title=\\'' + file.name + '\\'>' + file.name + '</span>' + '<span class=\\'k-file-size\\'>' + fileSize + '</span></span>';\n                }\n                template += '<strong class=\\'k-upload-status\\'></strong>';\n                return $(template);\n            },\n            _prepareDefaultMultipleFileEntriesTemplate: function (data) {\n                var that = this;\n                var files = data.fileNames;\n                var filesHaveValidationErrors = that._filesContainValidationErrors(files);\n                var totalFileSize = getTotalFilesSizeMessage(files);\n                var template = '';\n                var i, currentFile;\n                if (filesHaveValidationErrors) {\n                    template += '<li class=\\'k-file k-file-invalid\\'><div class=\\'k-progressbar k-hidden\\'><span class=\\'k-progress\\'></span></div>' + '<span class=\\'k-multiple-files-invalid-group-wrapper\\'>' + '<span class=\\'k-file-group k-icon k-i-files\\'></span>';\n                } else {\n                    template += '<li class=\\'k-file\\'><div class=\\'k-progressbar k-hidden\\'><span class=\\'k-progress\\'></span></div>' + '<span class=\\'k-multiple-files-group-wrapper\\'>' + '<span class=\\'k-file-group k-icon k-i-files\\'></span>';\n                }\n                template += '<span class=\\'k-file-state\\'></span></span>';\n                files.sort(function (a, b) {\n                    if (a[VALIDATIONERRORS]) {\n                        return -1;\n                    }\n                    if (b[VALIDATIONERRORS]) {\n                        return 1;\n                    }\n                    return 0;\n                });\n                template += '<span class=\\'k-multiple-files-wrapper\\'>';\n                for (i = 0; i < files.length; i++) {\n                    currentFile = files[i];\n                    var fileSize = getTotalFilesSizeMessage([currentFile]);\n                    template += '<span class=\\'k-file-name-size-wrapper\\'>';\n                    if (currentFile[VALIDATIONERRORS] && currentFile[VALIDATIONERRORS].length > 0) {\n                        template += '<span class=\\'k-file-name k-file-name-invalid\\' title=\\'' + currentFile.name + '\\'>' + currentFile.name + '</span>';\n                    } else {\n                        template += '<span class=\\'k-file-name\\' title=\\'' + currentFile.name + '\\'>' + currentFile.name + '</span>';\n                    }\n                    template += '<span class=\\'k-file-size\\'>' + fileSize + '</span></span>';\n                }\n                if (filesHaveValidationErrors) {\n                    template += '<span class=\\'k-file-validation-message k-text-error\\'>' + that.localization.invalidFiles + '</span>';\n                } else {\n                    template += '<span class=\\'k-file-information\\'>Total: ' + files.length + ' files, ' + totalFileSize + '</span>';\n                }\n                template += '</span><strong class=\\'k-upload-status\\'></strong>';\n                return $(template);\n            },\n            _enqueueFile: function (name, data) {\n                var that = this;\n                var existingFileEntries;\n                var fileEntry;\n                var fileUid = data.fileNames[0].uid;\n                var fileList = $('.k-upload-files', that.wrapper);\n                var options = that.options;\n                var template = options.template;\n                var templateData;\n                var removeEventArgs;\n                if (fileList.length === 0) {\n                    fileList = $('<ul class=\\'k-upload-files k-reset\\'></ul>').appendTo(that.wrapper);\n                    if (!that.options.showFileList) {\n                        fileList.hide();\n                    }\n                    that.wrapper.removeClass('k-upload-empty');\n                }\n                existingFileEntries = $('.k-file', fileList);\n                if (!template) {\n                    if (data.fileNames.length === 1) {\n                        fileEntry = that._prepareDefaultSingleFileEntryTemplate(data);\n                    } else {\n                        fileEntry = that._prepareDefaultMultipleFileEntriesTemplate(data);\n                    }\n                } else {\n                    templateData = that._prepareTemplateData(name, data);\n                    template = kendo.template(template);\n                    fileEntry = $('<li class=\\'k-file\\'>' + template(templateData) + '</li>');\n                    fileEntry.find('.k-upload-action').addClass('k-button k-button-icon k-flat');\n                    that.angular('compile', function () {\n                        return {\n                            elements: fileEntry,\n                            data: [templateData]\n                        };\n                    });\n                }\n                fileEntry.attr(kendo.attr('uid'), fileUid).appendTo(fileList).data(data);\n                if (!that._async) {\n                    $('.k-progress', fileEntry).width('100%');\n                }\n                if (!that.multiple && existingFileEntries.length > 0) {\n                    removeEventArgs = {\n                        files: existingFileEntries.data('fileNames'),\n                        headers: {}\n                    };\n                    if (!that.trigger(REMOVE, removeEventArgs)) {\n                        that._module.onRemove({ target: $(existingFileEntries, that.wrapper) }, removeEventArgs);\n                    }\n                }\n                return fileEntry;\n            },\n            _removeFileEntry: function (fileEntry) {\n                var that = this;\n                var fileList = fileEntry.closest('.k-upload-files');\n                var allFiles, allCompletedFiles, allInvalidFiles;\n                fileEntry.remove();\n                allFiles = $('.k-file', fileList);\n                allCompletedFiles = $('.k-file-success, .k-file-error', fileList);\n                allInvalidFiles = $('.k-file-invalid', fileList);\n                if (allCompletedFiles.length === allFiles.length || allInvalidFiles.length === allFiles.length) {\n                    this._hideActionButtons();\n                }\n                if (allFiles.length === 0) {\n                    fileList.remove();\n                    that.wrapper.addClass('k-upload-empty');\n                    that._hideHeaderUploadstatus();\n                } else {\n                    that._updateHeaderUploadStatus();\n                }\n            },\n            _fileAction: function (fileElement, actionKey, skipClear) {\n                var classDictionary = {\n                    remove: 'k-i-x',\n                    cancel: 'k-i-cancel',\n                    retry: 'k-i-retry',\n                    pause: 'k-i-pause-sm'\n                };\n                var iconsClassDictionary = {\n                    remove: 'k-i-close',\n                    cancel: 'k-i-cancel',\n                    retry: 'k-i-reload-sm',\n                    pause: 'k-i-pause-sm'\n                };\n                var firstActionButton;\n                if (!classDictionary.hasOwnProperty(actionKey)) {\n                    return;\n                }\n                if (!skipClear) {\n                    this._clearFileAction(fileElement);\n                }\n                if (!this.options.template) {\n                    if (!skipClear) {\n                        fileElement.find('.k-upload-status .k-upload-action').remove();\n                    }\n                    fileElement.find('.k-upload-status').append(this._renderAction(classDictionary[actionKey], this.localization[actionKey], iconsClassDictionary[actionKey]));\n                } else {\n                    firstActionButton = fileElement.find('.k-upload-action').first();\n                    if (!firstActionButton.find('.k-icon').length) {\n                        firstActionButton.addClass('k-button').append('<span class=\\'k-icon ' + iconsClassDictionary[actionKey] + ' ' + classDictionary[actionKey] + '\\' title=\\'' + this.localization[actionKey] + '\\'' + 'aria-label=\\'' + this.localization[actionKey] + '\\'></span>').show();\n                    } else if (firstActionButton.next('.k-upload-action').length) {\n                        firstActionButton.next('.k-upload-action').addClass('k-button').append('<span class=\\'k-icon ' + iconsClassDictionary[actionKey] + ' ' + classDictionary[actionKey] + '\\' title=\\'' + this.localization[actionKey] + '\\'' + 'aria-label=\\'' + this.localization[actionKey] + '\\'></span>').show();\n                    }\n                }\n            },\n            _fileState: function (fileEntry, stateKey) {\n                var localization = this.localization, states = {\n                        uploading: { text: localization.statusUploading },\n                        uploaded: { text: localization.statusUploaded },\n                        failed: { text: localization.statusFailed }\n                    }, currentState = states[stateKey];\n                if (currentState) {\n                    $('span.k-file-state', fileEntry).text(currentState.text);\n                }\n            },\n            _renderAction: function (actionClass, actionText, iconClass) {\n                if (actionClass !== '') {\n                    return $('<button type=\\'button\\' class=\\'k-button k-button-icon k-flat k-upload-action\\' aria-label=\\'' + actionText + '\\'>' + '<span class=\\'k-icon ' + iconClass + ' ' + actionClass + '\\' title=\\'' + actionText + '\\'></span>' + '</button>').on('focus', function () {\n                        $(this).addClass('k-state-focused');\n                    }).on('blur', function () {\n                        $(this).removeClass('k-state-focused');\n                    });\n                } else {\n                    return $('<button type=\\'button\\' class=\\'k-button\\'>' + actionText + '</button>');\n                }\n            },\n            _clearFileAction: function (fileElement) {\n                $('.k-upload-action', fileElement).empty().hide();\n            },\n            _onFileAction: function (e) {\n                var that = this;\n                if (!that.wrapper.hasClass('k-state-disabled')) {\n                    var button = $(e.target).closest('.k-upload-action');\n                    var icon = button.find('.k-icon');\n                    var fileEntry = button.closest('.k-file');\n                    var files = fileEntry.data('fileNames');\n                    var hasValidationErrors = that._filesContainValidationErrors(files);\n                    var eventArgs = {\n                        files: files,\n                        headers: {}\n                    };\n                    that._retryClicked = false;\n                    if (icon.hasClass('k-i-x')) {\n                        if (!that.trigger(REMOVE, eventArgs)) {\n                            that._module.onRemove({ target: $(fileEntry, that.wrapper) }, eventArgs, !hasValidationErrors);\n                        }\n                    } else if (icon.hasClass('k-i-cancel')) {\n                        that.trigger(CANCEL, eventArgs);\n                        that._module.onCancel({ target: $(fileEntry, that.wrapper) });\n                        that._checkAllComplete();\n                        that._updateHeaderUploadStatus();\n                    } else if (icon.hasClass('k-i-pause-sm')) {\n                        that.trigger(PAUSE, eventArgs);\n                        that.pause(fileEntry);\n                        that._updateHeaderUploadStatus();\n                    } else if (icon.hasClass('k-i-play-sm')) {\n                        that.trigger(RESUME, eventArgs);\n                        that.resume(fileEntry);\n                    } else if (icon.hasClass('k-i-retry')) {\n                        $('.k-i-warning', fileEntry).remove();\n                        $('.k-progressbar', fileEntry).finish().show();\n                        that._module.onRetry({ target: $(fileEntry, that.wrapper) });\n                        that._retryClicked = true;\n                    }\n                }\n                return false;\n            },\n            _onUploadSelected: function () {\n                var that = this;\n                var wrapper = that.wrapper;\n                if (!wrapper.hasClass('k-state-disabled')) {\n                    this._module.onSaveSelected();\n                }\n                return false;\n            },\n            _onClearSelected: function () {\n                var that = this;\n                var wrapper = that.wrapper;\n                var clearEventArgs = {};\n                if (!wrapper.hasClass('k-state-disabled') && !that.trigger(CLEAR, clearEventArgs)) {\n                    that.clearAllFiles();\n                }\n                return false;\n            },\n            _onFileProgress: function (e, percentComplete) {\n                var progressPct;\n                if (percentComplete > 100) {\n                    percentComplete = 100;\n                }\n                $('.k-progressbar', e.target).removeClass('k-hidden');\n                if (!this.options.template) {\n                    progressPct = $('.k-upload-pct', e.target);\n                    if (progressPct.length === 0) {\n                        $('.k-upload-status', e.target).prepend('<span class=\\'k-upload-pct\\'></span>');\n                    }\n                    if (percentComplete !== 100) {\n                        $('.k-upload-pct', e.target).text(percentComplete + '%');\n                    } else {\n                        $('.k-upload-pct', e.target).remove();\n                    }\n                    $('.k-progress', e.target).width(percentComplete + '%');\n                } else {\n                    $('.k-progress', e.target).width(percentComplete + '%');\n                }\n                this.trigger(PROGRESS, {\n                    files: getFileEntry(e).data('fileNames'),\n                    percentComplete: percentComplete\n                });\n            },\n            _onUploadSuccess: function (e, response, xhr) {\n                var that = this;\n                var fileEntry = getFileEntry(e);\n                var files = fileEntry.data('fileNames');\n                var fileInfo = fileEntry.find('.k-file-information');\n                var fileSize = fileEntry.find('.k-file-size');\n                var prevented = that.trigger(SUCCESS, {\n                    files: fileEntry.data('fileNames'),\n                    response: response,\n                    operation: 'upload',\n                    XMLHttpRequest: xhr\n                });\n                if (prevented) {\n                    that._setUploadErrorState(fileEntry);\n                } else {\n                    that._fileState(fileEntry, 'uploaded');\n                    fileEntry.removeClass('k-file-progress').addClass('k-file-success');\n                    if (fileInfo.length > 0) {\n                        fileInfo.addClass('k-hidden').after('<span class=\"k-file-validation-message k-text-success\">' + files.length + ' ' + that.localization.uploadSuccess + '</span>');\n                    } else if (fileSize.length > 0) {\n                        fileSize.addClass('k-hidden').after('<span class=\"k-file-validation-message k-text-success\">' + that.localization.uploadSuccess + '</span>');\n                    }\n                    that._updateHeaderUploadStatus();\n                    if (that._supportsRemove()) {\n                        that._fileAction(fileEntry, REMOVE);\n                    } else {\n                        that._clearFileAction(fileEntry);\n                    }\n                }\n                that._hideUploadProgress(fileEntry);\n                that._checkAllComplete();\n            },\n            _onUploadError: function (e, xhr) {\n                var that = this;\n                var module = that._module;\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data('uid');\n                that._setUploadErrorState(fileEntry);\n                that.trigger(ERROR, {\n                    operation: 'upload',\n                    files: fileEntry.data('fileNames'),\n                    XMLHttpRequest: xhr\n                });\n                logToConsole('Server response: ' + xhr.responseText);\n                if (!that.options.async.chunkSize) {\n                    that._hideUploadProgress(fileEntry);\n                } else {\n                    if (module._decreasePosition) {\n                        module._decreasePosition(fileUid);\n                    }\n                }\n                that._checkAllComplete();\n                if (this.options.async.autoRetryAfter) {\n                    this._autoRetryAfter(fileEntry);\n                }\n            },\n            _autoRetryAfter: function (fileEntry) {\n                var that = this;\n                var retries = this._module.retries;\n                if (!retries) {\n                    return;\n                }\n                if (!retries[fileEntry.data('uid')]) {\n                    retries[fileEntry.data('uid')] = 1;\n                }\n                if (retries[fileEntry.data('uid')] <= this.options.async.maxAutoRetries) {\n                    retries[fileEntry.data('uid')]++;\n                    setTimeout(function () {\n                        that._module.performUpload(fileEntry);\n                    }, this.options.async.autoRetryAfter);\n                }\n            },\n            _setUploadErrorState: function (fileEntry) {\n                var that = this, uploadPercentage, files = fileEntry.data('fileNames'), fileInfo = fileEntry.find('.k-file-information'), fileSize = fileEntry.find('.k-file-size');\n                that._fileState(fileEntry, 'failed');\n                fileEntry.removeClass('k-file-progress').addClass('k-file-error');\n                if (fileInfo.length > 0) {\n                    fileInfo.addClass('k-hidden').after('<span class=\"k-file-validation-message k-text-error\">' + files.length + ' ' + that.localization.uploadFail + '</span>');\n                } else if (fileSize.length > 0) {\n                    fileSize.addClass('k-hidden').after('<span class=\"k-file-validation-message k-text-error\">' + that.localization.uploadFail + '</span>');\n                }\n                that._updateUploadProgress(fileEntry);\n                uploadPercentage = $('.k-upload-pct', fileEntry);\n                if (uploadPercentage.length > 0) {\n                    uploadPercentage.remove();\n                }\n                this._updateHeaderUploadStatus();\n                this._fileAction(fileEntry, 'retry');\n                this._fileAction(fileEntry, REMOVE, true);\n                if (that._retryClicked) {\n                    fileEntry.find('.k-i-retry').parent().focus();\n                }\n            },\n            _updateUploadProgress: function (fileEntry) {\n                var that = this;\n                if (!that.options.async.chunkSize) {\n                    $('.k-progress', fileEntry).width('100%');\n                } else {\n                    var fileUid = fileEntry.data('uid');\n                    if (that._module.metaData) {\n                        var fileMetaData = that._module.metaData[fileUid];\n                        if (fileMetaData) {\n                            var percentComplete = fileMetaData.totalChunks ? Math.round(fileMetaData.chunkIndex / fileMetaData.totalChunks * 100) : 100;\n                            that._onFileProgress({ target: $(fileEntry, that.wrapper) }, percentComplete);\n                        }\n                    }\n                }\n            },\n            _hideUploadProgress: function (fileEntry) {\n                $('.k-progressbar', fileEntry).delay(PROGRESSHIDEDELAY).fadeOut(PROGRESSHIDEDURATION, function () {\n                    $(this).find('.k-progress').css('width', '0%');\n                });\n            },\n            _showActionButtons: function () {\n                var that = this;\n                var actionsWrapper = $('.k-action-buttons', that.wrapper);\n                var uploadButton = $('.k-upload-selected', that.wrapper);\n                var clearButton = $('.k-clear-selected', that.wrapper);\n                if (uploadButton.length === 0) {\n                    uploadButton = that._renderAction('', this.localization.uploadSelectedFiles).addClass('k-upload-selected').addClass('k-primary');\n                    clearButton = that._renderAction('', this.localization.clearSelectedFiles).addClass('k-clear-selected');\n                }\n                if (!actionsWrapper.length) {\n                    actionsWrapper = $('<div />').addClass('k-action-buttons').append(clearButton, uploadButton);\n                }\n                this.wrapper.append(actionsWrapper);\n            },\n            _hideActionButtons: function () {\n                $('.k-action-buttons', this.wrapper).remove();\n            },\n            _showHeaderUploadStatus: function (isUploading) {\n                var that = this;\n                var localization = that.localization;\n                var dropZone = $('.k-dropzone', that.wrapper);\n                var headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                if (headerUploadStatus.length !== 0) {\n                    headerUploadStatus.remove();\n                }\n                $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n                headerUploadStatus = '<strong class=\"k-upload-status k-upload-status-total\"><span class=\"k-icon\"></span></strong>';\n                if (isUploading) {\n                    headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploading);\n                    headerUploadStatus.find('.k-icon').addClass(headerStatusIcon.loading);\n                } else {\n                    headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploaded);\n                    headerUploadStatus.find('.k-icon').addClass(headerStatusIcon.warning);\n                }\n                if (dropZone.length > 0) {\n                    dropZone.append(headerUploadStatus);\n                } else {\n                    $('.k-upload-button', that.wrapper).after(headerUploadStatus);\n                }\n            },\n            _updateHeaderUploadStatus: function () {\n                var that = this;\n                var headerUploadStatus = $('.k-upload-status-total', this.wrapper);\n                var currentlyUploading = $('.k-file', that.wrapper).not('.k-file-success, .k-file-error, .k-file-invalid');\n                var currentlyInvalid = $('.k-file-invalid', that.wrapper);\n                var currentlyFailed = $('.k-file-error', that.wrapper);\n                var currentlyPaused = $('.k-file', that.wrapper).find('.k-i-play-sm');\n                var failedUploads, headerUploadStatusIcon;\n                if (currentlyPaused.length && (currentlyPaused.length === currentlyUploading.length || !that.options.async.concurrent)) {\n                    headerUploadStatusIcon = $('.k-icon', headerUploadStatus).removeClass().addClass('k-icon').addClass('k-i-pause-sm');\n                    headerUploadStatus.html(headerUploadStatusIcon).append(that.localization.headerStatusPaused);\n                } else if (currentlyUploading.length === 0 || currentlyInvalid.length > 0 || currentlyFailed.length > 0) {\n                    failedUploads = $('.k-file.k-file-error, .k-file.k-file-invalid', that.wrapper);\n                    headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                    headerUploadStatusIcon = $('.k-icon', headerUploadStatus).removeClass().addClass('k-icon').addClass(failedUploads.length !== 0 ? headerStatusIcon.warning : headerStatusIcon.success);\n                    headerUploadStatus.html(headerUploadStatusIcon).append(that.localization.headerStatusUploaded);\n                }\n            },\n            _hideHeaderUploadstatus: function () {\n                var that = this, dropZone = that.options.dropZone;\n                $('.k-upload-status-total', this.wrapper).remove();\n                if (dropZone === '') {\n                    $('.k-dropzone-hint', that.wrapper).removeClass('k-hidden');\n                }\n            },\n            _onParentFormSubmit: function () {\n                var upload = this, element = upload.element;\n                if (typeof this._module.onAbort !== 'undefined') {\n                    this._module.onAbort();\n                }\n                if (!element.value) {\n                    var input = $(element);\n                    input.attr('disabled', 'disabled');\n                    window.setTimeout(function () {\n                        input.removeAttr('disabled');\n                    }, 0);\n                }\n            },\n            _onParentFormReset: function () {\n                $('.k-upload-files', this.wrapper).remove();\n            },\n            _supportsFormData: function () {\n                return typeof FormData != 'undefined';\n            },\n            _supportsMultiple: function () {\n                var windows = this._userAgent().indexOf('Windows') > -1;\n                return !kendo.support.browser.opera && !(kendo.support.browser.safari && windows);\n            },\n            _supportsDrop: function () {\n                var userAgent = this._userAgent().toLowerCase();\n                var isChrome = /chrome/.test(userAgent);\n                var isSafari = !isChrome && /safari/.test(userAgent);\n                var isWindowsSafari = isSafari && /windows/.test(userAgent);\n                return !isWindowsSafari && this._supportsFormData() && this.options.async.saveUrl;\n            },\n            _userAgent: function () {\n                return navigator.userAgent;\n            },\n            _setupDropZone: function () {\n                var that = this;\n                var ns = that._ns;\n                var dropZone = $('.k-dropzone', that.wrapper).on('dragenter' + ns, stopEvent).on('dragover' + ns, function (e) {\n                    e.preventDefault();\n                }).on('drop' + ns, $.proxy(that._onDrop, that));\n                if (!dropZone.find('.k-dropzone-hint').length) {\n                    dropZone.append($('<em class=\\'k-dropzone-hint\\'>' + that.localization.dropFilesHere + '</em>'));\n                }\n                bindDragEventWrappers(dropZone, ns, function () {\n                    if (!dropZone.closest('.k-upload').hasClass('k-state-disabled')) {\n                        dropZone.addClass('k-dropzone-hovered');\n                    }\n                }, function () {\n                    dropZone.removeClass('k-dropzone-hovered');\n                });\n                that._bindDocumentDragEventWrappers(dropZone);\n            },\n            _setupCustomDropZone: function () {\n                var that = this;\n                var dropZone = $(that.options.dropZone);\n                if (!that.wrapper.find('.k-dropzone-hint').length) {\n                    $('.k-dropzone', that.wrapper).append($('<em class=\\'k-dropzone-hint k-hidden\\'>' + that.localization.dropFilesHere + '</em>'));\n                } else {\n                    $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n                }\n                var ns = that._ns;\n                dropZone.on('dragenter' + ns, stopEvent).on('dragover' + ns, function (e) {\n                    e.preventDefault();\n                }).on('drop' + ns, $.proxy(that._onDrop, that));\n                bindDragEventWrappers(dropZone, ns, function (e) {\n                    if (!that.wrapper.hasClass('k-state-disabled')) {\n                        dropZone.removeClass('k-dropzone-hovered');\n                        dropZone.addClass('k-dropzone-hovered');\n                        $(e.target).addClass('k-dropzone-hovered');\n                    }\n                }, function () {\n                    dropZone.removeClass('k-dropzone-hovered');\n                    dropZone.find('.k-dropzone-hovered').removeClass('k-dropzone-hovered');\n                });\n                that._bindDocumentDragEventWrappers(dropZone);\n            },\n            _bindDocumentDragEventWrappers: function (dropZone) {\n                var that = this;\n                var ns = that._ns;\n                bindDragEventWrappers($(document), ns, function () {\n                    if (!that.wrapper.hasClass('k-state-disabled')) {\n                        dropZone.addClass('k-dropzone-active');\n                        dropZone.closest('.k-upload').removeClass('k-upload-empty');\n                        dropZone.find('.k-dropzone-hint').removeClass('k-hidden');\n                    }\n                }, function () {\n                    dropZone.removeClass('k-dropzone-active');\n                    dropZone.find('.k-dropzone-hint').addClass('k-hidden');\n                    if ($('li.k-file', dropZone.closest('.k-upload')).length === 0) {\n                        dropZone.closest('.k-upload').addClass('k-upload-empty');\n                    }\n                });\n            },\n            _toggleDropZone: function () {\n                var that = this, dropZone = that.options.dropZone;\n                if (!that._supportsDrop()) {\n                    return;\n                }\n                $(dropZone).off(that._ns);\n                $('.k-dropzone', that.wrapper).off(that._ns);\n                if (dropZone !== '') {\n                    that._setupCustomDropZone();\n                } else {\n                    that._setupDropZone();\n                }\n            },\n            _supportsRemove: function () {\n                return !!this.options.async.removeUrl;\n            },\n            _submitRemove: function (fileNames, eventArgs, onSuccess, onError) {\n                var upload = this, removeField = upload.options.async.removeField || 'fileNames', params = $.extend(eventArgs.data, antiForgeryTokens());\n                params[removeField] = fileNames;\n                jQuery.ajax({\n                    type: this.options.async.removeVerb,\n                    dataType: 'json',\n                    dataFilter: normalizeJSON,\n                    url: this.options.async.removeUrl,\n                    traditional: true,\n                    data: params,\n                    headers: eventArgs.headers,\n                    success: onSuccess,\n                    error: onError,\n                    xhrFields: { withCredentials: this.options.async.withCredentials }\n                });\n            },\n            _wrapInput: function (input) {\n                var that = this;\n                var options = that.options;\n                input.wrap('<div class=\\'k-widget k-upload\\'><div class=\\'k-dropzone\\'><div class=\\'k-button k-upload-button\\' aria-label=\\'' + this.localization.select + '\\'></div></div></div>');\n                if (!options.async.saveUrl) {\n                    input.closest('.k-upload').addClass('k-upload-sync');\n                } else {\n                    input.closest('.k-upload').addClass('k-upload-async');\n                }\n                input.closest('.k-upload').addClass('k-upload-empty');\n                input.closest('.k-button').append('<span>' + this.localization.select + '</span>');\n                return input.closest('.k-upload');\n            },\n            _checkAllComplete: function () {\n                if ($('.k-file.k-file-progress', this.wrapper).length === 0) {\n                    this.trigger(COMPLETE);\n                }\n            },\n            _inputFiles: function (sourceInput) {\n                return inputFiles(sourceInput);\n            }\n        });\n        var syncUploadModule = function (upload) {\n            this.name = 'syncUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.element.closest('form').attr('enctype', 'multipart/form-data').attr('encoding', 'multipart/form-data');\n        };\n        syncUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload;\n                var sourceInput = $(e.target);\n                var filesContainErrors = upload._filesContainValidationErrors(files);\n                upload._addInput(sourceInput);\n                var fileData = { 'fileNames': files };\n                if (filesContainErrors) {\n                    sourceInput.remove();\n                } else {\n                    fileData.relatedInput = sourceInput;\n                }\n                var file = upload._enqueueFile(getFileName(sourceInput), fileData);\n                if (filesContainErrors) {\n                    upload._hideUploadProgress(file);\n                }\n                upload._fileAction(file, REMOVE);\n            },\n            onRemove: function (e) {\n                var fileEntry = getFileEntry(e);\n                var relatedInput = fileEntry.data('relatedInput');\n                if (relatedInput) {\n                    relatedInput.remove();\n                }\n                this.upload._removeFileEntry(fileEntry);\n            }\n        };\n        var iframeUploadModule = function (upload) {\n            this.name = 'iframeUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.iframes = [];\n        };\n        Upload._frameId = 0;\n        iframeUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload;\n                var sourceInput = $(e.target);\n                var hasValidationErrors = upload._filesContainValidationErrors(files);\n                var fileEntry = this.prepareUpload(sourceInput, files, hasValidationErrors);\n                if (upload.options.async.autoUpload) {\n                    if (!hasValidationErrors) {\n                        this.performUpload(fileEntry);\n                    } else {\n                        upload._fileAction(fileEntry, REMOVE);\n                        upload._showHeaderUploadStatus(false);\n                    }\n                } else {\n                    upload._fileAction(fileEntry, REMOVE);\n                    if (!hasValidationErrors) {\n                        upload._showActionButtons();\n                    } else {\n                        upload._updateHeaderUploadStatus();\n                    }\n                }\n                if (hasValidationErrors) {\n                    upload._hideUploadProgress(fileEntry);\n                }\n            },\n            prepareUpload: function (sourceInput, files, hasValidationErrors) {\n                var upload = this.upload;\n                var activeInput = $(upload.element);\n                var name = upload.options.async.saveField || sourceInput.attr('name');\n                var fileEntry, fileData, iframe, form;\n                upload._addInput(sourceInput);\n                sourceInput.attr('name', name);\n                if (!hasValidationErrors) {\n                    iframe = this.createFrame(upload.name + '_' + Upload._frameId++);\n                    this.registerFrame(iframe);\n                    form = this.createForm(upload.options.async.saveUrl, iframe.attr('name')).append(activeInput);\n                    fileData = {\n                        'frame': iframe,\n                        'relatedInput': activeInput,\n                        'fileNames': files\n                    };\n                } else {\n                    sourceInput.remove();\n                    fileData = { 'fileNames': files };\n                }\n                fileEntry = upload._enqueueFile(getFileName(sourceInput), fileData);\n                if (iframe) {\n                    iframe.data({\n                        'form': form,\n                        'file': fileEntry\n                    });\n                }\n                return fileEntry;\n            },\n            performUpload: function (fileEntry) {\n                var e = { files: fileEntry.data('fileNames') };\n                var iframe = fileEntry.data('frame');\n                var upload = this.upload;\n                var fileValidation = fileEntry.find('.k-file-validation-message');\n                var fileInfo = fileEntry.find('.k-file-information');\n                var fileSize = fileEntry.find('.k-file-size');\n                if (!upload.trigger(UPLOAD, e)) {\n                    upload._hideActionButtons();\n                    upload._showHeaderUploadStatus(true);\n                    iframe.appendTo(document.body);\n                    var form = iframe.data('form').attr('action', upload.options.async.saveUrl).appendTo(document.body);\n                    e.data = $.extend({}, e.data, antiForgeryTokens());\n                    for (var key in e.data) {\n                        var dataInput = form.find('input[name=\\'' + key + '\\']');\n                        if (dataInput.length === 0) {\n                            dataInput = $('<input>', {\n                                type: 'hidden',\n                                name: key\n                            }).prependTo(form);\n                        }\n                        dataInput.val(e.data[key]);\n                    }\n                    upload._fileAction(fileEntry, CANCEL);\n                    upload._fileState(fileEntry, 'uploading');\n                    $(fileEntry).removeClass('k-file-error').addClass('k-file-progress');\n                    if (fileValidation.length > 0) {\n                        fileValidation.remove();\n                    }\n                    if (fileInfo.length > 0) {\n                        fileInfo.removeClass('k-hidden');\n                    } else if (fileSize.length > 0) {\n                        fileSize.removeClass('k-hidden');\n                    }\n                    iframe.one('load', $.proxy(this.onIframeLoad, this));\n                    form[0].submit();\n                } else {\n                    upload._removeFileEntry(iframe.data('file'));\n                    this.cleanupFrame(iframe);\n                    this.unregisterFrame(iframe);\n                }\n            },\n            onSaveSelected: function () {\n                var module = this;\n                var upload = module.upload;\n                $('.k-file', this.element).each(function () {\n                    var fileEntry = $(this);\n                    var started = isFileUploadStarted(fileEntry);\n                    var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data('fileNames'));\n                    if (!started && !hasValidationErrors) {\n                        module.performUpload(fileEntry);\n                    }\n                });\n            },\n            onIframeLoad: function (e) {\n                var iframe = $(e.target), responseText;\n                try {\n                    responseText = iframe.contents().text();\n                } catch (ex) {\n                    responseText = 'Error trying to get server response: ' + ex;\n                }\n                this.processResponse(iframe, responseText);\n            },\n            processResponse: function (iframe, responseText) {\n                var fileEntry = iframe.data('file'), module = this, fakeXHR = { responseText: responseText };\n                tryParseJSON(responseText, function (jsonResult) {\n                    $.extend(fakeXHR, {\n                        statusText: 'OK',\n                        status: '200'\n                    });\n                    module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                    module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, fakeXHR);\n                    module.cleanupFrame(iframe);\n                    module.unregisterFrame(iframe);\n                }, function () {\n                    $.extend(fakeXHR, {\n                        statusText: 'error',\n                        status: '500'\n                    });\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, fakeXHR);\n                });\n            },\n            onCancel: function (e) {\n                var iframe = $(e.target).data('frame');\n                this.stopFrameSubmit(iframe);\n                this.cleanupFrame(iframe);\n                this.unregisterFrame(iframe);\n                this.upload._removeFileEntry(iframe.data('file'));\n            },\n            onRetry: function (e) {\n                var fileEntry = getFileEntry(e);\n                this.performUpload(fileEntry);\n            },\n            onRemove: function (e, eventArgs, shouldSendRemoveRequest) {\n                var module = this;\n                var upload = module.upload;\n                var fileEntry = getFileEntry(e);\n                var iframe = fileEntry.data('frame');\n                if (iframe) {\n                    module.unregisterFrame(iframe);\n                    upload._removeFileEntry(fileEntry);\n                    module.cleanupFrame(iframe);\n                } else {\n                    if (fileEntry.hasClass('k-file-success')) {\n                        removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                    } else {\n                        upload._removeFileEntry(fileEntry);\n                    }\n                }\n            },\n            onAbort: function () {\n                var element = this.element, module = this;\n                $.each(this.iframes, function () {\n                    $('input', this.data('form')).appendTo(element);\n                    module.stopFrameSubmit(this[0]);\n                    this.data('form').remove();\n                    this.remove();\n                });\n                this.iframes = [];\n            },\n            createFrame: function (id) {\n                return $('<iframe' + ' name=\\'' + id + '\\'' + ' id=\\'' + id + '\\'' + ' style=\\'display:none;\\' />');\n            },\n            createForm: function (action, target) {\n                return $('<form enctype=\\'multipart/form-data\\' method=\\'POST\\'' + ' action=\\'' + action + '\\'' + ' target=\\'' + target + '\\'' + '/>');\n            },\n            stopFrameSubmit: function (frame) {\n                if (typeof frame.stop != 'undefined') {\n                    frame.stop();\n                } else if (frame.document) {\n                    frame.document.execCommand('Stop');\n                }\n            },\n            registerFrame: function (frame) {\n                this.iframes.push(frame);\n            },\n            unregisterFrame: function (frame) {\n                this.iframes = $.grep(this.iframes, function (value) {\n                    return value.attr('name') != frame.attr('name');\n                });\n            },\n            cleanupFrame: function (frame) {\n                var form = frame.data('form');\n                frame.data('file').data('frame', null);\n                setTimeout(function () {\n                    form.remove();\n                    frame.remove();\n                }, 1);\n            }\n        };\n        var formDataUploadModule = function (upload) {\n            this.name = 'formDataUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.position = {};\n            this.metaData = {};\n            this.cancelled = {};\n            this.resume = {};\n            this.paused = {};\n            this.retries = {};\n        };\n        formDataUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload;\n                var module = this;\n                var sourceElement = $(e.target);\n                var fileEntries = this.prepareUpload(sourceElement, files);\n                var hasValidationErrors;\n                var prev;\n                $.each(fileEntries, function (index) {\n                    hasValidationErrors = upload._filesContainValidationErrors($(this.data('fileNames')));\n                    if (upload.options.async.autoUpload) {\n                        if (!hasValidationErrors) {\n                            if (upload.options.async.chunkSize) {\n                                module.prepareChunk(this);\n                                prev = this.prev();\n                                if (upload.options.async.concurrent || index === 0 && !prev.length || index === 0 && prev.hasClass('k-file-success')) {\n                                    module.performUpload(this);\n                                }\n                            } else {\n                                module.performUpload(this);\n                            }\n                        } else {\n                            upload._fileAction(this, REMOVE);\n                            upload._showHeaderUploadStatus(false);\n                        }\n                    } else {\n                        upload._fileAction(this, REMOVE);\n                        if (!hasValidationErrors) {\n                            upload._showActionButtons();\n                            this.addClass('k-toupload');\n                        } else {\n                            upload._updateHeaderUploadStatus();\n                        }\n                    }\n                    if (hasValidationErrors) {\n                        upload._hideUploadProgress(this);\n                    }\n                });\n            },\n            prepareUpload: function (sourceElement, files) {\n                var fileEntries = this.enqueueFiles(files);\n                if (sourceElement.is('input')) {\n                    $.each(fileEntries, function () {\n                        $(this).data('relatedInput', sourceElement);\n                    });\n                    sourceElement.data('relatedFileEntries', fileEntries);\n                    this.upload._addInput(sourceElement);\n                }\n                return fileEntries;\n            },\n            enqueueFiles: function (files) {\n                var upload = this.upload;\n                var name;\n                var i;\n                var filesLength = files.length;\n                var currentFile;\n                var fileEntry;\n                var fileEntries = [];\n                if (upload.options.async.batch === true) {\n                    name = $.map(files, function (file) {\n                        return file.name;\n                    }).join(', ');\n                    if (upload.directory || upload.options.directoryDrop) {\n                        $(files).each(function () {\n                            if (this.rawFile.webkitRelativePath || this.rawFile.relativePath) {\n                                this.name = this.rawFile.webkitRelativePath || this.rawFile.relativePath;\n                            }\n                        });\n                    }\n                    fileEntry = upload._enqueueFile(name, { fileNames: files });\n                    fileEntry.data('files', files);\n                    fileEntries.push(fileEntry);\n                } else {\n                    for (i = 0; i < filesLength; i++) {\n                        currentFile = files[i];\n                        name = currentFile.name;\n                        if (upload.directory || upload.options.directoryDrop) {\n                            if (currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath) {\n                                currentFile.name = currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath;\n                            }\n                        }\n                        fileEntry = upload._enqueueFile(name, { fileNames: [currentFile] });\n                        fileEntry.data('files', [currentFile]);\n                        fileEntries.push(fileEntry);\n                    }\n                }\n                return fileEntries;\n            },\n            performUpload: function (fileEntry) {\n                var upload = this.upload, formData = this.createFormData(), xhr = this.createXHR(), e = {\n                        files: fileEntry.data('fileNames'),\n                        XMLHttpRequest: xhr\n                    }, files;\n                var fileValidation = fileEntry.find('.k-file-validation-message');\n                var fileInfo = fileEntry.find('.k-file-information');\n                var fileSize = fileEntry.find('.k-file-size');\n                if (!upload.trigger(UPLOAD, e)) {\n                    if (fileEntry.find('.k-i-cancel').length === 0) {\n                        if (upload.options.async.chunkSize) {\n                            upload._fileAction(fileEntry, PAUSE);\n                        }\n                        upload._fileAction(fileEntry, CANCEL, upload.options.async.chunkSize);\n                    }\n                    if (!upload.wrapper.find('.k-toupload').length) {\n                        upload._hideActionButtons();\n                    }\n                    upload._showHeaderUploadStatus(true);\n                    if (e.formData) {\n                        formData = e.formData;\n                    } else {\n                        e.data = $.extend({}, e.data, antiForgeryTokens());\n                        for (var key in e.data) {\n                            formData.append(key, e.data[key]);\n                        }\n                        files = fileEntry.data('files');\n                        if (files) {\n                            this.populateFormData(formData, files);\n                        }\n                    }\n                    upload._fileState(fileEntry, 'uploading');\n                    $(fileEntry).removeClass('k-file-error').addClass('k-file-progress');\n                    if (fileValidation.length > 0) {\n                        fileValidation.remove();\n                    }\n                    if (fileInfo.length > 0) {\n                        fileInfo.removeClass('k-hidden');\n                    } else if (fileSize.length > 0) {\n                        fileSize.removeClass('k-hidden');\n                    }\n                    if (upload.options.async.useArrayBuffer && window.FileReader) {\n                        this._readFile(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                    } else {\n                        this.postFormData(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                    }\n                } else {\n                    this.removeFileEntry(fileEntry);\n                }\n            },\n            _readFile: function (saveUrl, formData, fileEntry, xhr) {\n                var that = this;\n                var upload = that.upload;\n                var file = fileEntry.data('files')[0];\n                var reader = new FileReader();\n                reader.onload = function (e) {\n                    try {\n                        if (!that.fileArrayBuffer) {\n                            that.fileArrayBuffer = e.target.result;\n                        } else {\n                            that.fileArrayBuffer = that._appendBuffer(that.fileArrayBuffer, e.target.result);\n                        }\n                    } catch (err) {\n                        upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n                        return;\n                    }\n                    if (that.position[file.uid] > file.size) {\n                        that.postFormData(upload.options.async.saveUrl, that.fileArrayBuffer, fileEntry, xhr);\n                        that.fileArrayBuffer = null;\n                    } else {\n                        that._readFile(saveUrl, formData, fileEntry, xhr);\n                    }\n                };\n                reader.onerror = function () {\n                    upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n                };\n                reader.readAsArrayBuffer(that._getCurrentChunk(file.rawFile, file.uid));\n            },\n            _appendBuffer: function (buffer1, buffer2) {\n                var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n                tmp.set(new Uint8Array(buffer1), 0);\n                tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n                return tmp.buffer;\n            },\n            onSaveSelected: function () {\n                var module = this;\n                var upload = module.upload;\n                $('.k-toupload', this.element).filter(function () {\n                    var fileEntry = $(this);\n                    var started = isFileUploadStarted(fileEntry);\n                    var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data('fileNames'));\n                    return !started && !hasValidationErrors;\n                }).each(function (index) {\n                    var fileEntry = $(this);\n                    var prevEntry = fileEntry.prev();\n                    fileEntry.removeClass('k-toupload');\n                    if (upload.options.async.chunkSize) {\n                        module.prepareChunk(fileEntry);\n                        if (upload.options.async.concurrent || index === 0 && !prevEntry.length || (index === 0 && prevEntry.hasClass('k-file-success') || prevEntry.hasClass('k-file-error'))) {\n                            module.performUpload(fileEntry);\n                        }\n                    } else {\n                        module.performUpload(fileEntry);\n                    }\n                });\n            },\n            onCancel: function (e) {\n                var fileEntry = getFileEntry(e);\n                if (this.upload.options.async.chunkSize) {\n                    this.cancelled[fileEntry.data('uid')] = true;\n                }\n                this.stopUploadRequest(fileEntry);\n                this.removeFileEntry(fileEntry);\n            },\n            onPause: function (e) {\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data('uid');\n                var async = this.upload.options.async;\n                if (async.chunkSize) {\n                    this.retries[fileUid] = async.maxAutoRetries + 1;\n                    this.paused[fileUid] = true;\n                    this.resume[fileUid] = false;\n                }\n            },\n            onResume: function (e) {\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data('uid');\n                if (this.upload.options.async.chunkSize) {\n                    delete this.paused[fileUid];\n                    this.resume[fileUid] = true;\n                    this.retries[fileEntry.data('uid')] = 1;\n                    this._increaseChunkIndex(fileUid);\n                    this.performUpload(fileEntry);\n                }\n            },\n            onRetry: function (e) {\n                var fileEntry = getFileEntry(e);\n                var async = this.upload.options.async;\n                if (async.chunkSize) {\n                    this.retries[fileEntry.data('uid')] = async.maxAutoRetries + 1;\n                    delete this.paused[fileEntry.data('uid')];\n                }\n                this.performUpload(fileEntry);\n            },\n            onRemove: function (e, eventArgs, shouldSendRemoveRequest) {\n                var module = this;\n                var upload = module.upload;\n                var fileEntry = getFileEntry(e);\n                var async = this.upload.options.async;\n                if (async.chunkSize) {\n                    this.retries[fileEntry.data('uid')] = async.maxAutoRetries + 1;\n                }\n                if (fileEntry.hasClass('k-file-success')) {\n                    removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                } else {\n                    module.removeFileEntry(fileEntry);\n                }\n            },\n            createXHR: function () {\n                return new XMLHttpRequest();\n            },\n            postFormData: function (url, data, fileEntry, xhr) {\n                var module = this;\n                fileEntry.data('request', xhr);\n                xhr.addEventListener('load', function (e) {\n                    module.onRequestSuccess.call(module, e, fileEntry);\n                }, false);\n                xhr.addEventListener(ERROR, function (e) {\n                    module.onRequestError.call(module, e, fileEntry);\n                }, false);\n                xhr.upload.addEventListener('progress', function (e) {\n                    module.onRequestProgress.call(module, e, fileEntry);\n                }, false);\n                xhr.open('POST', url, true);\n                xhr.withCredentials = this.upload.options.async.withCredentials;\n                var accept = this.upload.options.async.accept;\n                if (accept) {\n                    xhr.setRequestHeader('Accept', accept);\n                }\n                xhr.send(data);\n            },\n            createFormData: function () {\n                return new FormData();\n            },\n            populateFormData: function (data, files) {\n                var chunk;\n                var i;\n                var length = files.length;\n                var uid;\n                var upload = this.upload;\n                if (upload.options.async.chunkSize) {\n                    uid = files[0].uid;\n                    chunk = this._getCurrentChunk(files[0].rawFile, uid);\n                    data.append(upload.options.async.saveField || upload.name, chunk);\n                    var serializedMetaData = JSON.stringify(this.metaData[uid]);\n                    data.append('metadata', serializedMetaData);\n                } else {\n                    for (i = 0; i < length; i++) {\n                        data.append(upload.options.async.saveField || upload.name, files[i].rawFile);\n                    }\n                }\n                return data;\n            },\n            onRequestSuccess: function (e, fileEntry) {\n                var xhr = e.target, module = this;\n                function raiseError() {\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, xhr);\n                }\n                function parseSuccess(jsonResult) {\n                    var batch = module.upload.options.async.batch;\n                    var chunkSize = module.upload.options.async.chunkSize;\n                    var concurrent = module.upload.options.async.concurrent;\n                    var fileUid = jsonResult.fileUid;\n                    if (module.paused[fileUid] || module.cancelled[fileUid]) {\n                        return;\n                    }\n                    delete module.retries[fileUid];\n                    if (chunkSize && !batch && !jsonResult.uploaded) {\n                        module._increaseChunkIndex(fileUid);\n                        module.performUpload(fileEntry);\n                    } else if (chunkSize && !batch && !concurrent && fileEntry.next().length && !fileEntry.next().hasClass('k-toupload')) {\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module._resetChunkIndex(fileUid);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n                        module.performUpload(fileEntry.next());\n                    } else {\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n                        module.cleanupFileEntry(fileEntry);\n                    }\n                }\n                if (xhr.status >= 200 && xhr.status <= 299) {\n                    tryParseJSON(xhr.responseText, parseSuccess, raiseError);\n                } else {\n                    raiseError();\n                }\n            },\n            onRequestError: function (e, fileEntry) {\n                var xhr = e.target;\n                this.upload._onUploadError({ target: $(fileEntry, this.upload.wrapper) }, xhr);\n            },\n            cleanupFileEntry: function (fileEntry) {\n                var relatedInput = fileEntry.data('relatedInput'), uploadComplete = true;\n                if (relatedInput) {\n                    $.each(relatedInput.data('relatedFileEntries') || [], function () {\n                        if (this.parent().length > 0 && this[0] != fileEntry[0]) {\n                            uploadComplete = uploadComplete && this.hasClass('k-file-success');\n                        }\n                    });\n                    if (uploadComplete) {\n                        relatedInput.remove();\n                    }\n                }\n            },\n            removeFileEntry: function (fileEntry) {\n                var chunkSize = this.upload.options.async.chunkSize;\n                var concurrent = this.upload.options.async.concurrent;\n                var isUploadButtonVisible = this.upload.wrapper.find('.k-upload-selected').length > 0;\n                this.cleanupFileEntry(fileEntry);\n                if (chunkSize && !concurrent && !isUploadButtonVisible) {\n                    if (fileEntry.next().length) {\n                        this.performUpload(fileEntry.next());\n                    }\n                }\n                this.upload._removeFileEntry(fileEntry);\n            },\n            onRequestProgress: function (e, fileEntry) {\n                var percentComplete = Math.round(e.loaded * 100 / e.total);\n                var fileUid = fileEntry.data('uid');\n                var fileMetaData;\n                if (this.upload.options.async.chunkSize) {\n                    fileMetaData = this.metaData[fileUid];\n                    percentComplete = fileMetaData && fileMetaData.totalChunks ? Math.round(fileMetaData.chunkIndex / fileMetaData.totalChunks * 100) : 100;\n                }\n                this.upload._onFileProgress({ target: $(fileEntry, this.upload.wrapper) }, percentComplete);\n            },\n            stopUploadRequest: function (fileEntry) {\n                fileEntry.data('request').abort();\n            },\n            prepareChunk: function (fileEntry) {\n                var file = fileEntry.data('files')[0];\n                var rawFile = file.rawFile;\n                var uid = file.uid;\n                var chunkSize = this.upload.options.async.chunkSize;\n                this.position[uid] = 0;\n                this.metaData[uid] = {\n                    chunkIndex: 0,\n                    contentType: rawFile.type,\n                    fileName: rawFile.name,\n                    relativePath: file.name,\n                    totalFileSize: rawFile.size,\n                    totalChunks: Math.ceil(rawFile.size / chunkSize),\n                    uploadUid: uid\n                };\n            },\n            _decreaseChunkIndex: function (uid) {\n                this.metaData[uid].chunkIndex--;\n            },\n            _increaseChunkIndex: function (uid) {\n                this.metaData[uid].chunkIndex++;\n            },\n            _resetChunkIndex: function (uid) {\n                this.metaData[uid].chunkIndex = 0;\n            },\n            _decreasePosition: function (uid) {\n                this.position[uid] -= this.upload.options.async.chunkSize;\n            },\n            _getCurrentChunk: function (file, uid) {\n                var oldPosition = this.position[uid];\n                var methodToInvoke;\n                var async = this.upload.options.async;\n                var chunkSize = async.chunkSize || async.bufferChunkSize;\n                if (!this.position[uid]) {\n                    this.position[uid] = 0;\n                }\n                this.position[uid] += chunkSize;\n                if (!!(methodToInvoke = this._getChunker(file))) {\n                    return file[methodToInvoke](oldPosition, this.position[uid]);\n                } else {\n                    return file;\n                }\n            },\n            _getChunker: function (file) {\n                if (file.slice) {\n                    return 'slice';\n                } else if (file.mozSlice) {\n                    return 'mozSlice';\n                } else if (file.webkitSlice) {\n                    return 'webkitSlice';\n                } else {\n                    return null;\n                }\n            }\n        };\n        function getFileName(input) {\n            return $.map(inputFiles(input), function (file) {\n                return file.name;\n            }).join(', ');\n        }\n        function inputFiles($input) {\n            var input = $input[0];\n            if (input.files) {\n                return getAllFileInfo(input.files);\n            } else {\n                return [{\n                        name: stripPath(input.value),\n                        extension: getFileExtension(input.value),\n                        size: null\n                    }];\n            }\n        }\n        function getAllFileInfo(rawFiles) {\n            return $.map(rawFiles, function (file) {\n                return getFileInfo(file);\n            });\n        }\n        function getFileInfo(rawFile) {\n            var fileName = rawFile.name || rawFile.fileName;\n            return {\n                name: kendo.htmlEncode(fileName),\n                extension: getFileExtension(fileName),\n                size: typeof rawFile.size == 'number' ? rawFile.size : rawFile.fileSize,\n                rawFile: rawFile\n            };\n        }\n        function getFileExtension(fileName) {\n            var matches = fileName.match(rFileExtension);\n            return matches ? matches[0] : '';\n        }\n        function stripPath(name) {\n            var slashIndex = name.lastIndexOf('\\\\');\n            return slashIndex != -1 ? name.substr(slashIndex + 1) : name;\n        }\n        function assignGuidToFiles(files, unique) {\n            var uid = kendo.guid();\n            return $.map(files, function (file) {\n                file.uid = unique ? kendo.guid() : uid;\n                return file;\n            });\n        }\n        function validateFiles(files, validationInfo) {\n            var allowedExtensions = parseAllowedExtensions(validationInfo.allowedExtensions);\n            var maxFileSize = validationInfo.maxFileSize;\n            var minFileSize = validationInfo.minFileSize;\n            for (var i = 0; i < files.length; i++) {\n                validateFileExtension(files[i], allowedExtensions);\n                validateFileSize(files[i], minFileSize, maxFileSize);\n            }\n        }\n        function parseAllowedExtensions(extensions) {\n            var allowedExtensions = $.map(extensions, function (ext) {\n                var parsedExt = ext.substring(0, 1) === '.' ? ext : '.' + ext;\n                return parsedExt.toLowerCase();\n            });\n            return allowedExtensions;\n        }\n        function validateFileExtension(file, allowedExtensions) {\n            if (allowedExtensions.length > 0) {\n                if (allowedExtensions.indexOf(file.extension.toLowerCase()) < 0) {\n                    file.validationErrors = file.validationErrors || [];\n                    if ($.inArray(INVALIDFILEEXTENSION, file.validationErrors) === -1) {\n                        file.validationErrors.push(INVALIDFILEEXTENSION);\n                    }\n                }\n            }\n        }\n        function validateFileSize(file, minFileSize, maxFileSize) {\n            if (minFileSize !== 0 && file.size < minFileSize) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDMINFILESIZE, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDMINFILESIZE);\n                }\n            }\n            if (maxFileSize !== 0 && file.size > maxFileSize) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDMAXFILESIZE, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDMAXFILESIZE);\n                }\n            }\n        }\n        function getTotalFilesSizeMessage(files) {\n            var totalSize = 0;\n            if (typeof files[0].size == 'number') {\n                for (var i = 0; i < files.length; i++) {\n                    if (files[i].size) {\n                        totalSize += files[i].size;\n                    }\n                }\n            } else {\n                return '';\n            }\n            totalSize /= 1024;\n            if (totalSize < 1024) {\n                return totalSize.toFixed(2) + ' KB';\n            } else {\n                return (totalSize / 1024).toFixed(2) + ' MB';\n            }\n        }\n        function shouldRemoveFileEntry(upload) {\n            return !upload.multiple && $('.k-file', upload.wrapper).length > 1;\n        }\n        function removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest) {\n            if (!upload._supportsRemove()) {\n                if (shouldRemoveFileEntry(upload) || !shouldSendRemoveRequest) {\n                    upload._removeFileEntry(fileEntry);\n                }\n                return;\n            }\n            var files = fileEntry.data('fileNames');\n            var fileNames = $.map(files, function (file) {\n                return file.name;\n            });\n            if (shouldSendRemoveRequest === false) {\n                upload._removeFileEntry(fileEntry);\n                return;\n            }\n            upload._submitRemove(fileNames, eventArgs, function onSuccess(data, textStatus, xhr) {\n                var prevented = upload.trigger(SUCCESS, {\n                    operation: 'remove',\n                    files: files,\n                    response: data,\n                    XMLHttpRequest: xhr\n                });\n                if (!prevented) {\n                    upload._removeFileEntry(fileEntry);\n                }\n            }, function onError(xhr) {\n                if (shouldRemoveFileEntry(upload)) {\n                    upload._removeFileEntry(fileEntry);\n                }\n                upload.trigger(ERROR, {\n                    operation: 'remove',\n                    files: files,\n                    XMLHttpRequest: xhr\n                });\n                logToConsole('Server response: ' + xhr.responseText);\n            });\n        }\n        function tryParseJSON(input, onSuccess, onError) {\n            var success = false, json = '';\n            try {\n                json = $.parseJSON(normalizeJSON(input));\n                success = true;\n            } catch (e) {\n                onError();\n            }\n            if (success) {\n                onSuccess(json);\n            }\n        }\n        function normalizeJSON(input) {\n            if (typeof input === 'undefined' || input === '') {\n                input = '{}';\n            }\n            return input;\n        }\n        function stopEvent(e) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n        function bindDragEventWrappers(element, namespace, onDragEnter, onDragLeave) {\n            var hideInterval, lastDrag;\n            element.on('dragenter' + namespace, function (e) {\n                onDragEnter(e);\n                lastDrag = new Date();\n                if (!hideInterval) {\n                    hideInterval = setInterval(function () {\n                        var sinceLastDrag = new Date() - lastDrag;\n                        if (sinceLastDrag > 100) {\n                            onDragLeave();\n                            clearInterval(hideInterval);\n                            hideInterval = null;\n                        }\n                    }, 100);\n                }\n            }).on('dragover' + namespace, function () {\n                lastDrag = new Date();\n            });\n        }\n        function isFileUploadStarted(fileEntry) {\n            return fileEntry.is('.k-file-progress, .k-file-success, .k-file-error');\n        }\n        function getFileEntry(e) {\n            return $(e.target).closest('.k-file');\n        }\n        kendo.ui.plugin(Upload);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}