{"version":3,"sources":["kendo.filemanager.js"],"names":["f","define","$","undefined","kendo","window","extend","Class","Command","init","options","this","filemanager","CreateFolderCommand","fn","call","exec","that","dataSource","_viewDataSource","add","RenameCommand","target","viewItem","_view","widgetComponent","dataItem","edit","_renameTreeViewItem","uid","data","item","treeView","getByUid","realItem","get","id","_prompt","type","defaultInput","name","done","newName","set","DeleteCommand","itemsToRemove","items","getSelected","is","length","_confirm","removeItems","i","Array","isArray","remove","CopyCommand","targetDataSource","children","toJSON","fileManagerNewItem","MoveCommand","cloning","SortCommand","sortOptions","defaultSortOption","dir","field","sort","folderSortOption","SearchCommand","filter","operator","value","ChangeViewCommand","view","resize","OpenDialogCommand","dialog","open","console","warn","format","TogglePaneCommand","pane","resizable","getResizable","toggle","wrapper","find","handle","_resizeDraggable","ui","FileManagerCommand","commands","jQuery","amd","a1","a2","a3","ListView","TreeView","Grid","Observable","proxy","keys","NAVIGATE","SELECT","EXPAND","CHANGE","OPEN","LOAD","KEYDOWN","KEYDOWNACTION","NS","fileManagerDraggables","fileManagerDragOrigin","registerViewComponent","componentName","component","ViewComponents","getViewComponent","Component","widget","element","Error","_bindEvents","bind","_binding","_bound","ev","trigger","preventDefault","_setDSOptions","dataSourceOptions","_initDragAndDrop","dropFilter","draggable","kendoDraggable","hint","_hint","cursorOffset","top","left","holdToDrag","ignore","hold","_hold","userEvents","minHold","droptarget","kendoDropTargetArea","drop","_onDrop","dragenter","dropTarget","addClass","dragleave","removeClass","currentTarget","selectable","clear","select","cancel","selectedItems","messages","isDirectory","targetId","itemIds","push","refresh","setDataSource","destroy","ViewComponent","explicitOptions","defaultOptions","kendoKeydown","_kendoKeydown","listView","isLocalBinding","layout","flex","direction","wrap","support","mobileOS","template","editTemplate","navigatable","_select","on","_dblClick","_mousedown","_keydown","_keydownAction","sender","_closeEditable","dataItems","entries","keyCode","ESC","node","closest","which","current","ENTER","preventKendoKeydown","_triggerOpen","entry","addFolder","selected","off","dataTextField","_refreshDataSource","existingItem","action","parentNode","map","guid","hasChildren","findByUid","_progress","each","index","append","_shouldFocus","focus","_remove","_nextVisible","_navigate","_expand","entryId","path","noop","selectedItem","reload","read","_setupColumns","grid","editable","mode","confirmation","sortable","columns","title","nameField","icon","getFileGroup","extension","dateCreatedField","sizeField","size","getFileSizeMessage","table","_toggleFocusable","saveRow","setTimeout","_tryCancel","cancelChanges","container","_editContainer","val","state","addBack","toggleClass","model","dirty","_destroyEditable","_displayRow","addRow","editRow","FileManagerDetailsToggle","ToolBar","Item","toolbar","CLICK","TOGGLE","CLOSE","ACTION","FileManagerToolBar","_extendOptions","_attachEvents","events","concat","defaultTools","createFolder","text","command","rules","upload","sortDirection","buttons","togglable","group","sortField","menuButtons","changeView","spacer","details","overflow","search","_click","_change","tools","Object","_extendToolsOptions","tool","toolOptions","toolRules","isBuiltInTool","isPlainObject","JSON","parse","deepExtend","attributes","aria-label","data-command","data-options","_mapButtonGroups","_mapMenuButtons","remote","hidden","button","initialView","isToolEnabled","toolName","found","args","fileManagerSearch","SearchTool","input","iconWrapper","renderIcon","addUidAttr","addIdAttr","addOverflowAttr","attr","placeholder","_inputHandler","_input","registerComponent","label","switchElement","switchInstance","Switch","change","checked","detailsChecked","unchecked","detailsUnchecked","fileManagerDetailsToggle","parent","FileEntry","FileManagerDataSource","Node","HierarchicalDataSource","DataSource","schemas","fields","defaultValue","hasDirectories","created","createdUtc","modified","modifiedUtc","isDirectoryObject","getter","isFunction","_initChildren","transport","parameterMap","_childrenOptions","e","collection","_updateChildrenField","isNew","_defaultId","fileEntry","serverFiltering","_hierarchicalFilter","schema","modelBase","LocalTransport","_attachBubbleHandlers","insert","result","_hasDirectories","create","_dataSource","ContextMenu","FileManagerContextMenu","_overrideTemplates","_extendItems","_onSelect","templates","sprite","defaultItems","rename","spriteCssClass","delete","key","_extendItem","DataBoundWidget","outerHeight","_outerHeight","ERROR","UPLOAD","SUCCESS","HIDE","DATABINDING","DATABOUND","DROP","EXECUTE","TREE_TYPE","DOT","fileManagerStyles","header","navigation","contentContainer","content","preview","treeview","breadcrumb","list","uploadDialog","splitBar","splitBarHorizontal","splitBarHover","splitBarIcon","splitBarNavigation","splitBarPreview","fileManagerTemplateStyles","filePreview","fileInfo","fileName","fileMeta","metaLabel","metaValue","viewTypes","NO_FILE_PREVIEW_TEMPLATE","SINGLE_FILES_PREVIEW_TEMPLATE","MULTIPLE_FILES_PREVIEW_TEMPLATE","FileManager","_wrapper","_renderHeader","_renderContentContainer","_initContextMenu","_renderNavigation","_renderContent","_renderPreview","_initUploadDialog","_resizable","notify","height","contextMenu","uploadUrl","views","dialogs","width","moveConfirm","closable","deleteConfirm","renamePrompt","previewPane","metaFields","noFileTemplate","singleFileTemplate","multipleFilesTemplate","sortDirectionAsc","sortDirectionDesc","typeField","dateModifiedField","gridView","okText","close","noFileSelected","typeSortOrder","nameSortOrder","autoSync","_errorHandler","unbind","_changeHandler","_error","xhr","status","statusText","_resizeHandler","onResize","_initToolbar","menuOptions","executeCommand","_cacheFocus","_initTreeView","_initBreadcrumb","_initView","_initUpload","hide","enablePreview","previewContainer","_setPreviewPaneContent","previewTemplate","previewPaneMessages","previewPaneOptions","selection","styles","html","toolbarElement","toolbarOptions","treeViewElement","_load","_drop","indexOf","fail","DELETE","F2","_viewType","confirm","kendoConfirm","_restoreFocus","prompt","kendoPrompt","activeElement","document","popup","visible","hasClass","_focusElement","viewWrapper","breadcrumbElement","breadcrumbOptions","_breadcrumbChange","Breadcrumb","uploadInstance","dialogMessages","dialogElement","dialogOptions","modal","actions","_clearUploadFilesList","primary","_shouldInitUpload","Dialog","_toggleUploadDropZone","shouldInit","async","saveUrl","uploadElement","uploadOptions","autoUpload","dropZone","Upload","_sendUploadPathParameter","_success","clearAllFiles","zone","setOptions","source","_createResizableSplitBar","cssClass","hover","_initResizableNavigation","contentWrapperWidth","navigationWrapperWidth","contentWrapper","navigationWrapper","insertAfter","end","kendoResizable","start","delta","x","initialDelta","isRtl","getKendoResizable","_initResizablePreview","previewWrapperWidth","previewWrapper","insertBefore","empty","_open","el","join","commandName","commandOptions","navigate","load","sync","_navigateToParent","loaded","parentNodePath","_buildBreadcrumbPath","values","reverse","_adjustDimensions","gridSelector","listViewSelector","totalHeight","toolbarHeight","breadcrumbHeight","_resize","getSize","dimensions","_path","replace","unbindResize","plugin"],"mappings":"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","file":"kendo.filemanager.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('filemanager/commands', ['kendo.core'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, Class = kendo.Class;\n        var Command = Class.extend({\n            init: function (options) {\n                this.options = options;\n                this.filemanager = options.filemanager;\n            }\n        });\n        var CreateFolderCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, dataSource = filemanager._viewDataSource || filemanager.dataSource;\n                dataSource.add();\n            }\n        });\n        var RenameCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, target = that.options.target, viewItem = that.filemanager._view.widgetComponent.dataItem(target);\n                if (target && viewItem) {\n                    that.filemanager._view.edit(target);\n                } else {\n                    that._renameTreeViewItem(target);\n                }\n            },\n            _renameTreeViewItem: function (target) {\n                var that = this, uid = target.data('uid'), item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid), realItem = that.filemanager.dataSource.get(item.id);\n                that.filemanager._prompt({\n                    type: 'rename',\n                    defaultInput: realItem.name,\n                    target: target\n                }).done(function (newName) {\n                    realItem.set('name', newName);\n                });\n            }\n        });\n        var DeleteCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, target = that.options.target, filemanager = that.filemanager, items = filemanager.getSelected(), viewItem = that.filemanager._view.widgetComponent.dataItem(target), itemsToRemove;\n                if (target && target.is('.k-state-selected') && items && items.length) {\n                    itemsToRemove = items;\n                } else if (target && viewItem) {\n                    itemsToRemove = viewItem;\n                } else if (target) {\n                    var uid = target.data('uid');\n                    var item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid);\n                    var realItem = that.filemanager.dataSource.get(item.id);\n                    itemsToRemove = realItem;\n                }\n                filemanager._confirm({\n                    type: 'delete',\n                    target: target\n                }).done(function () {\n                    that.removeItems(itemsToRemove);\n                });\n            },\n            removeItems: function (items) {\n                var itemsToRemove = Array.isArray(items) ? items : [items];\n                for (var i = 0; i < itemsToRemove.length; i++) {\n                    this.filemanager.dataSource.remove(itemsToRemove[i]);\n                }\n            }\n        });\n        var CopyCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, dataSource = filemanager.dataSource, items = that.options.items, target = dataSource.get(that.options.target), targetDataSource = target.children;\n                for (var i = 0; i < items.length; i++) {\n                    var item = dataSource.get(items[i]).toJSON();\n                    item.fileManagerNewItem = true;\n                    targetDataSource.add(item);\n                }\n            }\n        });\n        var MoveCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, dataSource = filemanager.dataSource, items = that.options.items, target = dataSource.get(that.options.target), targetDataSource = target.children;\n                for (var i = 0; i < items.length; i++) {\n                    var item = dataSource.get(items[i]);\n                    var cloning = item.toJSON();\n                    cloning.fileManagerNewItem = true;\n                    targetDataSource.add(cloning);\n                    dataSource.remove(item);\n                }\n            }\n        });\n        var SortCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, options = that.options, filemanager = that.filemanager, sortOptions = filemanager.defaultSortOption;\n                extend(sortOptions, {\n                    dir: options.dir,\n                    field: options.field\n                });\n                filemanager._view.widgetComponent.dataSource.sort([\n                    filemanager.folderSortOption,\n                    sortOptions\n                ]);\n            }\n        });\n        var SearchCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, options = that.options, filemanager = that.filemanager, filter = {\n                        field: options.field,\n                        operator: options.operator,\n                        value: options.value\n                    };\n                filemanager._view.widgetComponent.dataSource.filter(filter);\n            }\n        });\n        var ChangeViewCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, options = that.options, filemanager = that.filemanager;\n                filemanager.view(options.value);\n                filemanager.resize(true);\n            }\n        });\n        var OpenDialogCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, dialog = filemanager[that.options.type];\n                if (dialog) {\n                    dialog.open();\n                } else {\n                    window.console.warn(kendo.format('The {0} dialog is not available!', that.options.type));\n                }\n            }\n        });\n        var TogglePaneCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, pane = filemanager[that.options.type], resizable = that.getResizable();\n                if (pane) {\n                    pane.toggle();\n                    if (resizable) {\n                        filemanager.wrapper.find(resizable.options.handle).toggle();\n                    }\n                }\n            },\n            getResizable: function () {\n                var that = this, filemanager = that.filemanager, type = that.options.type;\n                if (!filemanager._resizeDraggable) {\n                    return;\n                }\n                return filemanager._resizeDraggable[type];\n            }\n        });\n        extend(kendo.ui, {\n            filemanager: {\n                FileManagerCommand: Command,\n                commands: {\n                    CreateFolderCommand: CreateFolderCommand,\n                    RenameCommand: RenameCommand,\n                    DeleteCommand: DeleteCommand,\n                    MoveCommand: MoveCommand,\n                    CopyCommand: CopyCommand,\n                    SortCommand: SortCommand,\n                    SearchCommand: SearchCommand,\n                    ChangeViewCommand: ChangeViewCommand,\n                    OpenDialogCommand: OpenDialogCommand,\n                    TogglePaneCommand: TogglePaneCommand\n                }\n            }\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/view', [\n        'kendo.listview',\n        'kendo.treeview'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, Observable = kendo.Observable, extend = $.extend, proxy = $.proxy, keys = kendo.keys, NAVIGATE = 'navigate', SELECT = 'select', EXPAND = 'expand', CHANGE = 'change', OPEN = 'open', LOAD = 'load', KEYDOWN = 'keydown', KEYDOWNACTION = 'keydownAction', NS = '.kendoFileManagerViewComponent', fileManagerDraggables = [], fileManagerDragOrigin = null;\n        var registerViewComponent = function (componentName, component) {\n            ui.filemanager.ViewComponents[componentName] = component;\n        };\n        var getViewComponent = function (componentName) {\n            return ui.filemanager.ViewComponents[componentName] || null;\n        };\n        var Component = Observable.extend({\n            init: function (widget, element, options) {\n                var that = this;\n                that.element = element;\n                that.options = options;\n                if (widget) {\n                    that.widgetComponent = new widget(element, options);\n                } else {\n                    throw new Error('The widget for the ViewComponent is not available! Please add the corresponding scripts!');\n                }\n                Observable.fn.init.call(that);\n            },\n            _bindEvents: function () {\n                this.widgetComponent.bind('dataBinding', proxy(this._binding, this));\n                this.widgetComponent.bind('dataBound', proxy(this._bound, this));\n            },\n            _binding: function (ev) {\n                if (this.trigger('dataBinding', ev)) {\n                    ev.preventDefault();\n                }\n            },\n            _bound: function () {\n                this.trigger('dataBound');\n            },\n            _setDSOptions: function (options, dataSourceOptions) {\n                if (!options.dataSource && dataSourceOptions) {\n                    options.dataSource = dataSourceOptions;\n                }\n            },\n            _initDragAndDrop: function (element, filter) {\n                var that = this;\n                filter = filter || that.options.dropFilter;\n                element = element || that.element;\n                that.draggable = element.kendoDraggable({\n                    filter: filter,\n                    hint: proxy(that._hint, that),\n                    cursorOffset: {\n                        top: -10,\n                        left: -50\n                    },\n                    holdToDrag: true,\n                    ignore: 'input, .k-focusable',\n                    hold: proxy(that._hold, that)\n                }).data('kendoDraggable');\n                that.draggable.userEvents.minHold = 150;\n                that.droptarget = element.kendoDropTargetArea({\n                    filter: filter,\n                    drop: proxy(that._onDrop, that),\n                    dragenter: function (ev) {\n                        ev.dropTarget.addClass('k-filemanager-drop-target');\n                    },\n                    dragleave: function (ev) {\n                        ev.dropTarget.removeClass('k-filemanager-drop-target');\n                    }\n                }).data('kendoDraggable');\n            },\n            _hold: function (ev) {\n                var that = this, target = ev.currentTarget;\n                if (!target.is('.k-state-selected')) {\n                    if (that.widgetComponent.selectable) {\n                        that.widgetComponent.selectable.clear();\n                    }\n                    that.widgetComponent.select(target);\n                }\n                if (that.widgetComponent.selectable) {\n                    that.widgetComponent.selectable.userEvents.cancel();\n                }\n            },\n            _hint: function (target) {\n                var that = this, item = that.widgetComponent.dataItem(target), selectedItems = that.widgetComponent.select();\n                fileManagerDragOrigin = that.widgetComponent;\n                fileManagerDraggables = selectedItems;\n                if (selectedItems.length > 1) {\n                    return kendo.format('<div class=\\'k-filemanager-drag-hint\\'><span class=\\'k-icon k-i-{0}\\'></span> <span>{1} {2}</span></div>', 'file', selectedItems.length, that.options.messages.items);\n                }\n                return kendo.format('<div class=\\'k-filemanager-drag-hint\\'><span class=\\'k-icon k-i-{0}\\'></span> <span>{1}</span></div>', item.isDirectory ? 'folder' : 'file', item.name);\n            },\n            _onDrop: function (ev) {\n                var that = this, target = that.widgetComponent.dataItem(ev.dropTarget), targetId = target.id, itemIds = [];\n                if (!target.isDirectory) {\n                    return;\n                }\n                for (var i = 0; i < fileManagerDraggables.length; i++) {\n                    var id = fileManagerDragOrigin.dataItem(fileManagerDraggables[i]).id;\n                    itemIds.push(id);\n                }\n                this.trigger('drop', {\n                    target: targetId,\n                    items: itemIds\n                });\n            },\n            getSelected: function () {\n                throw new Error('Not Implemented!');\n            },\n            refresh: function (dataSource) {\n                this.widgetComponent.setDataSource(dataSource);\n            },\n            destroy: function () {\n                kendo.destroy(this.element);\n            }\n        });\n        extend(kendo.ui.filemanager, {\n            ViewComponent: Component,\n            ViewComponents: {},\n            registerViewComponent: registerViewComponent,\n            getViewComponent: getViewComponent\n        });\n        var ListView = Component.extend({\n            init: function (element, options, explicitOptions) {\n                var that = this, dataSourceOptions = explicitOptions.dataSource, messages = explicitOptions.messages;\n                options = extend({}, that.defaultOptions, options, { messages: messages });\n                that._setDSOptions(options, dataSourceOptions);\n                options.kendoKeydown = options.kendoKeydown || proxy(that._kendoKeydown, that);\n                Component.fn.init.call(this, ui.ListView, element, options);\n                that.listView = that.widgetComponent;\n                that._bindEvents();\n                if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n            },\n            defaultOptions: {\n                layout: 'flex',\n                flex: {\n                    direction: 'row',\n                    wrap: 'wrap'\n                },\n                selectable: kendo.support.mobileOS ? 'row' : 'multiple',\n                template: '<div class=\\'k-listview-item\\' title=\\'#:name##:extension#\\'>' + '<div class=\\'k-file-preview\\'><span class=\\'k-file-icon k-icon k-i-#= !isDirectory ? kendo.getFileGroup(extension, true) : \\'folder\\' #\\'></span></div>' + '<div class=\\'k-file-name file-name\\'>#:name##:extension#</div>' + '</div>',\n                editTemplate: '<div class=\\'k-listview-item\\'>' + '<div class=\\'k-file-preview\\'><span class=\\'k-file-icon k-icon k-i-#= !isDirectory ? kendo.getFileGroup(extension, true) : \\'folder\\' #\\'></span></div>' + '<div class=\\'k-file-name\\'><input type=\\'text\\' class=\\'k-textbox\\' data-bind=\\'value:name\\' name=\\'name\\' required=\\'required\\' /></div>' + '</div>',\n                dropFilter: '.k-listview-item',\n                navigatable: true\n            },\n            _bindEvents: function () {\n                var that = this, listView = that.listView;\n                listView.bind(CHANGE, proxy(that._select, that));\n                listView.element.on('dblclick' + NS, proxy(that._dblClick, that));\n                listView.element.on('mousedown' + NS, '.k-listview-item:not(.k-edit-item)', proxy(that._mousedown, that));\n                listView.element.on(KEYDOWN + NS, '.k-edit-item', proxy(that._keydown, that));\n                listView.element.on(KEYDOWN + NS, proxy(that._keydownAction, that));\n                listView.bind('edit', function (ev) {\n                    var sender = ev.sender;\n                    ev.item.find('input').on('blur', function () {\n                        sender._closeEditable();\n                    });\n                });\n                Component.fn._bindEvents.call(this);\n            },\n            _select: function () {\n                var that = this, dataItems = that.getSelected();\n                that.trigger(SELECT, { entries: dataItems });\n            },\n            _keydown: function (ev) {\n                var that = this;\n                if (ev.keyCode === kendo.keys.ESC) {\n                    that.listView._closeEditable();\n                }\n            },\n            _keydownAction: function (ev) {\n                var that = this, target = $(ev.target).find('.k-state-focused');\n                if (target.length && !target.is('.k-edit-item')) {\n                    that.trigger(KEYDOWNACTION, {\n                        target: target,\n                        keyCode: ev.keyCode\n                    });\n                }\n            },\n            _mousedown: function (ev) {\n                var that = this, node = $(ev.target).closest('.k-listview-item');\n                if (ev.which === 3 && !node.is('.k-state-selected')) {\n                    that.listView.selectable.clear();\n                    that.listView.select(node);\n                }\n            },\n            _kendoKeydown: function (ev) {\n                var that = this, node = that.listView.current();\n                if (ev.keyCode === keys.ENTER && !ev.preventKendoKeydown) {\n                    that._triggerOpen(node);\n                    ev.preventKendoKeydown = true;\n                }\n            },\n            _dblClick: function (ev) {\n                var that = this, node = $(ev.target).closest('.k-listview-item');\n                that._triggerOpen(node);\n            },\n            _triggerOpen: function (node) {\n                var that = this;\n                if (node.is('.k-edit-item')) {\n                    return;\n                }\n                var item = that.listView.dataItem(node);\n                if (item) {\n                    that.trigger(OPEN, { entry: item });\n                }\n            },\n            addFolder: function () {\n                this.listView.add();\n            },\n            edit: function (target) {\n                var that = this, selected = that.listView.select();\n                that.listView.edit(target || selected);\n            },\n            getSelected: function () {\n                var that = this, items = that.listView.select(), dataItems = [];\n                for (var i = 0; i < items.length; i++) {\n                    var item = that.listView.dataItem(items[i]);\n                    if (item) {\n                        dataItems.push(item);\n                    }\n                }\n                return dataItems;\n            },\n            destroy: function () {\n                this.listView.element.off(NS);\n                Component.fn.destroy.call(this);\n            }\n        });\n        ui.filemanager.registerViewComponent('list', ListView);\n        var TreeView = Component.extend({\n            init: function (element, options, explicitOptions) {\n                var that = this, messages = explicitOptions.messages;\n                options = extend({}, that.defaultOptions, options, { messages: messages });\n                Component.fn.init.call(this, ui.TreeView, element, options);\n                that.treeView = that.widgetComponent;\n                that._bindEvents();\n                if (explicitOptions.draggable !== false && !explicitOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n            },\n            defaultOptions: {\n                dataTextField: 'name',\n                dropFilter: '.k-item'\n            },\n            _refreshDataSource: function (ev) {\n                var that = this, treeView = that.treeView, action = ev.action, node = ev.node, parentNode = null, items = ev.items.filter(function (item) {\n                        return item.isDirectory;\n                    }).map(function (item) {\n                        return extend({}, item.toJSON(), {\n                            id: item.id || kendo.guid(),\n                            hasChildren: item.hasChildren,\n                            items: []\n                        });\n                    });\n                if (node) {\n                    parentNode = treeView.findByUid(treeView.dataSource.get(node.id).uid);\n                    treeView._progress(parentNode, false);\n                }\n                if (!items.length) {\n                    return;\n                }\n                if (action == 'itemloaded' || parentNode && action === 'sync') {\n                    parentNode.find('.k-item').each(function (index, item) {\n                        treeView.remove(item);\n                    });\n                    treeView.append(items, parentNode);\n                    if (that._shouldFocus) {\n                        treeView.current(parentNode);\n                        treeView.focus();\n                    }\n                } else if (action == 'remove') {\n                    this._remove(items[0].id);\n                } else if (action == 'itemchange') {\n                    var existingItem = treeView.dataSource.get(items[0].id);\n                    if (existingItem) {\n                        existingItem.set(ev.field, items[0][ev.field]);\n                    } else {\n                        treeView.append(items[0], parentNode);\n                    }\n                } else if (!treeView.dataSource.data().length) {\n                    treeView.append(items);\n                } else if (action === 'sync' || action === undefined && !parentNode) {\n                    treeView.items().each(function (index, item) {\n                        treeView.remove(item);\n                    });\n                    treeView.append(items);\n                    if (that._shouldFocus) {\n                        treeView.current(treeView._nextVisible($()));\n                        treeView.focus();\n                    }\n                }\n            },\n            _remove: function (id) {\n                var that = this, treeView = that.treeView, dataSource = treeView.dataSource, item = dataSource.get(id), node;\n                if (item) {\n                    node = treeView.findByUid(item.uid);\n                    treeView.remove(node);\n                }\n            },\n            _bindEvents: function () {\n                var that = this;\n                that.treeView.bind(SELECT, proxy(that._navigate, that));\n                that.treeView.bind(EXPAND, proxy(that._expand, that));\n                that.treeView.element.bind(KEYDOWN, proxy(that._keydownAction, that));\n            },\n            _keydownAction: function (ev) {\n                var that = this, target = $(ev.target).find('.k-state-focused').closest('.k-item');\n                that.trigger(KEYDOWNACTION, {\n                    target: target,\n                    keyCode: ev.keyCode\n                });\n            },\n            _expand: function (ev) {\n                var that = this, treeView = that.treeView, entry = treeView.dataItem(ev.node);\n                ev.preventDefault();\n                that.trigger(LOAD, { entryId: entry.id });\n            },\n            _navigate: function (ev) {\n                var that = this, node = ev.node, entry = that.treeView.dataItem(node), path = entry.id;\n                ev.preventDefault();\n                that.trigger(NAVIGATE, {\n                    path: path,\n                    entry: entry.toJSON()\n                });\n            },\n            _hold: $.noop,\n            getSelected: function () {\n                var that = this, selectedItem = that.treeView.element.find('.k-state-selected').closest('.k-item'), item = that.treeView.dataItem(selectedItem);\n                return item;\n            },\n            refresh: function (id) {\n                var that = this, treeView = that.treeView, entry = treeView.dataSource.get(id), node = entry && treeView.findByUid(entry.uid);\n                if (entry && node) {\n                    treeView.element.find('.k-state-selected').removeClass('k-state-selected');\n                    node.find('> div .k-in').removeClass('k-state-hover').addClass('k-state-selected');\n                }\n            },\n            reload: function () {\n                this.treeView.dataSource.read();\n            }\n        });\n        ui.filemanager.registerViewComponent('tree', TreeView);\n        if (kendo.ui.Grid) {\n            var Grid = Component.extend({\n                init: function (element, options, explicitOptions) {\n                    var that = this, dataSourceOptions = explicitOptions.dataSource, messages = explicitOptions.messages;\n                    options = extend({}, that.defaultOptions, options, { messages: messages });\n                    that._setDSOptions(options, dataSourceOptions);\n                    that._setupColumns(options, messages);\n                    options.kendoKeydown = options.kendoKeydown || proxy(that._kendoKeydown, that);\n                    Component.fn.init.call(this, ui.Grid, element, options);\n                    that.grid = that.widgetComponent;\n                    that._bindEvents();\n                    if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                        that._initDragAndDrop();\n                    }\n                },\n                defaultOptions: {\n                    selectable: kendo.support.mobileOS ? 'row' : 'multiple',\n                    editable: {\n                        mode: 'inline',\n                        confirmation: false\n                    },\n                    sortable: true,\n                    dropFilter: 'tr:not(.k-grid-edit-row)',\n                    navigatable: true\n                },\n                _setupColumns: function (options, messages) {\n                    if (!options.columns) {\n                        options.columns = [\n                            {\n                                field: 'name',\n                                title: messages.nameField || 'Name',\n                                template: function (item) {\n                                    var icon = !item.isDirectory ? kendo.getFileGroup(item.extension, true) : 'folder';\n                                    var template = '<div class=\\'file-group-icon\\'>' + '<span class=\\'k-icon k-i-' + icon + '\\'></span>' + '</div>' + '<div class=\\'file-name\\'>' + item.name + item.extension + '<div>';\n                                    return template;\n                                }\n                            },\n                            {\n                                field: 'created',\n                                title: messages.dateCreatedField,\n                                format: '{0:G}'\n                            },\n                            {\n                                field: 'size',\n                                title: messages.sizeField,\n                                template: function (item) {\n                                    if (item.size > 0) {\n                                        return kendo.getFileSizeMessage(item.size);\n                                    } else {\n                                        return '';\n                                    }\n                                }\n                            }\n                        ];\n                    }\n                },\n                _bindEvents: function () {\n                    var that = this, grid = that.grid;\n                    grid.bind(CHANGE, proxy(that._select, that));\n                    grid.table.on('dblclick' + NS, proxy(that._dblClick, that));\n                    grid.table.on('mousedown' + NS, 'tr:not(.k-grid-edit-row)', proxy(that._mousedown, that));\n                    grid.table.on(KEYDOWN + NS, '.k-grid-edit-row', proxy(that._keydown, that));\n                    grid.table.on(KEYDOWN + NS, proxy(that._keydownAction, that));\n                    grid.bind('edit', function () {\n                        that._toggleFocusable(true);\n                    });\n                    grid.saveRow = $.noop;\n                    Component.fn._bindEvents.call(this);\n                },\n                _kendoKeydown: function (ev) {\n                    var that = this, current = that.grid.current(), node = current ? current.closest('tr[data-uid]') : null;\n                    if (node && ev.keyCode === keys.ENTER && !ev.preventKendoKeydown) {\n                        that._triggerOpen(node);\n                        ev.preventKendoKeydown = true;\n                    }\n                },\n                _keydownAction: function (ev) {\n                    var that = this, target = $(ev.target).find('.k-state-focused').closest('tr');\n                    if (target.length && !target.is('.k-grid-edit-row')) {\n                        that.trigger(KEYDOWNACTION, {\n                            target: target,\n                            keyCode: ev.keyCode\n                        });\n                    }\n                },\n                _keydown: function (ev) {\n                    var that = this, grid = that.grid;\n                    if (!$(ev.target).closest('.k-grid-edit-row').length) {\n                        return;\n                    }\n                    if (ev.keyCode === kendo.keys.ENTER) {\n                        setTimeout(function () {\n                            that._closeEditable();\n                        });\n                        that._tryCancel();\n                    }\n                    if (ev.keyCode === kendo.keys.ESC) {\n                        grid.cancelChanges();\n                    }\n                },\n                _mousedown: function (ev) {\n                    var that = this, node = $(ev.target).closest('tr[data-uid]');\n                    if (ev.which === 1 && that.grid.editable) {\n                        setTimeout(function () {\n                            that._closeEditable();\n                        });\n                        that._tryCancel();\n                    }\n                    if (ev.which === 3 && !node.is('.k-state-selected')) {\n                        that.grid.selectable.clear();\n                        that.grid.select(node);\n                    }\n                },\n                _tryCancel: function () {\n                    var that = this, grid = that.grid, container;\n                    if (grid.editable) {\n                        container = grid._editContainer;\n                        if (!container.find('input').val()) {\n                            grid.cancelChanges();\n                        }\n                    }\n                    setTimeout(function () {\n                        that._toggleFocusable(false);\n                    });\n                },\n                _toggleFocusable: function (state) {\n                    var that = this, grid = that.grid;\n                    grid.table.find('tr,td').children().addBack().toggleClass('k-focusable', state);\n                },\n                _closeEditable: function () {\n                    var that = this, container;\n                    if (that.grid.editable && !that.grid.editable.options.model.dirty) {\n                        container = that.grid._editContainer;\n                        that.grid._destroyEditable();\n                        that.grid._displayRow(container);\n                    }\n                },\n                _select: function () {\n                    var that = this, dataItems = that.getSelected();\n                    that.trigger(SELECT, { entries: dataItems });\n                },\n                _dblClick: function (ev) {\n                    var that = this, node = $(ev.target).closest('tr[data-uid]');\n                    that._triggerOpen(node);\n                },\n                _triggerOpen: function (node) {\n                    var that = this;\n                    if (node.is('.k-grid-edit-row')) {\n                        return;\n                    }\n                    var item = that.grid.dataItem(node);\n                    if (item) {\n                        that.trigger(OPEN, { entry: item });\n                    }\n                },\n                getSelected: function () {\n                    var that = this, items = that.grid.select(), dataItems = [];\n                    for (var i = 0; i < items.length; i++) {\n                        dataItems.push(that.grid.dataItem(items[i]));\n                    }\n                    return dataItems;\n                },\n                addFolder: function () {\n                    this.grid.addRow();\n                },\n                edit: function (target) {\n                    var that = this, selected = that.grid.select();\n                    that.grid.editRow(target || selected);\n                },\n                destroy: function () {\n                    this.grid.table.off(NS);\n                    this.grid.element.off(NS);\n                    Component.fn.destroy.call(this);\n                }\n            });\n            ui.filemanager.registerViewComponent('grid', Grid);\n        }\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/toolbar', [\n        'kendo.toolbar',\n        'kendo.switch'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, proxy = $.proxy, ToolBar = kendo.ui.ToolBar, Item = kendo.toolbar.Item, CLICK = 'click', TOGGLE = 'toggle', CLOSE = 'close', ACTION = 'action', CHANGE = 'change', NS = '.fileManagerToolbar';\n        var FileManagerToolBar = ToolBar.extend({\n            init: function (element, options) {\n                var that = this;\n                that._extendOptions(options);\n                ToolBar.fn.init.call(that, element, options);\n                that._attachEvents();\n            },\n            events: ToolBar.fn.events.concat([ACTION]),\n            defaultTools: {\n                createFolder: {\n                    type: 'button',\n                    text: 'New Folder',\n                    name: 'createFolder',\n                    command: 'CreateFolderCommand',\n                    rules: '{ \"remote\": true }'\n                },\n                upload: {\n                    type: 'button',\n                    text: 'Upload',\n                    name: 'upload',\n                    command: 'OpenDialogCommand',\n                    options: '{ \"type\": \"uploadDialog\" }',\n                    rules: '{ \"remote\": true }'\n                },\n                sortDirection: {\n                    type: 'buttonGroup',\n                    text: 'Sort Direction',\n                    name: 'sortDirection',\n                    buttons: [\n                        {\n                            name: 'sortDirectionAsc',\n                            icon: 'sort-asc-sm',\n                            togglable: true,\n                            group: 'sortDirection',\n                            command: 'SortCommand',\n                            options: '{ \"dir\": \"asc\" }',\n                            selected: true\n                        },\n                        {\n                            name: 'sortDirectionDesc',\n                            icon: 'sort-desc-sm',\n                            togglable: true,\n                            group: 'sortDirection',\n                            command: 'SortCommand',\n                            options: '{ \"dir\": \"desc\" }'\n                        }\n                    ]\n                },\n                sortField: {\n                    type: 'splitButton',\n                    text: 'Sort By',\n                    name: 'sortField',\n                    command: 'SortCommand',\n                    menuButtons: [\n                        {\n                            name: 'nameField',\n                            text: 'Name',\n                            options: '{\"field\": \"name\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'typeField',\n                            text: 'Type',\n                            options: '{\"field\": \"extension\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'sizeField',\n                            text: 'Size',\n                            options: '{\"field\": \"size\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'dateCreatedField',\n                            text: 'Date created',\n                            options: '{\"field\": \"createdUtc\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'dateModifiedField',\n                            text: 'Date modified',\n                            options: '{\"field\": \"modifiedUtc\"}',\n                            command: 'SortCommand'\n                        }\n                    ]\n                },\n                changeView: {\n                    type: 'buttonGroup',\n                    text: 'Change View',\n                    name: 'changeView',\n                    buttons: [\n                        {\n                            name: 'gridView',\n                            icon: 'grid-layout',\n                            togglable: true,\n                            group: 'changeView',\n                            command: 'ChangeViewCommand',\n                            options: 'grid'\n                        },\n                        {\n                            name: 'listView',\n                            icon: 'grid',\n                            togglable: true,\n                            group: 'changeView',\n                            command: 'ChangeViewCommand',\n                            options: 'list'\n                        }\n                    ]\n                },\n                spacer: { type: 'spacer' },\n                details: {\n                    type: 'fileManagerDetailsToggle',\n                    text: 'View Details',\n                    name: 'details',\n                    overflow: 'never',\n                    command: 'TogglePaneCommand',\n                    options: '{ \"type\": \"preview\" }'\n                },\n                search: {\n                    type: 'fileManagerSearch',\n                    text: 'Search',\n                    name: 'search',\n                    command: 'SearchCommand',\n                    icon: 'search',\n                    overflow: 'never',\n                    options: '{ \"field\": \"name\", \"operator\": \"startswith\" }'\n                }\n            },\n            _attachEvents: function () {\n                var that = this;\n                that.bind(TOGGLE, proxy(that._click, that));\n                that.bind(CLOSE, proxy(that._click, that));\n                that.bind(CLICK, proxy(that._click, that));\n                that.bind(CHANGE, proxy(that._change, that));\n            },\n            _extendOptions: function (options) {\n                var that = this, tools = options.items ? options.items : Object.keys(that.defaultTools);\n                that.options = options;\n                that.options.items = that._extendToolsOptions(tools);\n            },\n            _extendToolsOptions: function (tools) {\n                var that = this, messages = that.options.messages;\n                if (!tools.length) {\n                    return;\n                }\n                return tools.map(function (tool) {\n                    var isBuiltInTool = $.isPlainObject(tool) && Object.keys(tool).length === 1 && tool.name, toolOptions, toolRules;\n                    tool = isBuiltInTool ? tool.name : tool;\n                    toolOptions = $.isPlainObject(tool) ? tool : extend({}, that.defaultTools[tool]);\n                    toolRules = toolOptions.rules ? JSON.parse(toolOptions.rules) : {};\n                    kendo.deepExtend(toolOptions, {\n                        id: toolOptions.name + '-' + kendo.guid(),\n                        name: toolOptions.name,\n                        text: messages[toolOptions.name],\n                        attributes: {\n                            'aria-label': messages[toolOptions.name],\n                            'title': messages[toolOptions.name],\n                            'data-command': toolOptions.command,\n                            'data-options': toolOptions.options\n                        },\n                        overflow: toolOptions.overflow\n                    });\n                    if (toolOptions.type === 'buttonGroup') {\n                        toolOptions.buttons = toolOptions.buttons.map(proxy(that._mapButtonGroups, that));\n                    }\n                    if (toolOptions.type === 'splitButton') {\n                        toolOptions.menuButtons = toolOptions.menuButtons.map(proxy(that._mapMenuButtons, that));\n                    }\n                    if (toolRules.remote && that.options.filemanager.dataSource.isLocalBinding) {\n                        toolOptions.hidden = true;\n                    }\n                    return toolOptions;\n                }, that);\n            },\n            _mapButtonGroups: function (button) {\n                var that = this, messages = that.options.messages;\n                if (button.group === 'changeView' && button.options === that.options.filemanager.options.initialView) {\n                    button.selected = true;\n                }\n                return kendo.deepExtend(button, {\n                    attributes: extend({}, button.attributes, {\n                        'aria-label': messages[button.name],\n                        'title': messages[button.name],\n                        'data-command': button.command,\n                        'data-options': button.options\n                    })\n                });\n            },\n            _mapMenuButtons: function (button) {\n                var that = this, messages = that.options.messages;\n                return kendo.deepExtend(button, {\n                    text: messages[button.name],\n                    attributes: extend({}, button.attributes, {\n                        'aria-label': messages[button.name],\n                        'title': messages[button.name],\n                        'data-command': button.command,\n                        'data-options': button.options\n                    })\n                });\n            },\n            _click: function (ev) {\n                var command = $(ev.target).data('command'), options = $(ev.target).data('options');\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: options\n                });\n            },\n            _change: function (ev) {\n                var command = $(ev.target).data('command'), options = $(ev.target).data('options');\n                options = extend({}, options, { value: $(ev.target).val() });\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: options\n                });\n            },\n            isToolEnabled: function (toolName) {\n                var that = this, options = that.options, found = false;\n                for (var i = 0; i < options.items.length; i++) {\n                    if (options.items[i].name == toolName) {\n                        found = true;\n                        break;\n                    }\n                }\n                return options.items[toolName] || found;\n            },\n            action: function (args) {\n                this.trigger(ACTION, args);\n            },\n            destroy: function () {\n                if (this.fileManagerSearch) {\n                    this.fileManagerSearch.destroy();\n                }\n                ToolBar.fn.destroy.call(this);\n            }\n        });\n        var SearchTool = Item.extend({\n            init: function (options, toolbar) {\n                var that = this, element = $('<div class=\\'k-filemanager-search-tool k-textbox\\'></div>'), input = $('<input class=\\'k-input\\' autocomplete=\\'off\\' />'), iconWrapper = $('<span class=\\'k-input-icon\\'></span>'), icon = $('<span />');\n                that.element = element;\n                that.input = input;\n                that.iconWrapper = iconWrapper;\n                that.icon = icon;\n                that.options = options;\n                that.options.type = 'fileManagerSearch';\n                that.toolbar = toolbar;\n                that.attributes();\n                that.renderIcon();\n                that.addUidAttr();\n                that.addIdAttr();\n                that.addOverflowAttr();\n                that.input.attr({\n                    placeholder: that.options.text,\n                    title: that.options.text\n                });\n                that.iconWrapper.append(icon);\n                that.element.append(that.input).append(iconWrapper);\n                that._bindEvents();\n                that.toolbar.fileManagerSearch = that;\n            },\n            attributes: function () {\n                if (this.options.attributes) {\n                    this.input.attr(this.options.attributes);\n                }\n            },\n            renderIcon: function () {\n                if (this.options.icon) {\n                    this.icon.addClass('k-icon k-i-' + this.options.icon);\n                }\n            },\n            _bindEvents: function () {\n                this._inputHandler = proxy(this._input, this);\n                this.input.on('input' + NS, this._inputHandler);\n            },\n            _input: function (ev) {\n                this.toolbar.trigger(CHANGE, { target: ev.target });\n            },\n            destroy: function () {\n                this.element.off(NS);\n            }\n        });\n        kendo.toolbar.registerComponent('fileManagerSearch', SearchTool);\n        var FileManagerDetailsToggle = Item.extend({\n            init: function (options, toolbar) {\n                var that = this, element = $('<div class=\\'k-filemanager-details-toggle\\'></div>'), label = $('<label>' + options.text + '</label>'), switchElement = $('<input title=\\'' + options.text + '\\' />');\n                that.element = element;\n                that.input = switchElement;\n                that.label = label;\n                that.options = options;\n                that.toolbar = toolbar;\n                that.attributes();\n                that.addUidAttr();\n                that.addIdAttr();\n                that.addOverflowAttr();\n                that.element.append(that.label);\n                that.element.append(that.input);\n                that.switchInstance = new kendo.ui.Switch(that.input, {\n                    change: proxy(that._change, that),\n                    messages: {\n                        checked: toolbar.options.messages.detailsChecked,\n                        unchecked: toolbar.options.messages.detailsUnchecked\n                    }\n                });\n                that.label.on(CLICK + NS, proxy(that._click, that));\n                that.toolbar.fileManagerDetailsToggle = that;\n            },\n            _change: function (ev) {\n                this.toolbar.trigger(CHANGE, { target: ev.sender.wrapper.parent() });\n            },\n            _click: function (ev) {\n                this.switchInstance.toggle();\n                this.toolbar.trigger(CHANGE, { target: $(ev.target).parent() });\n            },\n            destroy: function () {\n                this.element.off(NS);\n            }\n        });\n        kendo.toolbar.registerComponent('fileManagerDetailsToggle', FileManagerDetailsToggle);\n        extend(kendo.ui.filemanager, { ToolBar: FileManagerToolBar });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/data', ['kendo.data'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, data = kendo.data, Node = data.Node, HierarchicalDataSource = data.HierarchicalDataSource, DataSource = data.DataSource;\n        extend(true, kendo.data, {\n            schemas: {\n                'filemanager': {\n                    data: function (data) {\n                        return data.items || data || [];\n                    },\n                    model: {\n                        id: 'path',\n                        hasChildren: 'hasDirectories',\n                        fields: {\n                            name: {\n                                editable: true,\n                                type: 'String',\n                                defaultValue: 'New Folder'\n                            },\n                            size: {\n                                editable: false,\n                                type: 'Number'\n                            },\n                            path: {\n                                editable: false,\n                                type: 'String'\n                            },\n                            extension: {\n                                editable: false,\n                                type: 'String'\n                            },\n                            isDirectory: {\n                                editable: false,\n                                defaultValue: true,\n                                type: 'Boolean'\n                            },\n                            hasDirectories: {\n                                editable: false,\n                                defaultValue: false,\n                                type: 'Boolean'\n                            },\n                            created: {\n                                type: 'Date',\n                                editable: false\n                            },\n                            createdUtc: {\n                                type: 'Date',\n                                editable: false\n                            },\n                            modified: {\n                                type: 'Date',\n                                editable: false\n                            },\n                            modifiedUtc: {\n                                type: 'Date',\n                                editable: false\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        var FileEntry = Node.define({\n            init: function (value) {\n                var that = this, isDirectory = this.isDirectory;\n                Node.fn.init.call(this, value);\n                if (typeof isDirectory === 'string') {\n                    isDirectory = kendo.getter(isDirectory);\n                }\n                if (kendo.isFunction(isDirectory)) {\n                    var isDirectoryObject = isDirectory.call(that, that);\n                    if (isDirectoryObject && isDirectoryObject.length === 0) {\n                        that.isDirectory = false;\n                    } else {\n                        that.isDirectory = !!isDirectoryObject;\n                    }\n                }\n                if (that.isDirectory) {\n                    that._initChildren();\n                }\n            },\n            _initChildren: function () {\n                var that = this;\n                var children, transport, parameterMap;\n                if (!(that.children instanceof kendo.data.FileManagerDataSource)) {\n                    children = that.children = new kendo.data.FileManagerDataSource(that._childrenOptions);\n                    transport = children.transport;\n                    parameterMap = transport.parameterMap;\n                    transport.parameterMap = function (data, type) {\n                        if (type === 'read' || type === 'create') {\n                            data.target = that.id;\n                        }\n                        if (parameterMap) {\n                            data = parameterMap.call(that, data, type);\n                        }\n                        return data;\n                    };\n                    children.parent = function () {\n                        return that;\n                    };\n                    children.bind('change', function (e) {\n                        e.node = e.node || that;\n                        that.trigger('change', e);\n                    });\n                    children.bind('error', function (e) {\n                        var collection = that.parent();\n                        if (collection) {\n                            e.node = e.node || that;\n                            collection.trigger('error', e);\n                        }\n                    });\n                    that._updateChildrenField();\n                }\n            },\n            isNew: function () {\n                if (this.fileManagerNewItem) {\n                    delete this.fileManagerNewItem;\n                    return true;\n                }\n                return this.id === this._defaultId;\n            }\n        });\n        var FileManagerDataSource = HierarchicalDataSource.extend({\n            init: function (options) {\n                var fileEntry = FileEntry.define({ children: options });\n                if (options.filter && !options.serverFiltering) {\n                    this._hierarchicalFilter = options.filter;\n                    options.filter = null;\n                }\n                DataSource.fn.init.call(this, $.extend(true, {}, {\n                    schema: {\n                        modelBase: fileEntry,\n                        model: fileEntry\n                    }\n                }, options));\n                this.isLocalBinding = this.transport instanceof kendo.data.LocalTransport;\n                this._attachBubbleHandlers();\n            },\n            insert: function (index, model) {\n                var parentNode = this.parent();\n                if (parentNode && parentNode._initChildren) {\n                    if (model && model.isDirectory) {\n                        parentNode.hasDirectories = true;\n                    }\n                    parentNode.hasChildren = true;\n                    parentNode._initChildren();\n                }\n                return DataSource.fn.insert.call(this, index, model);\n            },\n            remove: function (node) {\n                var parentNode = node.parentNode(), dataSource = this, result;\n                if (parentNode && parentNode._initChildren) {\n                    dataSource = parentNode.children;\n                }\n                result = DataSource.fn.remove.call(dataSource, node);\n                if (parentNode && (dataSource.data() && !dataSource.data().length)) {\n                    parentNode.hasChildren = false;\n                } else if (parentNode && !this._hasDirectories(parentNode)) {\n                    parentNode.hasDirectories = false;\n                }\n                return result;\n            },\n            _hasDirectories: function (node) {\n                var result;\n                if (!node.children.data()) {\n                    return false;\n                }\n                result = node.children.data().filter(function (item) {\n                    return item.isDirectory;\n                });\n                return !!result.length;\n            }\n        });\n        FileManagerDataSource.create = function (options) {\n            options = options && options.push ? { data: options } : options;\n            var dataSource = options || {}, data = dataSource.data;\n            if (data && data._dataSource) {\n                return data._dataSource;\n            }\n            dataSource.data = data;\n            return dataSource instanceof FileManagerDataSource ? dataSource : new FileManagerDataSource(dataSource);\n        };\n        extend(kendo.data, {\n            FileManagerDataSource: FileManagerDataSource,\n            FileEntry: FileEntry\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/contextmenu', ['kendo.menu'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, proxy = $.proxy, template = kendo.template, ContextMenu = kendo.ui.ContextMenu, ACTION = 'action';\n        var FileManagerContextMenu = ContextMenu.extend({\n            init: function (element, options) {\n                var that = this;\n                ContextMenu.fn.init.call(that, element, options);\n                that._overrideTemplates();\n                that._extendItems();\n                that.bind('select', proxy(that._onSelect, that));\n            },\n            _overrideTemplates: function () {\n                this.templates.sprite = template('#if(spriteCssClass) {#<span class=\\'#= spriteCssClass #\\'></span>#}#');\n            },\n            defaultItems: {\n                'rename': {\n                    text: 'Rename',\n                    spriteCssClass: 'k-icon k-i-edit',\n                    command: 'RenameCommand'\n                },\n                'delete': {\n                    text: 'Delete',\n                    spriteCssClass: 'k-icon k-i-delete',\n                    command: 'DeleteCommand'\n                }\n            },\n            events: ContextMenu.fn.events.concat([ACTION]),\n            _extendItems: function () {\n                var that = this, items = that.options.items, item, isBuiltInTool;\n                if (items && items.length) {\n                    for (var i = 0; i < items.length; i++) {\n                        item = items[i];\n                        isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n                        if (isBuiltInTool) {\n                            item = item.name;\n                        }\n                        if ($.isPlainObject(item)) {\n                            that._extendItem(item);\n                            that.append(item);\n                        } else if (that.defaultItems[item]) {\n                            item = that.defaultItems[item];\n                            that._extendItem(item);\n                            that.append(item);\n                        }\n                    }\n                } else {\n                    for (var key in that.defaultItems) {\n                        item = that.defaultItems[key];\n                        that._extendItem(item);\n                        that.append(item);\n                    }\n                }\n            },\n            _extendItem: function (item) {\n                var that = this, messages = that.options.messages;\n                extend(item, {\n                    text: messages[item.text],\n                    spriteCssClass: item.spriteCssClass || '',\n                    attr: { 'data-command': item.command }\n                });\n            },\n            _onSelect: function (ev) {\n                var command = $(ev.item).data('command');\n                var target = $(ev.target);\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: { target: target }\n                });\n            },\n            action: function (args) {\n                this.trigger(ACTION, args);\n            }\n        });\n        extend(kendo.ui.filemanager, { ContextMenu: FileManagerContextMenu });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.filemanager', [\n        'filemanager/commands',\n        'filemanager/view',\n        'filemanager/toolbar',\n        'filemanager/data',\n        'filemanager/contextmenu',\n        'kendo.breadcrumb',\n        'kendo.upload',\n        'kendo.dialog',\n        'kendo.resizable'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'filemanager',\n        name: 'FileManager',\n        category: 'web',\n        description: 'The FileManager widget displays offers file management functionality.',\n        depends: [\n            'core',\n            'data',\n            'listview',\n            'toolbar',\n            'breadcrumb',\n            'menu',\n            'treeview',\n            'upload',\n            'dialog',\n            'switch',\n            'resizable',\n            'selectable',\n            'editable'\n        ],\n        features: [{\n                id: 'filemanager-grid-view',\n                name: 'GridView',\n                description: 'Support for GridView',\n                depends: ['grid']\n            }]\n    };\n    (function ($, undefined) {\n        var ui = kendo.ui, extend = $.extend, isPlainObject = $.isPlainObject, isArray = $.isArray, DataBoundWidget = ui.DataBoundWidget, proxy = $.proxy, template = kendo.template, outerHeight = kendo._outerHeight, NAVIGATE = 'navigate', SELECT = 'select', OPEN = 'open', ERROR = 'error', CHANGE = 'change', UPLOAD = 'upload', SUCCESS = 'success', CLOSE = 'close', HIDE = 'hide', LOAD = 'load', DATABINDING = 'dataBinding', DATABOUND = 'dataBound', DROP = 'drop', EXECUTE = 'execute', KEYDOWNACTION = 'keydownAction', TREE_TYPE = 'tree', DOT = '.';\n        var fileManagerStyles = {\n            wrapper: 'k-widget k-filemanager',\n            header: 'k-filemanager-header',\n            navigation: 'k-filemanager-navigation',\n            contentContainer: 'k-filemanager-content-container',\n            content: 'k-filemanager-content',\n            preview: 'k-filemanager-preview',\n            toolbar: 'k-filemanager-toolbar',\n            treeview: 'k-filemanager-treeview',\n            breadcrumb: 'k-filemanager-breadcrumb',\n            view: 'k-filemanager-view',\n            grid: 'k-filemanager-grid',\n            list: 'k-filemanager-listview',\n            upload: 'k-filemanager-upload',\n            uploadDialog: 'k-filemanager-upload-dialog',\n            splitBar: 'k-splitbar',\n            splitBarHorizontal: 'k-splitbar-horizontal k-splitbar-draggable-horizontal',\n            splitBarHover: 'k-splitbar-horizontal-hover',\n            splitBarIcon: 'k-icon k-resize-handle',\n            splitBarNavigation: 'k-filemanager-splitbar-navigation',\n            splitBarPreview: 'k-filemanager-splitbar-preview',\n            resizable: 'k-filemanager-resizable'\n        };\n        var fileManagerTemplateStyles = {\n            filePreview: 'k-file-preview',\n            fileInfo: 'k-file-info',\n            fileName: 'k-file-name',\n            fileMeta: 'k-file-meta',\n            metaLabel: 'k-file-meta-label',\n            metaValue: 'k-file-meta-value',\n            extension: 'k-file-type',\n            size: 'k-file-size',\n            created: 'k-file-created',\n            modified: 'k-file-modified'\n        };\n        var viewTypes = {\n            grid: 'grid',\n            list: 'list'\n        };\n        var NO_FILE_PREVIEW_TEMPLATE = '' + '<div class=\"#=styles.fileInfo#\">' + '<div class=\"#=styles.filePreview#\">' + '<span class=\"k-file-icon k-icon k-i-none\"></span>' + '</div>' + '<span class=\"#=styles.fileName#\" k-no-file-selected>#= messages.noFileSelected #</span>' + '</div>';\n        var SINGLE_FILES_PREVIEW_TEMPLATE = '' + '<div class=\"#=styles.fileInfo#\">' + '<div class=\"#=styles.filePreview#\">' + '<span class=\"k-file-icon k-icon k-i-#= !selection[0].isDirectory ? kendo.getFileGroup(selection[0].extension, true) : \"folder\" #\"></span>' + '</div>' + '<span class=\"#=styles.fileName#\">#=selection[0].name#</span>' + '#if(metaFields){#' + '<dl class=\"#=styles.fileMeta#\">' + '#for(var i = 0; i < metaFields.length; i+=1){#' + '#var field = metaFields[i]#' + '<dt class=\"#=styles.metaLabel#\">#=messages[field]#: </dt>' + '<dd class=\"#=styles.metaValue# #=styles[field]#\">' + '#if(field == \"size\"){#' + ' #=kendo.getFileSizeMessage(selection[0][field])#' + '#} else if(selection[0][field] instanceof Date) {#' + ' #=kendo.toString(selection[0][field], \"G\")#' + '#} else if(field == \"extension\") {#' + ' #= !selection[0].isDirectory ? kendo.getFileGroup(selection[0].extension) : \"folder\"#' + '#} else {#' + ' #=selection[0][field]#' + '#}#' + '</dd>' + '<dd class=\"k-line-break\"></dd>' + '# } #' + '</dl>' + '#}#' + '</div>';\n        var MULTIPLE_FILES_PREVIEW_TEMPLATE = '' + '<div class=\"#=styles.fileInfo#\">' + '<div class=\"#=styles.filePreview#\">' + '<span class=\"k-file-icon k-icon k-i-file\"></span>' + '</div>' + '<span class=\"#=styles.fileName#\">' + '#=selection.length# ' + '#=messages.items#' + '</span>' + '</div>';\n        var FileManager = DataBoundWidget.extend({\n            init: function (element, options) {\n                var that = this;\n                DataBoundWidget.fn.init.call(that, element, options);\n                that.options = kendo.deepExtend({}, that.options, options);\n                that.defaultSortOption = {\n                    field: 'name',\n                    dir: 'asc'\n                };\n                that.folderSortOption = {\n                    field: 'isDirectory',\n                    dir: 'desc'\n                };\n                that._dataSource();\n                that._wrapper();\n                that._renderHeader();\n                that._renderContentContainer();\n                that._initContextMenu();\n                that._renderNavigation();\n                that._renderContent();\n                that._renderPreview();\n                that._initUploadDialog();\n                that._resizable();\n                that.resize();\n                kendo.notify(that, kendo.ui);\n            },\n            options: {\n                name: 'FileManager',\n                height: 500,\n                resizable: true,\n                initialView: 'list',\n                toolbar: { resizable: true },\n                contextMenu: {},\n                upload: {},\n                uploadUrl: '',\n                views: {},\n                breadcrumb: {},\n                draggable: true,\n                dialogs: {\n                    upload: { width: 530 },\n                    moveConfirm: {\n                        width: 350,\n                        closable: true\n                    },\n                    deleteConfirm: {\n                        width: 360,\n                        closable: true\n                    },\n                    renamePrompt: {\n                        width: 350,\n                        closable: true\n                    }\n                },\n                previewPane: {\n                    metaFields: [\n                        'extension',\n                        'size',\n                        'created',\n                        'modified'\n                    ],\n                    noFileTemplate: NO_FILE_PREVIEW_TEMPLATE,\n                    singleFileTemplate: SINGLE_FILES_PREVIEW_TEMPLATE,\n                    multipleFilesTemplate: MULTIPLE_FILES_PREVIEW_TEMPLATE\n                },\n                messages: {\n                    toolbar: {\n                        createFolder: 'New Folder',\n                        upload: 'Upload',\n                        sortDirection: 'Sort Direction',\n                        sortDirectionAsc: 'Sort Direction Ascending',\n                        sortDirectionDesc: 'Sort Direction Descending',\n                        sortField: 'Sort By',\n                        nameField: 'Name',\n                        sizeField: 'File Size',\n                        typeField: 'Type',\n                        dateModifiedField: 'Date Modified',\n                        dateCreatedField: 'Date Created',\n                        listView: 'List View',\n                        gridView: 'Grid View',\n                        search: 'Search',\n                        details: 'View Details',\n                        detailsChecked: 'On',\n                        detailsUnchecked: 'Off',\n                        'delete': 'Delete',\n                        rename: 'Rename'\n                    },\n                    views: {\n                        nameField: 'Name',\n                        sizeField: 'File Size',\n                        typeField: 'Type',\n                        dateModifiedField: 'Date Modified',\n                        dateCreatedField: 'Date Created',\n                        items: 'items'\n                    },\n                    dialogs: {\n                        upload: {\n                            title: 'Upload Files',\n                            clear: 'Clear List',\n                            done: 'Done'\n                        },\n                        moveConfirm: {\n                            title: 'Confirm',\n                            content: '<p style=\\'text-align: center;\\'>Do you want to move or copy?</p>',\n                            okText: 'Copy',\n                            cancel: 'Move',\n                            close: 'close'\n                        },\n                        deleteConfirm: {\n                            title: 'Confirm',\n                            content: '<p style=\\'text-align: center;\\'>Are you sure you want to delete the selected file(s)?</br>You cannot undo this action.</p>',\n                            okText: 'Delete',\n                            cancel: 'Cancel',\n                            close: 'close'\n                        },\n                        renamePrompt: {\n                            title: 'Prompt',\n                            content: '<p style=\\'text-align: center;\\'>Enter new name for the file.</p>',\n                            okText: 'Rename',\n                            cancel: 'Cancel',\n                            close: 'close'\n                        }\n                    },\n                    previewPane: {\n                        noFileSelected: 'No File Selected',\n                        extension: 'Type',\n                        size: 'Size',\n                        created: 'Date Created',\n                        createdUtc: 'Date Created UTC',\n                        modified: 'Date Modified',\n                        modifiedUtc: 'Date Modified UTC',\n                        items: 'items'\n                    }\n                }\n            },\n            events: [\n                NAVIGATE,\n                SELECT,\n                OPEN,\n                DATABINDING,\n                DATABOUND,\n                ERROR,\n                DROP,\n                EXECUTE\n            ],\n            _dataSource: function () {\n                var that = this, options = that.options, dataSourceOptions = options.dataSource || {}, typeSortOrder = that.folderSortOption, nameSortOrder = that.defaultSortOption, dataSource;\n                if (!(dataSourceOptions instanceof kendo.data.FileManagerDataSource)) {\n                    if (isArray(dataSourceOptions)) {\n                        dataSource = {\n                            data: dataSourceOptions,\n                            autoSync: false,\n                            sort: [\n                                typeSortOrder,\n                                nameSortOrder\n                            ]\n                        };\n                    } else {\n                        dataSource = extend(true, dataSourceOptions, {\n                            autoSync: false,\n                            sort: [\n                                typeSortOrder,\n                                nameSortOrder\n                            ]\n                        });\n                    }\n                    if (dataSourceOptions && isPlainObject(dataSourceOptions.schema)) {\n                        dataSource.schema = dataSourceOptions.schema;\n                    } else if (isPlainObject(kendo.data.schemas.filemanager)) {\n                        dataSource.schema = kendo.data.schemas.filemanager;\n                    }\n                } else {\n                    dataSource = dataSourceOptions;\n                }\n                if (that.dataSource && that._errorHandler) {\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                } else {\n                    that._errorHandler = proxy(that._error, that);\n                    that._changeHandler = proxy(that._change, that);\n                }\n                that.dataSource = kendo.data.FileManagerDataSource.create(dataSource).bind(ERROR, that._errorHandler).bind(CHANGE, that._changeHandler);\n            },\n            _error: function (ev) {\n                if (!this.trigger(ERROR, ev)) {\n                    throw new Error('Error! The requested URL returned ' + ev.xhr.status + ' - ' + ev.xhr.statusText);\n                }\n            },\n            _wrapper: function () {\n                var that = this, options = that.options, width = options.width, height = options.height;\n                that.wrapper = that.element.addClass(fileManagerStyles.wrapper);\n                if (width) {\n                    that.wrapper.width(width);\n                }\n                if (height) {\n                    that.wrapper.height(height);\n                }\n                that._resizeHandler = kendo.onResize(function () {\n                    that.resize(true);\n                });\n            },\n            _renderHeader: function () {\n                var that = this, options = that.options;\n                if (options.toolbar) {\n                    that.header = $('<div />').addClass(fileManagerStyles.header);\n                    that.header.append(that._initToolbar().element);\n                }\n                that.wrapper.append(that.header);\n            },\n            _renderContentContainer: function () {\n                var that = this, container = $('<div />').addClass(fileManagerStyles.contentContainer);\n                that.contentContainer = container;\n                that.wrapper.append(that.contentContainer);\n            },\n            _initContextMenu: function () {\n                var that = this, options = that.options, menuOptions = extend({}, options.contextMenu, {\n                        filemanager: that,\n                        messages: options.messages.toolbar,\n                        target: that.contentContainer,\n                        filter: '[data-uid]',\n                        action: that.executeCommand.bind(that)\n                    });\n                if (that.options.contextMenu === false || that.dataSource.isLocalBinding) {\n                    return;\n                }\n                that.contextMenu = new ui.filemanager.ContextMenu('<ul></ul>', menuOptions);\n                that.contextMenu.bind(OPEN, proxy(that._cacheFocus, that));\n            },\n            _renderNavigation: function () {\n                var that = this;\n                that.navigation = $('<div />').addClass(fileManagerStyles.navigation);\n                that.navigation.append(that._initTreeView().element);\n                that.contentContainer.append(that.navigation);\n            },\n            _renderContent: function () {\n                var that = this, options = that.options, toolbar = that.toolbar;\n                that.content = $('<div />').addClass(fileManagerStyles.content);\n                if (options.breadcrumb) {\n                    that.content.append(that._initBreadcrumb().element);\n                }\n                that.content.append(that._initView());\n                if (!toolbar || !toolbar.isToolEnabled(toolbar.defaultTools.upload.name)) {\n                    that.content.append(that._initUpload().wrapper.hide());\n                }\n                that.contentContainer.append(that.content);\n            },\n            _renderPreview: function () {\n                var that = this, enablePreview = that.options.previewPane;\n                if (!enablePreview) {\n                    return;\n                }\n                that.preview = $('<div />').addClass(fileManagerStyles.preview);\n                that.previewContainer = $('<div />').addClass(fileManagerStyles.previewContainer);\n                that.preview.append(that.previewContainer);\n                that._setPreviewPaneContent();\n                that.contentContainer.append(that.preview.hide());\n            },\n            _setPreviewPaneContent: function () {\n                var that = this, options = that.options, previewPaneMessages = options.messages.previewPane, previewPaneOptions = options.previewPane, selection = that.getSelected(), previewTemplate;\n                if (!selection) {\n                    previewTemplate = template(previewPaneOptions.noFileTemplate)({\n                        styles: fileManagerTemplateStyles,\n                        messages: previewPaneMessages\n                    });\n                    that.previewContainer.html(previewTemplate);\n                    return;\n                }\n                previewTemplate = selection.length === 1 ? previewPaneOptions.singleFileTemplate : previewPaneOptions.multipleFilesTemplate;\n                previewTemplate = template(previewTemplate)({\n                    styles: fileManagerTemplateStyles,\n                    messages: previewPaneMessages,\n                    selection: selection,\n                    metaFields: previewPaneOptions.metaFields\n                });\n                that.previewContainer.html(previewTemplate);\n            },\n            _initToolbar: function () {\n                var that = this, options = that.options, toolbarElement = $('<div />').addClass(fileManagerStyles.toolbar), toolbarOptions = extend({}, options.toolbar, {\n                        filemanager: this,\n                        messages: options.messages.toolbar,\n                        action: that.executeCommand.bind(that)\n                    });\n                that.toolbar = new ui.filemanager.ToolBar(toolbarElement, toolbarOptions);\n                return that.toolbar;\n            },\n            _initTreeView: function () {\n                var that = this, treeViewElement = $('<div />').addClass(fileManagerStyles.treeview), options = that.options.views[TREE_TYPE], explicitOptions = extend(true, {}, {\n                        dataSource: that.options.dataSource,\n                        messages: that.options.messages.views,\n                        draggable: that.options.draggable,\n                        isLocalBinding: that.dataSource.isLocalBinding\n                    });\n                that.treeView = new ui.filemanager.ViewComponents[TREE_TYPE](treeViewElement, options, explicitOptions);\n                that.treeView.bind(NAVIGATE, proxy(that._navigate, that)).bind(LOAD, proxy(that._load, that)).bind(DROP, proxy(that._drop, that)).bind(KEYDOWNACTION, proxy(that._keydownAction, that));\n                return that.treeView;\n            },\n            _drop: function (ev) {\n                var that = this;\n                if (!that.trigger(DROP, ev) && ev.items.indexOf(ev.target) < 0) {\n                    that._confirm({\n                        type: 'move',\n                        target: ev.target\n                    }).done(function () {\n                        that.executeCommand({\n                            command: 'CopyCommand',\n                            options: ev\n                        });\n                    }).fail(function () {\n                        that.executeCommand({\n                            command: 'MoveCommand',\n                            options: ev\n                        });\n                    });\n                }\n            },\n            _keydownAction: function (ev) {\n                var that = this, keyCode = ev.keyCode, keys = kendo.keys;\n                if (keyCode === keys.DELETE) {\n                    that.executeCommand({\n                        command: 'DeleteCommand',\n                        options: { target: ev.target }\n                    });\n                }\n                if (keyCode === keys.F2 && that._viewType !== viewTypes.grid) {\n                    that.executeCommand({\n                        command: 'RenameCommand',\n                        options: { target: ev.target }\n                    });\n                }\n            },\n            _confirm: function (options) {\n                var that = this, messages = that.options.messages.dialogs[options.type + 'Confirm'];\n                var confirm = $('<div></div>').kendoConfirm(extend({}, {\n                    title: messages.title,\n                    content: messages.content,\n                    messages: messages\n                }, that.options.dialogs[options.type + 'Confirm'])).data('kendoConfirm');\n                confirm.bind(OPEN, proxy(that._cacheFocus, that));\n                confirm.bind(HIDE, proxy(that._restoreFocus, that, options.target));\n                confirm.open();\n                confirm.wrapper.removeClass('k-confirm');\n                return confirm.result;\n            },\n            _prompt: function (options) {\n                var that = this, messages = this.options.messages.dialogs[options.type + 'Prompt'];\n                var prompt = $('<div></div>').kendoPrompt(extend({}, {\n                    title: messages.title,\n                    content: messages.content,\n                    messages: messages,\n                    value: options.defaultInput\n                }, this.options.dialogs[options.type + 'Prompt'])).data('kendoPrompt');\n                prompt.bind(OPEN, proxy(that._cacheFocus, that));\n                prompt.bind(CLOSE, proxy(that._restoreFocus, that, options.target));\n                prompt.open();\n                prompt.wrapper.removeClass('k-prompt');\n                return prompt.result;\n            },\n            _cacheFocus: function () {\n                var that = this, activeElement = $(document.activeElement), view = that.view(), treeView = that.treeView.widgetComponent;\n                if (that.contextMenu && that.contextMenu.popup.visible()) {\n                    return;\n                }\n                that.treeView._shouldFocus = false;\n                if (treeView.current() && treeView.current().find('.k-state-focused').length || activeElement.hasClass(fileManagerStyles.treeview)) {\n                    that.treeView._shouldFocus = true;\n                    view._focusElement = activeElement;\n                    return;\n                }\n                view._focusElement = activeElement.hasClass(fileManagerStyles[that._viewType]) ? activeElement : null;\n            },\n            _restoreFocus: function (target) {\n                var that = this, view = that.view();\n                if (!target) {\n                    return;\n                }\n                if (view._focusElement) {\n                    view._focusElement.focus();\n                } else if (target.closest && target.closest(':kendoFocusable').length) {\n                    target.closest(':kendoFocusable').focus();\n                }\n            },\n            _initView: function () {\n                var that = this, viewWrapper = $('<div />').addClass(fileManagerStyles.view), initialView = that.options.initialView;\n                that.viewWrapper = viewWrapper;\n                that.viewWrapper.append(that.view(initialView));\n                return viewWrapper;\n            },\n            _initBreadcrumb: function () {\n                var that = this, options = that.options, breadcrumbElement = $('<nav />').addClass(fileManagerStyles.breadcrumb), breadcrumbOptions = extend({}, {\n                        items: [{\n                                type: 'rootitem',\n                                text: ''\n                            }],\n                        change: proxy(that._breadcrumbChange, that)\n                    }, options.breadcrumb);\n                that.breadcrumb = new ui.Breadcrumb(breadcrumbElement, breadcrumbOptions);\n                return that.breadcrumb;\n            },\n            _breadcrumbChange: function (ev) {\n                this._navigate({ path: ev.value });\n            },\n            _initUploadDialog: function () {\n                var that = this, options = that.options, dialogMessages = options.messages.dialogs.upload, dialogElement = $('<div />'), dialogOptions = extend({}, {\n                        title: dialogMessages.title,\n                        modal: true,\n                        visible: false,\n                        width: 500,\n                        actions: [\n                            {\n                                text: dialogMessages.clear,\n                                action: proxy(that._clearUploadFilesList, that)\n                            },\n                            {\n                                text: dialogMessages.done,\n                                primary: true\n                            }\n                        ],\n                        messages: dialogMessages\n                    }, options.dialogs.upload), uploadInstance;\n                if (!that._shouldInitUpload()) {\n                    return;\n                }\n                uploadInstance = that._initUpload();\n                that.uploadDialog = new ui.Dialog(dialogElement, dialogOptions);\n                that.uploadDialog.wrapper.addClass(fileManagerStyles.uploadDialog);\n                that.uploadDialog.element.append(uploadInstance.wrapper);\n                that.uploadDialog.bind(OPEN, proxy(that._toggleUploadDropZone, that, ''));\n                that.uploadDialog.bind(CLOSE, proxy(that._toggleUploadDropZone, that, that.viewWrapper));\n                return that.uploadDialog;\n            },\n            _shouldInitUpload: function () {\n                var that = this, options = that.options, shouldInit = false;\n                if ((options.uploadUrl || options.upload.async && options.upload.async.saveUrl) && options.upload !== false) {\n                    shouldInit = true;\n                }\n                return shouldInit;\n            },\n            _initUpload: function () {\n                var that = this, options = that.options, uploadElement = $('<input type=\\'file\\' name=\\'file\\'/>').addClass(fileManagerStyles.upload), uploadOptions = extend(true, {\n                        async: {\n                            autoUpload: true,\n                            saveUrl: options.uploadUrl\n                        },\n                        dropZone: that.viewWrapper\n                    }, options.upload);\n                that.upload = new ui.Upload(uploadElement[0], uploadOptions);\n                that.upload.bind(UPLOAD, proxy(that._sendUploadPathParameter, that));\n                that.upload.bind(SUCCESS, proxy(that._success, that));\n                return that.upload;\n            },\n            _sendUploadPathParameter: function (ev) {\n                ev.data = extend(ev.data, { path: this.path() });\n            },\n            _success: function () {\n                this._view.widgetComponent.dataSource.read();\n            },\n            _clearUploadFilesList: function () {\n                var that = this, upload = that.upload;\n                if (upload) {\n                    upload.clearAllFiles();\n                }\n            },\n            _toggleUploadDropZone: function (zone) {\n                var that = this, upload = that.upload;\n                if (upload) {\n                    upload.setOptions({ dropZone: zone });\n                }\n            },\n            _binding: function (ev) {\n                if (this.trigger(DATABINDING, {\n                        source: 'view',\n                        action: ev.action,\n                        items: ev.items,\n                        index: ev.index\n                    })) {\n                    ev.preventDefault();\n                }\n            },\n            _bound: function () {\n                if (this.options.previewPane) {\n                    this._setPreviewPaneContent();\n                }\n                this.trigger(DATABOUND);\n            },\n            _createResizableSplitBar: function (cssClass) {\n                var splitBar = $('<div />').addClass(fileManagerStyles.splitBar).addClass(fileManagerStyles.splitBarHorizontal).addClass(cssClass), icon = $('<span />').addClass(fileManagerStyles.splitBarIcon);\n                splitBar.append(icon);\n                splitBar.hover(function () {\n                    $(this).toggleClass(fileManagerStyles.splitBarHover);\n                });\n                return splitBar;\n            },\n            _initResizableNavigation: function () {\n                var that = this, wrapper = that.wrapper, splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarNavigation), contentWrapper = wrapper.find(DOT + fileManagerStyles.content), navigationWrapper = wrapper.find(DOT + fileManagerStyles.navigation), contentWrapperWidth, navigationWrapperWidth;\n                splitBar.insertAfter(navigationWrapper);\n                that._resizeDraggable.navigation = that.wrapper.find(splitBar).end().kendoResizable({\n                    handle: DOT + fileManagerStyles.splitBarNavigation,\n                    start: function () {\n                        contentWrapperWidth = contentWrapper.width();\n                        navigationWrapperWidth = navigationWrapper.width();\n                    },\n                    resize: function (e) {\n                        var delta = e.x.initialDelta;\n                        if (kendo.support.isRtl(wrapper)) {\n                            delta *= -1;\n                        }\n                        if (navigationWrapperWidth + delta < -2 || contentWrapperWidth - delta < -2) {\n                            return;\n                        }\n                        navigationWrapper.width(navigationWrapperWidth + delta);\n                    }\n                }).getKendoResizable();\n            },\n            _initResizablePreview: function () {\n                var that = this, wrapper = that.wrapper, splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarPreview), contentWrapper = wrapper.find(DOT + fileManagerStyles.content), previewWrapper = wrapper.find(DOT + fileManagerStyles.preview), contentWrapperWidth, previewWrapperWidth;\n                if (!that.options.previewPane) {\n                    return;\n                }\n                splitBar.insertBefore(previewWrapper).hide();\n                that._resizeDraggable.preview = wrapper.find(splitBar).end().kendoResizable({\n                    handle: DOT + fileManagerStyles.splitBarPreview,\n                    start: function () {\n                        contentWrapperWidth = contentWrapper.width();\n                        previewWrapperWidth = previewWrapper.width();\n                    },\n                    resize: function (e) {\n                        var delta = e.x.initialDelta;\n                        if (kendo.support.isRtl(wrapper)) {\n                            delta *= -1;\n                        }\n                        if (previewWrapperWidth - delta < -2 || contentWrapperWidth + delta < -2) {\n                            return;\n                        }\n                        previewWrapper.width(previewWrapperWidth - delta);\n                    }\n                }).getKendoResizable();\n            },\n            _resizable: function () {\n                var that = this, options = that.options;\n                that._resizeDraggable = {};\n                if (!options.resizable) {\n                    return;\n                }\n                that.wrapper.addClass(fileManagerStyles.resizable);\n                that._initResizableNavigation();\n                that._initResizablePreview();\n            },\n            view: function (type) {\n                var that = this, element = $('<div></div>'), options = that.options.views[type], explicitOptions = extend(true, {}, {\n                        dataSource: that._viewDataSource || that.dataSource,\n                        messages: that.options.messages.views,\n                        draggable: that.options.draggable\n                    });\n                if (type === undefined) {\n                    return that._view;\n                }\n                if (!ui.filemanager.ViewComponents[type]) {\n                    throw new Error(kendo.format('There is no {0} ViewComponent registered!', type));\n                }\n                if (that._view && that._view.destroy) {\n                    that._view.destroy();\n                    that.viewWrapper.empty();\n                }\n                that._viewType = type;\n                that._view = new ui.filemanager.ViewComponents[type](element, options, explicitOptions);\n                that._view.bind(SELECT, proxy(that._select, that));\n                that._view.bind(OPEN, proxy(that._open, that));\n                that._view.bind(DATABINDING, proxy(that._binding, that));\n                that._view.bind(DATABOUND, proxy(that._bound, that));\n                that._view.bind(DROP, proxy(that._drop, that));\n                that._view.bind(KEYDOWNACTION, proxy(that._keydownAction, that));\n                that._view.element.addClass(fileManagerStyles[type]);\n                that.viewWrapper.removeClass(Object.keys(ui.filemanager.ViewComponents).map(function (el) {\n                    return fileManagerStyles.view + '-' + el;\n                }).join(' ')).addClass(fileManagerStyles.view + '-' + type);\n                that.viewWrapper.append(that._view.element);\n            },\n            executeCommand: function (args) {\n                var commandName = args.command, commandOptions = extend({ filemanager: this }, isPlainObject(args.options) ? args.options : { value: args.options }), command = new ui.filemanager.commands[commandName](commandOptions);\n                if (!this.trigger(EXECUTE, args)) {\n                    return command.exec();\n                }\n            },\n            _navigate: function (ev) {\n                var that = this, path = ev.path;\n                if (!that.trigger(NAVIGATE, { path: path })) {\n                    that.navigate(path);\n                }\n            },\n            _load: function (ev) {\n                var entry = this.dataSource.get(ev.entryId);\n                entry.load();\n            },\n            _select: function (ev) {\n                if (this.options.previewPane) {\n                    this._setPreviewPaneContent();\n                }\n                this.trigger(SELECT, { entries: ev.entries });\n            },\n            _open: function (ev) {\n                var that = this, entry = ev.entry;\n                that.trigger(OPEN, { entry: entry });\n                if (entry.isDirectory) {\n                    that._navigate({ path: entry.id });\n                }\n            },\n            _change: function (ev) {\n                var that = this, targetDataSource = ev.node ? ev.node.children : that.dataSource;\n                if (that.trigger(DATABINDING, {\n                        source: 'tree',\n                        action: ev.action,\n                        items: ev.items,\n                        index: ev.index\n                    })) {\n                    return;\n                }\n                that.treeView._refreshDataSource(ev);\n                if (ev.action === 'remove' || ev.action === 'itemchange' || ev.action === 'add') {\n                    targetDataSource.sync();\n                }\n                if (ev.action === 'remove' && that._viewDataSource && that._viewDataSource.parent() && ev.items[0] === that._viewDataSource.parent()) {\n                    that._navigateToParent(ev.items[0]);\n                }\n                if (ev.action == 'itemchange' && that._viewDataSource && that._viewDataSource.parent() && that.path().indexOf(ev.items[0].id) >= 0) {\n                    that._navigateToParent(ev.items[0]);\n                }\n                if (ev.action === 'itemchange') {\n                    ev.items[0].loaded(false);\n                }\n            },\n            _navigateToParent: function (item) {\n                var that = this;\n                var parent = item.parentNode();\n                var parentNodePath = parent ? parent.id : '';\n                that._navigate({ path: parentNodePath });\n            },\n            _buildBreadcrumbPath: function (entry) {\n                var that = this, breadcrumb = that.breadcrumb, values = [];\n                while (entry) {\n                    values.push(entry.name);\n                    entry = entry.parentNode();\n                }\n                values.push('');\n                breadcrumb.value(values.reverse().join('/'));\n            },\n            _adjustDimensions: function () {\n                var that = this, wrapper = that.wrapper, gridSelector = DOT + fileManagerStyles.grid, listViewSelector = DOT + fileManagerStyles.list, contentContainer = DOT + fileManagerStyles.contentContainer, totalHeight = wrapper.height(), toolbarHeight = 0, breadcrumbHeight = 0;\n                if (that.toolbar) {\n                    toolbarHeight = outerHeight(that.toolbar.wrapper);\n                }\n                if (that.breadcrumb) {\n                    breadcrumbHeight = outerHeight(that.breadcrumb.wrapper);\n                }\n                if (that.options.height !== 'auto') {\n                    wrapper.find([gridSelector].join(',')).height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n                    wrapper.find(listViewSelector).parent().height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n                    wrapper.find(contentContainer).height(totalHeight - toolbarHeight);\n                }\n            },\n            _resize: function () {\n                this._adjustDimensions();\n                kendo.resize(this.element.children());\n            },\n            setDataSource: function (dataSource) {\n                var that = this;\n                that.options.dataSource = dataSource;\n                that._dataSource();\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                    that.header.empty();\n                    that.header.append(that._initToolbar().element);\n                }\n                if (that.treeView) {\n                    that.treeView.destroy();\n                    that.navigation.empty();\n                    that.navigation.append(that._initTreeView().element);\n                }\n                if (that._view) {\n                    that.view(that._viewType || that.options.initialView);\n                }\n                that._initContextMenu();\n            },\n            refresh: function () {\n                var that = this, dataSource = that._viewDataSource || that.dataSource;\n                dataSource.read();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.wrapper);\n            },\n            getSelected: function () {\n                var that = this, items = that._view.getSelected(), treeView = that.treeView;\n                if (items && items.length) {\n                    return items;\n                }\n                var item = treeView.getSelected();\n                if (item) {\n                    return [that.dataSource.get(item.id)];\n                }\n            },\n            path: function () {\n                return this._path || '';\n            },\n            navigate: function (path) {\n                var that = this, dataSource = that.dataSource, entry = dataSource.get(path.replace(/^\\//, '')), view = that._view, treeView = that.treeView, breadcrumb = that.breadcrumb;\n                that._path = path;\n                if (that.trigger(DATABINDING, {\n                        source: 'navigation',\n                        action: 'rebind',\n                        items: [entry]\n                    })) {\n                    return;\n                }\n                if (breadcrumb) {\n                    that._buildBreadcrumbPath(entry);\n                }\n                if (path === '' || path === '/') {\n                    dataSource.sort([\n                        that.folderSortOption,\n                        that.defaultSortOption\n                    ]);\n                    that._viewDataSource = dataSource;\n                    view.refresh(that._viewDataSource);\n                    treeView.treeView.select($());\n                    if (that.options.previewPane) {\n                        that._setPreviewPaneContent();\n                    }\n                    return;\n                }\n                if (entry.loaded && !entry.loaded()) {\n                    entry.load();\n                }\n                if (view) {\n                    that._viewDataSource = entry.children;\n                    view.refresh(that._viewDataSource);\n                    that._viewDataSource.sort([\n                        that.folderSortOption,\n                        that.defaultSortOption\n                    ]);\n                }\n                if (treeView) {\n                    treeView.refresh(entry.id);\n                }\n                if (that.options.previewPane) {\n                    that._setPreviewPaneContent();\n                }\n            },\n            destroy: function () {\n                var that = this;\n                DataBoundWidget.fn.destroy.call(that);\n                that.dataSource.unbind(ERROR, that._errorHandler).unbind(CHANGE, that._changeHandler);\n                if (that._resizeDraggable.navigation) {\n                    that._resizeDraggable.navigation.destroy();\n                    that._resizeDraggable.navigation = null;\n                }\n                if (that._resizeDraggable.preview) {\n                    that._resizeDraggable.preview.destroy();\n                    that._resizeDraggable.preview = null;\n                }\n                if (that.uploadDialog) {\n                    that.uploadDialog.destroy();\n                    that.uploadDialog = null;\n                }\n                if (that.upload) {\n                    that.upload.destroy();\n                    that.upload = null;\n                }\n                if (that.contextMenu) {\n                    that.contextMenu.destroy();\n                    that.contextMenu = null;\n                }\n                kendo.unbindResize(that._resizeHandler);\n                that.dataSource = null;\n                that._viewDataSource = null;\n                kendo.destroy(that.element);\n            }\n        });\n        ui.plugin(FileManager);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}