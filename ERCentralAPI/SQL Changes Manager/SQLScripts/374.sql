USE [Reviewer]
GO
/****** Object:  StoredProcedure [dbo].[st_OutcomeList]    Script Date: 12/03/2021 18:08:38 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER procedure [dbo].[st_OutcomeList]
(
	@REVIEW_ID INT,
	@META_ANALYSIS_ID INT,
	@QUESTIONS nvarchar(max) = '',
	@ANSWERS nvarchar(max) = ''
	/*@SET_ID BIGINT,
	@ITEM_ATTRIBUTE_ID_INTERVENTION BIGINT = NULL,
	@ITEM_ATTRIBUTE_ID_CONTROL BIGINT = NULL,
	@ITEM_ATTRIBUTE_ID_OUTCOME BIGINT = NULL,
	@ATTRIBUTE_ID BIGINT = NULL,
	
	
	@VARIABLES NVARCHAR(MAX) = NULL,
	@ANSWERS NVARCHAR(MAX) = '',
	@QUESTIONS NVARCHAR(MAX) = ''*/
)

As

SET NOCOUNT ON
	Declare @IOs table (OUTCOME_ID int, ITEM_ID bigint, ITEM_SET_ID bigint)
	insert into @IOs select distinct OUTCOME_ID, ir.ITEM_ID, tis.ITEM_SET_ID
	from TB_ITEM_OUTCOME tio
	inner join TB_ITEM_SET tis on tio.ITEM_SET_ID = tis.ITEM_SET_ID and tis.IS_COMPLETED = 1
	inner join TB_REVIEW_SET rs on tis.SET_ID = rs.SET_ID and rs.REVIEW_ID = @REVIEW_ID --stop outcomes for coming across if they belong to a deleted codeset
	inner join TB_ITEM_REVIEW ir on tis.ITEM_ID = ir.ITEM_ID and ir.REVIEW_ID = @REVIEW_ID


	SELECT distinct tio.OUTCOME_ID, tio.ITEM_SET_ID, OUTCOME_TYPE_ID, ITEM_ATTRIBUTE_ID_INTERVENTION,
	ITEM_ATTRIBUTE_ID_CONTROL, ITEM_ATTRIBUTE_ID_OUTCOME, OUTCOME_TITLE, SHORT_TITLE, OUTCOME_DESCRIPTION,
	DATA1, DATA2, DATA3, DATA4, DATA5, DATA6, DATA7, DATA8, DATA9, DATA10, DATA11, DATA12, DATA13, DATA14,
	TB_META_ANALYSIS_OUTCOME.META_ANALYSIS_OUTCOME_ID, ios.ITEM_SET_ID, TB_ITEM_ATTRIBUTE.ITEM_ID,
	A1.ATTRIBUTE_NAME INTERVENTION_TEXT, A2.ATTRIBUTE_NAME CONTROL_TEXT, A3.ATTRIBUTE_NAME OUTCOME_TEXT
	,	tio.ITEM_TIMEPOINT_ID
	,	tio.ITEM_ARM_ID_GRP1
	,	tio.ITEM_ARM_ID_GRP2
	,	CONCAT(TB_ITEM_TIMEPOINT.TIMEPOINT_VALUE, ' ', TB_ITEM_TIMEPOINT.TIMEPOINT_METRIC) TimepointDisplayValue
	,	arm1.ARM_NAME grp1ArmName
	,	arm2.ARM_NAME grp2ArmName
	FROM @IOs as ios
	inner join TB_ITEM_OUTCOME tio on ios.OUTCOME_ID = tio.OUTCOME_ID
	--inner join TB_ITEM_SET tis on tis.ITEM_SET_ID = tio.ITEM_SET_ID
	--	AND tis.IS_COMPLETED = 1
	--inner join TB_REVIEW_SET rs on rs.REVIEW_ID = @REVIEW_ID and rs.SET_ID = tis.SET_ID
	inner join TB_ITEM_REVIEW on tb_item_review.ITEM_ID = ios.ITEM_ID AND TB_ITEM_REVIEW.REVIEW_ID = @REVIEW_ID
	inner JOIN TB_ITEM_ATTRIBUTE ON TB_ITEM_ATTRIBUTE.ITEM_SET_ID = ios.ITEM_SET_ID
	inner join TB_ITEM on TB_ITEM.ITEM_ID = ios.ITEM_ID
	LEFT OUTER JOIN TB_META_ANALYSIS_OUTCOME ON TB_META_ANALYSIS_OUTCOME.OUTCOME_ID = tio.OUTCOME_ID
		AND TB_META_ANALYSIS_OUTCOME.META_ANALYSIS_ID = @META_ANALYSIS_ID
	left outer JOIN TB_ATTRIBUTE A1 ON A1.ATTRIBUTE_ID = tio.ITEM_ATTRIBUTE_ID_INTERVENTION 
	left outer JOIN TB_ATTRIBUTE A2 ON A2.ATTRIBUTE_ID = tio.ITEM_ATTRIBUTE_ID_CONTROL
	left outer JOIN TB_ATTRIBUTE A3 ON A3.ATTRIBUTE_ID = tio.ITEM_ATTRIBUTE_ID_OUTCOME
	left outer join TB_ITEM_TIMEPOINT ON TB_ITEM_TIMEPOINT.ITEM_TIMEPOINT_ID = tio.ITEM_TIMEPOINT_ID
	left outer join TB_ITEM_ARM arm1 ON arm1.ITEM_ARM_ID = tio.ITEM_ARM_ID_GRP1
	left outer join TB_ITEM_ARM arm2 on arm2.ITEM_ARM_ID = tio.ITEM_ARM_ID_GRP2

	--second sets of results, the answers
	--we need to get these, even if empty, so that we always get a reader
	
	IF (@QUESTIONS is not null AND @QUESTIONS != '')
	BEGIN
		declare @QT table ( AttID bigint primary key)
		insert into @QT select qss.value from dbo.fn_Split_int(@QUESTIONS, ',') as qss
		select tio.OUTCOME_ID, tio.OUTCOME_TITLE, tis.ITEM_ID 
			, ATTRIBUTE_NAME as Codename
			, a.ATTRIBUTE_ID as ATTRIBUTE_ID
			, tas.PARENT_ATTRIBUTE_ID
		from TB_ITEM_OUTCOME tio 
		inner join TB_ITEM_SET tis on tio.ITEM_SET_ID = tis.ITEM_SET_ID and tis.IS_COMPLETED = 1
		inner join TB_REVIEW_SET rs on tis.SET_ID = rs.SET_ID and rs.REVIEW_ID = @REVIEW_ID
		inner join TB_ITEM_REVIEW ir ON IR.ITEM_ID = TIS.ITEM_ID AND IR.REVIEW_ID = @REVIEW_ID

		inner join TB_ITEM_SET tis2 on tis.ITEM_ID = tis2.ITEM_ID
		inner join TB_ITEM_ATTRIBUTE tia on tis2.ITEM_SET_ID = tia.ITEM_SET_ID
		inner join TB_ATTRIBUTE_SET tas on tas.ATTRIBUTE_ID = tia.ATTRIBUTE_ID
		inner join @QT Qs on Qs.AttID = tas.PARENT_ATTRIBUTE_ID
		inner join TB_ATTRIBUTE a on tas.ATTRIBUTE_ID = a.ATTRIBUTE_ID
		order by OUTCOME_ID, tas.PARENT_ATTRIBUTE_ID, tas.ATTRIBUTE_ORDER, a.ATTRIBUTE_ID
	END
	ELSE
	BEGIN
	select tio.OUTCOME_ID, tio.OUTCOME_TITLE, tis.ITEM_ID, 
		tio.OUTCOME_TITLE as Codename
		, tio.ITEM_ATTRIBUTE_ID_CONTROL as ATTRIBUTE_ID, tio.ITEM_ATTRIBUTE_ID_CONTROL as PARENT_ATTRIBUTE_ID
		from TB_ITEM_OUTCOME tio
		inner join TB_ITEM_SET tis on tio.ITEM_SET_ID = tis.ITEM_SET_ID and 1=0
	END


	IF (@ANSWERS is not null AND @ANSWERS != '')
	BEGIN
	--third set of results, the questions
	declare @AT table ( AttID bigint primary key)
	insert into @AT select qss.value from dbo.fn_Split_int(@ANSWERS, ',') as qss
	select distinct tio.OUTCOME_ID, tio.OUTCOME_TITLE, tis.ITEM_ID, 
		--(Select top(1) a.ATTRIBUTE_NAME from @AT 
		--inner join TB_ATTRIBUTE_SET tas on tas.ATTRIBUTE_ID = AttID
		--inner join TB_ATTRIBUTE a on tas.ATTRIBUTE_ID = a.ATTRIBUTE_ID
		--inner join TB_ITEM_ATTRIBUTE tia on a.ATTRIBUTE_ID = tia.ATTRIBUTE_ID
		--inner join TB_ITEM_SET tis1 on tia.ITEM_SET_ID = tis1.ITEM_SET_ID and tis1.IS_COMPLETED = 1 and tis.ITEM_ID = tis1.ITEM_ID
		--inner join TB_REVIEW_SET rs1 on tis1.SET_ID = rs1.SET_ID and rs1.REVIEW_ID = @REVIEW_ID
		--order by tas.ATTRIBUTE_ORDER ) as Codename
		tia.ATTRIBUTE_ID, a.ATTRIBUTE_NAME
	from TB_ITEM_OUTCOME tio 
	inner join TB_ITEM_SET tis on tio.ITEM_SET_ID = tis.ITEM_SET_ID and tis.IS_COMPLETED = 1
	inner join TB_REVIEW_SET rs on tis.SET_ID = rs.SET_ID and rs.REVIEW_ID = @REVIEW_ID
	inner join TB_ITEM_REVIEW ir ON IR.ITEM_ID = TIS.ITEM_ID AND IR.REVIEW_ID = @REVIEW_ID
	inner join TB_ITEM_SET tis2 on tis.ITEM_ID = tis2.ITEM_ID and tis2.IS_COMPLETED = 1
	inner join TB_ATTRIBUTE_SET tas on tis2.SET_ID = tas.SET_ID -- and tas.SET_ID = rs.SET_ID
	inner join TB_ITEM_ATTRIBUTE tia on tis2.ITEM_ID = tia.ITEM_ID and tas.ATTRIBUTE_ID = tia.ATTRIBUTE_ID
	inner join @AT on AttID = tia.ATTRIBUTE_ID
	inner join TB_ATTRIBUTE a on tia.ATTRIBUTE_ID = a.ATTRIBUTE_ID
	order by OUTCOME_ID
	END
	ELSE
	BEGIN
		select tio.OUTCOME_ID, tio.OUTCOME_TITLE, tis.ITEM_ID, 
		tio.ITEM_ATTRIBUTE_ID_CONTROL as ATTRIBUTE_ID, tio.OUTCOME_TITLE as ATTRIBUTE_NAME
	from TB_ITEM_OUTCOME tio inner join TB_ITEM_SET tis on tio.ITEM_SET_ID = tis.ITEM_SET_ID and 1=0
	
	END
	



--DECLARE @START_TEXT NVARCHAR(MAX) = N' SELECT distinct tio.OUTCOME_ID, tio.ITEM_SET_ID, OUTCOME_TYPE_ID, ITEM_ATTRIBUTE_ID_INTERVENTION,
--	ITEM_ATTRIBUTE_ID_CONTROL, ITEM_ATTRIBUTE_ID_OUTCOME, OUTCOME_TITLE, SHORT_TITLE, OUTCOME_DESCRIPTION,
--	DATA1, DATA2, DATA3, DATA4, DATA5, DATA6, DATA7, DATA8, DATA9, DATA10, DATA11, DATA12, DATA13, DATA14,
--	TB_META_ANALYSIS_OUTCOME.META_ANALYSIS_OUTCOME_ID, TB_ITEM_SET.ITEM_SET_ID, TB_ITEM_ATTRIBUTE.ITEM_ID,
--	A1.ATTRIBUTE_NAME INTERVENTION_TEXT, A2.ATTRIBUTE_NAME CONTROL_TEXT, A3.ATTRIBUTE_NAME OUTCOME_TEXT'
	
--DECLARE @END_TEXT NVARCHAR(MAX) = N' FROM TB_ITEM_OUTCOME tio

--	inner join TB_ITEM_SET on tb_item_set.ITEM_SET_ID = tio.ITEM_SET_ID
--		AND TB_ITEM_SET.IS_COMPLETED = ''TRUE''
--	inner join TB_ITEM_REVIEW on tb_item_review.ITEM_ID = tb_item_set.ITEM_ID AND TB_ITEM_REVIEW.REVIEW_ID = @REVIEW_ID
--	inner JOIN TB_ITEM_ATTRIBUTE ON TB_ITEM_ATTRIBUTE.ITEM_SET_ID = tb_item_set.ITEM_SET_ID
--	inner join TB_ITEM on TB_ITEM.ITEM_ID = TB_ITEM_SET.ITEM_ID
	
--	LEFT OUTER JOIN TB_META_ANALYSIS_OUTCOME ON TB_META_ANALYSIS_OUTCOME.OUTCOME_ID = tio.OUTCOME_ID
--		AND TB_META_ANALYSIS_OUTCOME.META_ANALYSIS_ID = @META_ANALYSIS_ID
		
--	left outer JOIN TB_ATTRIBUTE A1 ON A1.ATTRIBUTE_ID = tio.ITEM_ATTRIBUTE_ID_INTERVENTION 
--	left outer JOIN TB_ATTRIBUTE A2 ON A2.ATTRIBUTE_ID = tio.ITEM_ATTRIBUTE_ID_CONTROL
--	left outer JOIN TB_ATTRIBUTE A3 ON A3.ATTRIBUTE_ID = tio.ITEM_ATTRIBUTE_ID_OUTCOME'
	
--DECLARE @QUERY NVARCHAR(MAX) = @VARIABLES + @START_TEXT + @ANSWERS + @QUESTIONS + @END_TEXT
	
--EXEC (@QUERY)

--/*
--SELECT distinct tio.OUTCOME_ID, SHORT_TITLE, tio.ITEM_SET_ID, OUTCOME_TYPE_ID, ITEM_ATTRIBUTE_ID_INTERVENTION,
--	ITEM_ATTRIBUTE_ID_CONTROL, ITEM_ATTRIBUTE_ID_OUTCOME, OUTCOME_TITLE, OUTCOME_DESCRIPTION,
--	DATA1, DATA2, DATA3, DATA4, DATA5, DATA6, DATA7, DATA8, DATA9, DATA10, DATA11, DATA12, DATA13, DATA14,
--	TB_META_ANALYSIS_OUTCOME.META_ANALYSIS_OUTCOME_ID, TB_ITEM_SET.ITEM_SET_ID,
--	TB_ITEM_ATTRIBUTE.ITEM_ID, A1.ATTRIBUTE_NAME INTERVENTION_TEXT, A2.ATTRIBUTE_NAME CONTROL_TEXT,
--		A3.ATTRIBUTE_NAME OUTCOME_TEXT
	
--	FROM TB_ITEM_OUTCOME tio

--	inner join TB_ITEM_SET on tb_item_set.ITEM_SET_ID = tio.ITEM_SET_ID
--		AND TB_ITEM_SET.IS_COMPLETED = 'TRUE'
--	inner join TB_ITEM_REVIEW on tb_item_review.ITEM_ID = tb_item_set.ITEM_ID
--	inner JOIN TB_ITEM_ATTRIBUTE ON TB_ITEM_ATTRIBUTE.ITEM_SET_ID = tb_item_set.ITEM_SET_ID
--	inner join TB_ITEM on TB_ITEM.ITEM_ID = TB_ITEM_SET.ITEM_ID
	
--	LEFT OUTER JOIN TB_META_ANALYSIS_OUTCOME ON TB_META_ANALYSIS_OUTCOME.OUTCOME_ID = tio.OUTCOME_ID
--		AND TB_META_ANALYSIS_OUTCOME.META_ANALYSIS_ID = @META_ANALYSIS_ID
		
--	left outer JOIN TB_ATTRIBUTE A1 ON A1.ATTRIBUTE_ID = tio.ITEM_ATTRIBUTE_ID_INTERVENTION 
--	left outer JOIN TB_ATTRIBUTE A2 ON A2.ATTRIBUTE_ID = tio.ITEM_ATTRIBUTE_ID_CONTROL
--	left outer JOIN TB_ATTRIBUTE A3 ON A3.ATTRIBUTE_ID = tio.ITEM_ATTRIBUTE_ID_OUTCOME
	
--	WHERE TB_ITEM_REVIEW.REVIEW_ID = @REVIEW_ID
--	AND (@ITEM_ATTRIBUTE_ID_INTERVENTION = 0 OR (ITEM_ATTRIBUTE_ID_INTERVENTION = @ITEM_ATTRIBUTE_ID_INTERVENTION))
--	AND (@ITEM_ATTRIBUTE_ID_CONTROL = 0 OR (ITEM_ATTRIBUTE_ID_CONTROL = @ITEM_ATTRIBUTE_ID_CONTROL))
--	AND (@ITEM_ATTRIBUTE_ID_OUTCOME = 0 OR (ITEM_ATTRIBUTE_ID_OUTCOME = @ITEM_ATTRIBUTE_ID_OUTCOME))
--	--	AND (@ATTRIBUTE_ID IS NULL OR (TB_ITEM_ATTRIBUTE.ATTRIBUTE_ID = @ATTRIBUTE_ID))
--	--AND (
--	--	@ATTRIBUTE_ID IS NULL OR 
--	--		(
--	--		TB_ITEM_SET.ITEM_ID IN
--	--			( 
--	--			SELECT IA2.ITEM_ID FROM TB_ITEM_ATTRIBUTE IA2 
--	--			INNER JOIN TB_ITEM_SET IS2 ON IS2.ITEM_SET_ID = IA2.ITEM_SET_ID AND IS2.IS_COMPLETED = 'TRUE'
--	--			WHERE IA2.ATTRIBUTE_ID = @ATTRIBUTE_ID
--	--			)
--	--		)
--	--	)
--	--AND (--temp correction for before publishing: @ATTRIBUTE_ID is (because of bug) actually the item_attribute_id
--	--	@ATTRIBUTE_ID = 0 OR 
--	--		(
--	--		tio.OUTCOME_ID IN
--	--			( 
--	--				select tio2.OUTCOME_ID from TB_ATTRIBUTE_SET tas
--	--				inner join TB_ITEM_OUTCOME_ATTRIBUTE ioa on tas.ATTRIBUTE_ID = ioa.ATTRIBUTE_ID and tas.ATTRIBUTE_SET_ID = @ATTRIBUTE_ID
--	--				inner join TB_ITEM_OUTCOME tio2 on ioa.OUTCOME_ID = tio2.OUTCOME_ID
--	--			)
--	--		)
--	--	)--end of temp correction
--	AND (--real correction to use when bug is corrected in line 174 of dialogMetaAnalysisSetup.xaml.cs
--		@ATTRIBUTE_ID = 0 OR 
--			(
--			tio.OUTCOME_ID IN 
--				( 
--					select tio2.OUTCOME_ID from TB_ITEM_OUTCOME_ATTRIBUTE ioa  
--					inner join TB_ITEM_OUTCOME tio2 on ioa.OUTCOME_ID = tio2.OUTCOME_ID and ioa.ATTRIBUTE_ID = @ATTRIBUTE_ID
--				)
--			)
--		)--end of real correction
--	AND (@SET_ID = 0 OR (TB_ITEM_SET.SET_ID = @SET_ID))
	
--	--order by TB_ITEM_ATTRIBUTE.ATTRIBUTE_ID
--*/
SET NOCOUNT OFF
GO