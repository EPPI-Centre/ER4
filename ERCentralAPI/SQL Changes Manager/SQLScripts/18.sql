USE [Reviewer]
GO

/****** Object:  Table [dbo].[TB_ITEM_ARM]    Script Date: 11/06/2018 12:15:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[TB_ITEM_ARM](
	[ITEM_ARM_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[ITEM_ID] [bigint] NOT NULL,
	[ORDERING] [int] NULL,
	[ARM_NAME] [nvarchar](500) NOT NULL,
 CONSTRAINT [PK_TB_ITEM_ARM] PRIMARY KEY CLUSTERED 
(
	[ITEM_ARM_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

ALTER TABLE [dbo].[TB_ITEM_ARM]  WITH CHECK ADD  CONSTRAINT [FK_TB_ITEM_ARM_TB_ITEM] FOREIGN KEY([ITEM_ID])
REFERENCES [dbo].[TB_ITEM] ([ITEM_ID])
GO

ALTER TABLE [dbo].[TB_ITEM_ARM] CHECK CONSTRAINT [FK_TB_ITEM_ARM_TB_ITEM]
GO

/* To prevent any potential data loss issues, you should review this script in detail before running it outside the context of the database designer.*/
BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.TB_ITEM_ATTRIBUTE ADD
	ITEM_ARM_ID bigint NULL
GO
ALTER TABLE dbo.TB_ITEM_ATTRIBUTE SET (LOCK_ESCALATION = TABLE)
GO
COMMIT
go

/* To prevent any potential data loss issues, you should review this script in detail before running it outside the context of the database designer.*/
BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.TB_ITEM_ARM SET (LOCK_ESCALATION = TABLE)
GO
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.TB_ITEM_ATTRIBUTE ADD CONSTRAINT
	FK_TB_ITEM_ATTRIBUTE_TB_ITEM_ARM FOREIGN KEY
	(
	ITEM_ARM_ID
	) REFERENCES dbo.TB_ITEM_ARM
	(
	ITEM_ARM_ID
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	
GO
ALTER TABLE dbo.TB_ITEM_ATTRIBUTE SET (LOCK_ESCALATION = TABLE)
GO
COMMIT
go

USE [Reviewer]
GO
/****** Object:  StoredProcedure [dbo].[st_ItemAttributes]    Script Date: 10/06/2018 20:38:41 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER procedure [dbo].[st_ItemAttributes]
(
	@ITEM_SET_ID BIGINT
)

As

SET NOCOUNT ON

SELECT DISTINCT ITEM_ATTRIBUTE_ID, TB_ITEM_ATTRIBUTE.ITEM_ID, TB_ITEM_ATTRIBUTE.ITEM_SET_ID,
	TB_ITEM_ATTRIBUTE.ATTRIBUTE_ID, ADDITIONAL_TEXT, ITEM_ARM_ID, CONTACT_ID, ATTRIBUTE_SET_ID
FROM TB_ITEM_ATTRIBUTE
	INNER JOIN TB_ITEM_SET ON TB_ITEM_SET.ITEM_SET_ID = TB_ITEM_ATTRIBUTE.ITEM_SET_ID AND TB_ITEM_SET.ITEM_SET_ID = @ITEM_SET_ID
	INNER JOIN TB_ATTRIBUTE_SET ON TB_ATTRIBUTE_SET.SET_ID = TB_ITEM_SET.SET_ID AND TB_ATTRIBUTE_SET.ATTRIBUTE_ID = TB_ITEM_ATTRIBUTE.ATTRIBUTE_ID
WHERE TB_ITEM_ATTRIBUTE.ITEM_SET_ID = @ITEM_SET_ID


/*
SELECT distinct(TB_REVIEW_SET.set_id), @ITEM_ID ITEM_ID, IA.ITEM_ATTRIBUTE_ID, IA.ITEM_SET_ID, IA.ATTRIBUTE_ID, 
	IA.ADDITIONAL_TEXT, IA.CONTACT_ID, IA.ATTRIBUTE_SET_ID, IA.IS_COMPLETED, IA.IS_LOCKED
FROM TB_REVIEW_SET
CROSS APPLY dbo.fn_ItemAttributes(CODING_IS_FINAL, TB_REVIEW_SET.SET_ID, @CONTACT_ID, @ITEM_ID) IA
WHERE TB_REVIEW_SET.REVIEW_ID = @REVIEW_ID
*/

/*

SELECT IA.ITEM_ATTRIBUTE_ID, IA.ITEM_ID, IA.ITEM_SET_ID, IA.ATTRIBUTE_ID, IA.ADDITIONAL_TEXT, TB_ITEM_SET.CONTACT_ID, ATTRIBUTE_SET_ID
FROM TB_ITEM_ATTRIBUTE IA
INNER JOIN TB

*/


/*
IF (@CONTACT_ID = 0)
BEGIN
	SELECT IA.ITEM_ATTRIBUTE_ID, IA.ITEM_ID, IA.ITEM_SET_ID, IA.ATTRIBUTE_ID, IA.ADDITIONAL_TEXT, TB_ITEM_SET.CONTACT_ID, ATTRIBUTE_SET_ID
	FROM TB_ITEM_ATTRIBUTE IA
	INNER JOIN TB_ITEM_SET ON TB_ITEM_SET.ITEM_SET_ID = IA.ITEM_SET_ID
	INNER JOIN TB_REVIEW_SET ON TB_REVIEW_SET.SET_ID = TB_ITEM_SET.SET_ID AND REVIEW_ID = @REVIEW_ID
	INNER JOIN TB_ATTRIBUTE_SET ON TB_ATTRIBUTE_SET.SET_ID = TB_ITEM_SET.SET_ID AND TB_ATTRIBUTE_SET.ATTRIBUTE_ID = IA.ATTRIBUTE_ID
	WHERE IA.ITEM_ID = @ITEM_ID
END
ELSE
BEGIN
	SELECT IA.ITEM_ATTRIBUTE_ID, IA.ITEM_ID, IA.ITEM_SET_ID, IA.ATTRIBUTE_ID, IA.ADDITIONAL_TEXT, TB_ITEM_SET.CONTACT_ID, ATTRIBUTE_SET_ID
	FROM TB_ITEM_ATTRIBUTE IA
	INNER JOIN TB_ITEM_SET ON TB_ITEM_SET.ITEM_SET_ID = IA.ITEM_SET_ID AND TB_ITEM_SET.CONTACT_ID = @CONTACT_ID
	INNER JOIN TB_REVIEW_SET ON TB_REVIEW_SET.SET_ID = TB_ITEM_SET.SET_ID AND REVIEW_ID = @REVIEW_ID
	INNER JOIN TB_ATTRIBUTE_SET ON TB_ATTRIBUTE_SET.SET_ID = TB_ITEM_SET.SET_ID AND TB_ATTRIBUTE_SET.ATTRIBUTE_ID = IA.ATTRIBUTE_ID
	WHERE IA.ITEM_ID = @ITEM_ID
END
*/

SET NOCOUNT OFF
go

USE [Reviewer]
GO
/****** Object:  StoredProcedure [dbo].[st_ItemAttributeInsert]    Script Date: 10/06/2018 19:59:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER procedure [dbo].[st_ItemAttributeInsert] (
	@ITEM_ID BIGINT,
	@SET_ID INT,
	@CONTACT_ID INT,
	@ATTRIBUTE_ID BIGINT,
	@ADDITIONAL_TEXT nvarchar(max),
	@REVIEW_ID INT,
	@ITEM_ARM_ID BIGINT, -- JT added item_arm_id 10/06/2018

	@NEW_ITEM_ATTRIBUTE_ID BIGINT OUTPUT,
	@NEW_ITEM_SET_ID BIGINT OUTPUT
)

As
SET NOCOUNT ON

-- First get a valid item_set_id.
-- If is_coding_final for this review then contact_id is irrelevant.
-- If coding is complete the contact_id is irrelevant.
-- Otherwise, we need a item_set_id for this specific contact.

DECLARE @IS_CODING_FINAL BIT
DECLARE @ITEM_SET_ID BIGINT = NULL
DECLARE @CHECK BIGINT

SELECT @IS_CODING_FINAL = CODING_IS_FINAL FROM TB_REVIEW_SET WHERE SET_ID = @SET_ID AND REVIEW_ID = @REVIEW_ID

SELECT @ITEM_SET_ID = ITEM_SET_ID FROM TB_ITEM_SET WHERE ITEM_ID = @ITEM_ID AND SET_ID = @SET_ID AND IS_COMPLETED = 'True'
IF (@ITEM_SET_ID IS NULL)
BEGIN
	SELECT @ITEM_SET_ID = ITEM_SET_ID FROM TB_ITEM_SET WHERE ITEM_ID = @ITEM_ID AND SET_ID = @SET_ID AND CONTACT_ID = @CONTACT_ID END
	
IF (@ITEM_SET_ID IS NULL) -- have to create one 
BEGIN
	INSERT INTO TB_ITEM_SET(ITEM_ID, SET_ID, IS_COMPLETED, CONTACT_ID)
	VALUES (@ITEM_ID, @SET_ID, @IS_CODING_FINAL, @CONTACT_ID)
	SET @ITEM_SET_ID = @@IDENTITY
END

-- We (finally) have an item_set_id we can use for our insert

-- JT modified 10/06/2018 to account for item arm ids too
SELECT TOP(1) @CHECK = ITEM_ATTRIBUTE_ID FROM TB_ITEM_ATTRIBUTE WHERE ATTRIBUTE_ID = @ATTRIBUTE_ID AND ITEM_SET_ID = @ITEM_SET_ID AND ITEM_ARM_ID = @ITEM_ARM_ID


-- JT added item_arm_id
IF (@CHECK IS NULL) -- Not sure what to do if it's not null... - SHOULD REALLY THROW AN ERROR 
BEGIN
	INSERT INTO TB_ITEM_ATTRIBUTE(ITEM_ID, ITEM_SET_ID, ATTRIBUTE_ID, ADDITIONAL_TEXT, ITEM_ARM_ID)
	VALUES (@ITEM_ID, @ITEM_SET_ID, @ATTRIBUTE_ID, @ADDITIONAL_TEXT, @ITEM_ARM_ID)
	SET @NEW_ITEM_ATTRIBUTE_ID = @@IDENTITY 
END

SET @NEW_ITEM_SET_ID = @ITEM_SET_ID

SET NOCOUNT OFF

GO

USE [Reviewer]
GO
/****** Object:  StoredProcedure [dbo].[st_ItemArmCreate]    Script Date: 09/06/2018 13:59:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[st_ItemArmCreate]
(
	@ORDERING INT
,	@ARM_NAME NVARCHAR(500)
,	@ITEM_ID BIGINT
,	@NEW_ITEM_ARM_ID BIGINT OUTPUT
)

As

SET NOCOUNT ON



	INSERT INTO TB_ITEM_ARM(ITEM_ID, ARM_NAME, ORDERING)
	VALUES(@ITEM_ID, @ARM_NAME, @ORDERING)
		
	SET @NEW_ITEM_ARM_ID = @@IDENTITY

SET NOCOUNT OFF

GO

USE [Reviewer]
GO
/****** Object:  StoredProcedure [dbo].[st_ItemArmDelete]    Script Date: 09/06/2018 13:59:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[st_ItemArmDelete]
(
	@ITEM_ARM_ID BIGINT
)

As

SET NOCOUNT ON

	DELETE FROM TB_ITEM_ARM
		WHERE ITEM_ARM_ID = @ITEM_ARM_ID

SET NOCOUNT OFF

GO

USE [Reviewer]
GO
/****** Object:  StoredProcedure [dbo].[st_ItemArmUpdate]    Script Date: 09/06/2018 13:59:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[st_ItemArmUpdate]
(
	@ITEM_ARM_ID BIGINT
,	@ORDERING INT
,	@ARM_NAME NVARCHAR(500)
)

As

SET NOCOUNT ON

	UPDATE TB_ITEM_ARM
		SET ORDERING = @ORDERING,
			ARM_NAME = @ARM_NAME
		WHERE ITEM_ARM_ID = @ITEM_ARM_ID

SET NOCOUNT OFF

GO

USE [Reviewer]
GO
/****** Object:  StoredProcedure [dbo].[st_ItemArmList]    Script Date: 09/06/2018 13:59:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[st_ItemArmList]
(
	@REVIEW_ID INT,
	@ITEM_ID BIGINT
)

As

SET NOCOUNT ON

	SELECT TB_ITEM_ARM.ITEM_ID, ITEM_ARM_ID, ORDERING, ARM_NAME FROM TB_ITEM_ARM
		INNER JOIN TB_ITEM_REVIEW ON TB_ITEM_REVIEW.ITEM_ID = TB_ITEM_ARM.ITEM_ID
		WHERE REVIEW_ID = @REVIEW_ID
		AND TB_ITEM_ARM.ITEM_ID = @ITEM_ID
		ORDER BY ORDERING

SET NOCOUNT OFF

GO
