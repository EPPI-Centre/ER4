{"version":3,"sources":["kendo.dataviz.core.js"],"names":["f","define","$","normalizeText","text","String","replace","REPLACE_REGEX","SPACE","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","styleKey","cacheKey","cachedResult","baselineMarker","textStr","box","_baselineMarker","cloneNode","textContent","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","isArray","Array","addClass","element","classes","idx","className","classArray","indexOf","removeClass","SPACE_REGEX","alignPathToPixel","path","offset","stroke","drawing","defined","segments","anchor","round","translate","clockwise","angle1","angle2","x","y","isNumber","isNaN","isString","STRING","convertableToNumber","isFinite","isObject","styleValue","isSizeField","field","SIZE_STYLES_REGEX","test","elementStyles","styles","result","field$1","stylesArray","getComputedStyle","parseFloat","getSpacing","defaultSpacing","spacing","top","right","bottom","left","TOP","RIGHT","BOTTOM","LEFT","getTemplate","template","TemplateService","compile","isFunction","content","grep","array","callback","hasClasses","classNames","names","split","inArray","interpolateValue","start","end","progress","COORD_PRECISION","mousewheelDelta","e","delta","wheelDelta","Math","ceil","floor","detail","setDefaultOptions","type","proto","prototype","sparseArrayLimits","arr","min","MAX_VALUE","max","MIN_VALUE","undefined","find","predicate","item","autoMajorUnit","scale","relativeValue","scaleMultiplier","diff","DEFAULT_PRECISION","abs","pow","log","rotatePoint","cx","cy","angle","theta","rad","Point","cos","sin","numericComparer","a","b","boxDiff","r","s","c","d","g","h","boxes","x1","y1","x2","y2","Box","innerRadialStops","currentStop","stops","usedSpace","innerRadius","radius","currentStops","rectToBox","rect","origin","bottomRight","createAxisTick","tickOptions","tickX","tickY","position","tick","Path","color","vertical","moveTo","lineTo","createAxisGridLine","gridLine","lineStart","lineEnd","line","dashType","absoluteDateDiff","getTime","offsetDiff","getTimezoneOffset","TIME_PER_MINUTE","addTicks","date","ticks","Date","toDate","startOfWeek","weekStartDay","daysToSubtract","day","getDay","TIME_PER_DAY","adjustDST","hours","getHours","setHours","addHours","tzDiff","roundedDate","setMinutes","TIME_PER_HOUR","addDuration","dateValue","unit","YEARS","getFullYear","MONTHS","getMonth","WEEKS","DAYS","getDate","HOURS","MINUTES","getSeconds","setSeconds","SECONDS","TIME_PER_SECOND","MILLISECONDS","getMilliseconds","setMilliseconds","floorDate","ceilDate","dateComparer","dateDiff","toTime","dateEquals","timeIndex","baseUnit","TIME_PER_UNIT","dateIndex","baseUnitStep","index","startDate","duration","lteDateIndex","sortedDates","currentDate","low","high","parseDate","intlService","parseDates","dates","categoryRange","categories","range","_range","autoBaseUnit","startUnit","startStep","unitSteps","step","nextStep","categoryLimits","span","autoBaseUnitSteps","maxDateGroups","autoUnit","FIT","autoUnitIx","BASE_UNITS","units","totalUnits","slice","shift","last","defaultBaseUnit","lastCategory","categoryIx","category","count","minDiff","TIME_PER_YEAR","TIME_PER_MONTH","TIME_PER_WEEK","initUnit","toLowerCase","useDefault","AUTO","autoAxisMin","narrow","axisMin","minValue","ZERO_THRESHOLD","autoAxisMax","axisMax","maxValue","limitCoordinate","COORDINATE_LIMIT","autoAxisOptions","seriesMin","seriesMax","narrowRange","autoMin","autoMax","majorUnit","autoOptions","roundToMajorUnit","remainderClose","totalAxisOptions","clearNullValues","fields","axisOptions","userOptions","userSetMin","userSetMax","userSetLimits","minorUnit","divisor","ratio","remainder","threshold","timeUnits","applyDefaults","baseUnitTime","userMajorUnit","actualUnits","unitsToAdd","head","tail","initRange","axisCrossingValue","throwNegativeValuesError","autoAxisMin$1","base","autoAxisMax$1","logMaxRemainder","Error","angularDistance","numberSign","Group","geometry","Rect","Circle","geometryTransform","Segment","dataviz","__common_getter_js","ARC","AXIS_LABEL_CLICK","BLACK","CENTER","CIRCLE","CROSS","DATE","DEFAULT_FONT","DEFAULT_HEIGHT","DEFAULT_WIDTH","END","FORMAT_REGEX","HEIGHT","HIGHLIGHT_ZINDEX","INSIDE","NONE","NOTE_CLICK","NOTE_HOVER","NOTE_LEAVE","OBJECT","OUTSIDE","START","TRIANGLE","VALUE","WHITE","WIDTH","X","Y","constants","defaultImplementation","IntlService","FORMAT_REPLACE_REGEX","FormatService","ChartService","current$1","DomEventsBuilder","current$2","services","HashMap","TRIGGER","InstanceObserver","ref","append","bindEvents","deg","elementOffset","elementSize","eventElement","eventCoordinates","limitValue","unbindEvents","valueOrDefault","FontLoader","Ring","Sector","DIRECTION_ANGLE","ShapeBuilder","ChartElement","BoxElement","ShapeElement","LINEAR","RADIAL","GRADIENTS","RootElement","FloatElement","DrawingText","Text","ROWS_SPLIT_REGEX","TextBox","Title","AxisLabel","DEFAULT_ICON_SIZE","DEFAULT_LABEL_COLOR","Note","Axis","TIME_PER_MILLISECOND","MIN_CATEGORY_POINTS_RANGE","CategoryAxis","DateLabelFormats","EmptyDateRange","DateRange","DateCategoryAxis","MIN_VALUE_RANGE","NumericAxis","DateValueAxis","DEFAULT_MAJOR_UNIT","LogarithmicAxis","GridLinesMixin","RadarCategoryAxis","PolarAxis","RadarNumericAxisMixin","RadarNumericAxis","RadarLogarithmicAxis","WEIGHT","EXTREMUM_ALLOWED_DEVIATION","CurveProcessor","transform","getter","Number","format","toString","register","userImplementation","Object","defineProperties","implementation","_intlService","auto","formatString","intl","values","len","arguments","match","apply","concat","localeAuto","locale","placeholderFormat","parseInt","substring","fn","set","chart","context","sender","rtl","notify","name","args","trigger","isPannable","axis","pannable","lock","create","events","_key","observer","handlers","handlerMap","isDefaultPrevented","callObserver","fnName","requiresHandlers","this$1","fetchFonts","fonts","state","depth","MAX_DEPTH","keys","forEach","loadFonts","promises","font","load","logToConsole","Promise","all","then","preloadFonts","clone","equals","point","rotate","center","degrees","cosT","sinT","multiply","distanceTo","dx","dy","sqrt","onCircle","radians","move","wrap","targetBox","wrapPoint","arrayPoint","snapTo","alignTo","targetCenter","shrink","dw","dh","expand","pad","padding","unpad","containsPoint","points","getHash","overlaps","rotation","r1","r2","r3","r4","toRect","hasSize","align","alignment","c1","c2","sizeFunc","startAngle","middle","setRadius","newRadius","radianAngle","ax","ay","adjacentBox","distance","sector","midAndle","midPoint","hw","hh","sa","ca","p","endAngle","vector","startPoint","startVector","endPoint","endVector","dist","getBBox","angles","allAngles","startAngleIndex","endAngleIndex","call","createRing","arc","innerEnd","Arc","radiusX","radiusY","fromArc","close","pointAt","children","initUserOptions","reflow","currentChild","destroy","animation","getRoot","parent","getSender","service","getService","chartService","translateChildren","childrenCount","arguments$1","renderVisual","visible","createVisual","addVisual","renderChildren","createAnimation","renderComplete","visual","chartElement","appendVisual","zIndex","Animation","childVisual","noclip","clipRoot","stackRoot","stackVisual","isStackRoot","pos","sibling","here","visuals","insert","traverse","child","closest","matched","hasHighlight","highlight","createHighlight","toggleHighlight","show","highlightOptions","customVisual","_highlight","fill","opacity","highlightVisualArgs","series","dataItem","percentage","runningTotal","total","createGradientOverlay","gradientOptions","overlay","createGradient","closed","elements","margin","shrinkToFit","hasSetSize","borderWidth","border","reflowPaddingBox","vAlign","paddingBox","contentBox","hasBox","background","fromRect","visualStyle","cursor","pointData","getElement","halfWidth","fromPoints","MultiPath","visualOptions","glass","sharpBevel","roundedBevel","roundedGlass","supportVML","sharpGlass","bubbleShadow","rootOptions","gradients","currentBox","createBackground","drawingGradient","hashCode","gradient","LinearGradient","RadialGradient","cleanGradients","_observers","_initDirection","groupAxis","elementAxis","groupSizeField","elementSizeField","groupSpacing","elementSpacing","vSpacing","reflowChildren","groupStart","groupIdx","group","groupElements","elementStart","groupElementsCount","elementSize$$1","groupElementStart","elementBox","ref$1","groupOptions","groups","groupsSize","maxGroupElementsSize","groupsCount","groupsStart","alignStart","groupSize","maxSize","groupElementsSize","topLeft","data","_initContainer","_autoReflow","rowIdx","rows","floatElement","textOptions","container","trim","visualBox","visualFn","_boxReflow","visualContext","clippedBBox","normalBox","rotatedBox","rotationTransform","getDefaultVisual","boxCenter","buildTitle","defaultOptions","title","titleOptions","culture","click","widget","alignRotation","bbox","matrix","rotationMatrix","rotationOrigin","alignAxis","distanceAxis","axisAnchor","topRight","bottomLeft","distanceLeft","distanceRight","alignEnd","alignCenter","transformCopy","render","hide","label","icon","childAlias","noteTemplate","aliasFor","wrapperBox","linePoints","createLine","defaultVisual","eventArgs","preventDefault","over","out","labels","majorTickSize","minorTickSize","minorTicks","minorTickType","majorTicks","majorTickType","initFields","_deferLabels","createLabels","createTitle","createNotes","labelsRange","skip","labelsCount","labelOptions","clearLabels","autoRotateLabels","createAxisLabel","clearTitle","clear","lineBox","mirror","axisX","axisY","lineWidth","visualSize","note","notes","items","parseNoteValue","reverse","createPlotBands","gridLinesVisual","gridLines","_gridLines","createTicks","lineGroup","tickPositions","skipUnit","tickLineOptions","getMajorTickPositions","getMinorTickPositions","_alignLines","_lineGroup","getActualTickSize","tickSize","_backgroundPath","altAxis","slotX","slotY","bandRect","plotBands","plotArea","_plotbandGroup","pane","axes","getSlot","from","to","createGridLines","axisLineVisible","linePos","lineOptions","minorGridLines","majorGridLines","labelSize","sizeFn","titleSize","space","rootBox","boxSize","maxLabelSize","arrangeTitle","arrangeLabels","arrangeNotes","getLabelsTickPositions","labelTickIndex","tickIx","labelPos","labelBox","firstTickPosition","nextTickPosition","labelX","labelY","labelsBetweenTicks","labelOffset","idx$1","slot","shouldRenderNote","noteSlot","secondAxis","axisLabelText","tmpl","limit","lastLabel","maxLabelOffset","startTick","endTick","offsetField","startPosition","endPosition","maxStartOffset","maxEndOffset","limitRange","rangeSize","valueRange","justified","prepareUserOptions","years","months","weeks","days","minutes","seconds","milliseconds","_ticks","categoriesHash","copy","srcCategories","definedMin","definedMax","rangeIndices","totalRange","totalRangeIndices","roundedRange","_seriesMax","scaleOptions","hideOutOfRangeLabels","valueAxis","firstLabel","getTicks","labelTicks","tickIndices","stepSize","indices","getTickPositions","positions","hasMinor","cache","_hash","filterOutOfRangePositions","inRange","startIndex","endIndex","p1","p2","slotBox","singleSlot","limitSlot","limittedSlot","categoryIndex","pointCategoryIndex","startValue","getCategory","totalIndex","categoryAt","categoriesCount","translateRange","zoomRange","rate","totalMin","totalMax","scaleRange","dataItems","hideOutOfRangeNotes","pan","pointsRange","diffStart","diffEnd","rangeMin","rangeMax","_categoriesMap","currentRangeIndices","totalCount","mapCategories","map$$1","displayIndices","displayRange","valueIndex","valuesCount","dateAt","roundToBaseUnit","lowerEnd","expandEnd","roundToTotalStep","justifyEnd","valueStart","displayStart","valueEnd","displayEnd","minIdx","maxIdx","_indices","last$$1","_values","upper","next","roundedStep","dataRange","maxDivisions","divisionOptions","dataRangeOptions","_parsed","panning","userSetBaseUnit","userSetBaseUnitStep","divisionRange","splice","rounds","totalLimits","panRange","isEmpty","datesRange","indicesRange","fit","maxDiff","rangeDiff","baseUnitIndex","autoBaseUnitStep","stepIndex","unitFormat","dateFormats","dateRange","totalOptions","totalMajorUnit","getDivisions","stepValue","lineSize","divisions","dir","startEdge","skipStep","getValue","valueOffset","endValue","isValidRange","newRange","axisCrossingValues","timeRange","exact","limittedRange","logMin","logMax","floorMax","traverseMajorTicksPositions","tickPosition","traverseMinorTicksPositions","power","_lineOptions","minorOptions","ref$2","_minorIntervalOptions","minorStep","acceptOptionsRange","acceptNewRange","nextValue","difference","majorAngles","minorAngles","skipMajor","majorGridLineAngles","renderMajorGridLines","minorGridLineAngles","renderMinorGridLines","renderGridLines","radiusCallback","circle","gridLineAngles","skipAngles","divs","intervals","altAxisVisible","alpha","intervalAngle","reflowLabels","skipOption","stepOption","divCount","divAngle","majorIntervals","minorIntervals","interval","minorAngle","minorRadius","band","ring","plotBandSlot","slotStart","toValue","slots","totalDivs","slotAngle","fromValue","instanceOptions","tmp","atan2","PI","bandStyle","shape","polarAxis","plotBandPoints","innerPoints","outerPoints","innerCircle","outerCircle","radarMajorGridLinePositions","radarMinorGridLinePositions","tickRadius","angleIx","midAngle","gamma","beta","axisType","minorSkipStep","process","dataPoints","p0","tangent","initialControlPoint","lastControlPoint","controlPoints","tangent$1","cp0","controlPoints$1","cp1","controlPoints$2","tangent$2","removeDuplicates","pop","controlOut","firstControlPoint","secondControlPoint","invertAxis","lineFunction","calculateFunction","isLine","monotonic","sign","oldXField","xField","yField","restrict","switchOrientation","isMonotonicByField","restrictControlPoint","cp","p3","t1","t2","xValue","yValue","controlPoint","Gradients","draw","SASS_THEMES","ExportMixin","skipLegacy","exportVisual","exportSVG","exportImage","exportPDF","svg","imageDataURL","Surface","exportGroup","surface","image","support","canvas","css","display","appendTo","_rootElement","toDataURL","remove","Point2D","Box2D","mwDelta","originalEvent"],"mappings":"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","file":"kendo.dataviz.core.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var REPLACE_REGEX = /\\r?\\n|\\r|\\t/g;\n        var SPACE = ' ';\n        function normalizeText(text) {\n            return String(text).replace(REPLACE_REGEX, SPACE);\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: pre!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, options) {\n                if (options === void 0) {\n                    options = {};\n                }\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = options.box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                var textStr = options.normalizeText !== false ? normalizeText(text) : String(text);\n                measureBox.textContent = textStr;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (textStr.length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey,\n            normalizeText: normalizeText\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/core/kendo-core', [\n        'kendo.core',\n        'kendo.drawing'\n    ], f);\n}(function () {\n    (function ($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var drawing = kendo.drawing;\n        var util = drawing.util;\n        var Path = drawing.Path;\n        var Group = drawing.Group;\n        var Class = kendo.Class;\n        var geometry = kendo.geometry;\n        var Rect = geometry.Rect;\n        var Circle = geometry.Circle;\n        var geometryTransform = geometry.transform;\n        var Segment = geometry.Segment;\n        var dataviz = kendo.dataviz;\n        var deepExtend = kendo.deepExtend;\n        var isFunction = kendo.isFunction;\n        var __common_getter_js = kendo.getter;\n        var ARC = 'arc';\n        var AXIS_LABEL_CLICK = 'axisLabelClick';\n        var BLACK = '#000';\n        var BOTTOM = 'bottom';\n        var CENTER = 'center';\n        var CIRCLE = 'circle';\n        var COORD_PRECISION = 3;\n        var CROSS = 'cross';\n        var DATE = 'date';\n        var DEFAULT_FONT = '12px sans-serif';\n        var DEFAULT_HEIGHT = 400;\n        var DEFAULT_PRECISION = 10;\n        var DEFAULT_WIDTH = 600;\n        var END = 'end';\n        var FORMAT_REGEX = /\\{\\d+:?/;\n        var HEIGHT = 'height';\n        var HIGHLIGHT_ZINDEX = 100;\n        var INSIDE = 'inside';\n        var LEFT = 'left';\n        var MAX_VALUE = Number.MAX_VALUE;\n        var MIN_VALUE = -Number.MAX_VALUE;\n        var NONE = 'none';\n        var NOTE_CLICK = 'noteClick';\n        var NOTE_HOVER = 'noteHover';\n        var NOTE_LEAVE = 'noteLeave';\n        var OBJECT = 'object';\n        var OUTSIDE = 'outside';\n        var RIGHT = 'right';\n        var START = 'start';\n        var STRING = 'string';\n        var TOP = 'top';\n        var TRIANGLE = 'triangle';\n        var VALUE = 'value';\n        var WHITE = '#fff';\n        var WIDTH = 'width';\n        var X = 'x';\n        var Y = 'y';\n        var constants = {\n            ARC: ARC,\n            AXIS_LABEL_CLICK: AXIS_LABEL_CLICK,\n            BLACK: BLACK,\n            BOTTOM: BOTTOM,\n            CENTER: CENTER,\n            CIRCLE: CIRCLE,\n            COORD_PRECISION: COORD_PRECISION,\n            CROSS: CROSS,\n            DATE: DATE,\n            DEFAULT_FONT: DEFAULT_FONT,\n            DEFAULT_HEIGHT: DEFAULT_HEIGHT,\n            DEFAULT_PRECISION: DEFAULT_PRECISION,\n            DEFAULT_WIDTH: DEFAULT_WIDTH,\n            END: END,\n            FORMAT_REGEX: FORMAT_REGEX,\n            HEIGHT: HEIGHT,\n            HIGHLIGHT_ZINDEX: HIGHLIGHT_ZINDEX,\n            INSIDE: INSIDE,\n            LEFT: LEFT,\n            MAX_VALUE: MAX_VALUE,\n            MIN_VALUE: MIN_VALUE,\n            NONE: NONE,\n            NOTE_CLICK: NOTE_CLICK,\n            NOTE_HOVER: NOTE_HOVER,\n            NOTE_LEAVE: NOTE_LEAVE,\n            OBJECT: OBJECT,\n            OUTSIDE: OUTSIDE,\n            RIGHT: RIGHT,\n            START: START,\n            STRING: STRING,\n            TOP: TOP,\n            TRIANGLE: TRIANGLE,\n            VALUE: VALUE,\n            WHITE: WHITE,\n            WIDTH: WIDTH,\n            X: X,\n            Y: Y\n        };\n        function isArray(value) {\n            return Array.isArray(value);\n        }\n        function addClass(element, classes) {\n            var classArray = isArray(classes) ? classes : [classes];\n            for (var idx = 0; idx < classArray.length; idx++) {\n                var className = classArray[idx];\n                if (element.className.indexOf(className) === -1) {\n                    element.className += ' ' + className;\n                }\n            }\n        }\n        var SPACE_REGEX = /\\s+/g;\n        function removeClass(element, className) {\n            if (element && element.className) {\n                element.className = element.className.replace(className, '').replace(SPACE_REGEX, ' ');\n            }\n        }\n        function alignPathToPixel(path) {\n            var offset = 0.5;\n            if (path.options.stroke && kendo.drawing.util.defined(path.options.stroke.width)) {\n                if (path.options.stroke.width % 2 === 0) {\n                    offset = 0;\n                }\n            }\n            for (var i = 0; i < path.segments.length; i++) {\n                path.segments[i].anchor().round(0).translate(offset, offset);\n            }\n            return path;\n        }\n        function clockwise(angle1, angle2) {\n            return -angle1.x * angle2.y + angle1.y * angle2.x < 0;\n        }\n        function isNumber(value) {\n            return typeof value === 'number' && !isNaN(value);\n        }\n        function isString(value) {\n            return typeof value === STRING;\n        }\n        function convertableToNumber(value) {\n            return isNumber(value) || isString(value) && isFinite(value);\n        }\n        function isObject(value) {\n            return typeof value === 'object';\n        }\n        function styleValue(value) {\n            if (isNumber(value)) {\n                return value + 'px';\n            }\n            return value;\n        }\n        var SIZE_STYLES_REGEX = /width|height|top|left|bottom|right/i;\n        function isSizeField(field) {\n            return SIZE_STYLES_REGEX.test(field);\n        }\n        function elementStyles(element, styles) {\n            var stylesArray = isString(styles) ? [styles] : styles;\n            if (isArray(stylesArray)) {\n                var result = {};\n                var style = window.getComputedStyle(element);\n                for (var idx = 0; idx < stylesArray.length; idx++) {\n                    var field = stylesArray[idx];\n                    result[field] = isSizeField(field) ? parseFloat(style[field]) : style[field];\n                }\n                return result;\n            } else if (isObject(styles)) {\n                for (var field$1 in styles) {\n                    element.style[field$1] = styleValue(styles[field$1]);\n                }\n            }\n        }\n        function getSpacing(value, defaultSpacing) {\n            if (defaultSpacing === void 0) {\n                defaultSpacing = 0;\n            }\n            var spacing = {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            };\n            if (typeof value === 'number') {\n                spacing[TOP] = spacing[RIGHT] = spacing[BOTTOM] = spacing[LEFT] = value;\n            } else {\n                spacing[TOP] = value[TOP] || defaultSpacing;\n                spacing[RIGHT] = value[RIGHT] || defaultSpacing;\n                spacing[BOTTOM] = value[BOTTOM] || defaultSpacing;\n                spacing[LEFT] = value[LEFT] || defaultSpacing;\n            }\n            return spacing;\n        }\n        var defaultImplementation = {\n            format: function (format, value) {\n                return value;\n            },\n            toString: function (value) {\n                return value;\n            },\n            parseDate: function (value) {\n                return new Date(value);\n            }\n        };\n        var current = defaultImplementation;\n        var IntlService = Class.extend({});\n        IntlService.register = function (userImplementation) {\n            current = userImplementation;\n        };\n        if (Object.defineProperties) {\n            Object.defineProperties(IntlService, {\n                implementation: {\n                    get: function () {\n                        return current;\n                    }\n                }\n            });\n        }\n        var FORMAT_REPLACE_REGEX = /\\{(\\d+)(:[^\\}]+)?\\}/g;\n        var FormatService = Class.extend({\n            init: function (intlService) {\n                this._intlService = intlService;\n            },\n            auto: function (formatString) {\n                var values = [], len = arguments.length - 1;\n                while (len-- > 0)\n                    values[len] = arguments[len + 1];\n                var intl = this.intl;\n                if (isString(formatString) && formatString.match(FORMAT_REGEX)) {\n                    return intl.format.apply(intl, [formatString].concat(values));\n                }\n                return intl.toString(values[0], formatString);\n            },\n            localeAuto: function (formatString, values, locale) {\n                var intl = this.intl;\n                var result;\n                if (isString(formatString) && formatString.match(FORMAT_REGEX)) {\n                    result = formatString.replace(FORMAT_REPLACE_REGEX, function (match, index, placeholderFormat) {\n                        var value = values[parseInt(index, 10)];\n                        return intl.toString(value, placeholderFormat ? placeholderFormat.substring(1) : '', locale);\n                    });\n                } else {\n                    result = intl.toString(values[0], formatString, locale);\n                }\n                return result;\n            }\n        });\n        if (Object.defineProperties) {\n            Object.defineProperties(FormatService.fn, {\n                intl: {\n                    get: function () {\n                        return this._intlService || IntlService.implementation;\n                    },\n                    set: function (value) {\n                        this._intlService = value;\n                    }\n                }\n            });\n        }\n        var ChartService = Class.extend({\n            init: function (chart, context) {\n                if (context === void 0) {\n                    context = {};\n                }\n                this._intlService = context.intlService;\n                this.sender = context.sender || chart;\n                this.format = new FormatService(context.intlService);\n                this.chart = chart;\n                this.rtl = Boolean(context.rtl);\n            },\n            notify: function (name, args) {\n                if (this.chart) {\n                    this.chart.trigger(name, args);\n                }\n            },\n            isPannable: function (axis) {\n                var pannable = ((this.chart || {}).options || {}).pannable;\n                return pannable && pannable.lock !== axis;\n            }\n        });\n        if (Object.defineProperties) {\n            Object.defineProperties(ChartService.fn, {\n                intl: {\n                    get: function () {\n                        return this._intlService || IntlService.implementation;\n                    },\n                    set: function (value) {\n                        this._intlService = value;\n                        this.format.intl = value;\n                    }\n                }\n            });\n        }\n        var current$1;\n        var DomEventsBuilder = Class.extend({});\n        DomEventsBuilder.register = function (userImplementation) {\n            current$1 = userImplementation;\n        };\n        DomEventsBuilder.create = function (element, events) {\n            if (current$1) {\n                return current$1.create(element, events);\n            }\n        };\n        var current$2 = {\n            compile: function (template) {\n                return template;\n            }\n        };\n        var TemplateService = Class.extend({});\n        TemplateService.register = function (userImplementation) {\n            current$2 = userImplementation;\n        };\n        TemplateService.compile = function (template) {\n            return current$2.compile(template);\n        };\n        var services = {\n            ChartService: ChartService,\n            DomEventsBuilder: DomEventsBuilder,\n            FormatService: FormatService,\n            IntlService: IntlService,\n            TemplateService: TemplateService\n        };\n        function getTemplate(options) {\n            if (options === void 0) {\n                options = {};\n            }\n            var template;\n            if (options.template) {\n                options.template = template = TemplateService.compile(options.template);\n            } else if (isFunction(options.content)) {\n                template = options.content;\n            }\n            return template;\n        }\n        function grep(array, callback) {\n            var length = array.length;\n            var result = [];\n            for (var idx = 0; idx < length; idx++) {\n                if (callback(array[idx])) {\n                    result.push(array[idx]);\n                }\n            }\n            return result;\n        }\n        function hasClasses(element, classNames) {\n            if (element.className) {\n                var names = classNames.split(' ');\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (element.className.indexOf(names[idx]) !== -1) {\n                        return true;\n                    }\n                }\n            }\n        }\n        var HashMap = function HashMap() {\n            this._map = {};\n        };\n        HashMap.prototype.get = function get(name) {\n            return this._map[this._key(name)];\n        };\n        HashMap.prototype.set = function set(name, value) {\n            this._map[this._key(name)] = value;\n        };\n        HashMap.prototype._key = function _key(name) {\n            return name instanceof Date ? name.getTime() : name;\n        };\n        function inArray(value, array) {\n            if (array) {\n                return array.indexOf(value) !== -1;\n            }\n        }\n        function interpolateValue(start, end, progress) {\n            return kendo.drawing.util.round(start + (end - start) * progress, COORD_PRECISION);\n        }\n        var TRIGGER = 'trigger';\n        var InstanceObserver = Class.extend({\n            init: function (observer, handlers) {\n                this.observer = observer;\n                this.handlerMap = deepExtend({}, this.handlerMap, handlers);\n            },\n            trigger: function (name, args) {\n                var ref = this;\n                var observer = ref.observer;\n                var handlerMap = ref.handlerMap;\n                var isDefaultPrevented;\n                if (handlerMap[name]) {\n                    isDefaultPrevented = this.callObserver(handlerMap[name], args);\n                } else if (observer[TRIGGER]) {\n                    isDefaultPrevented = this.callObserver(TRIGGER, name, args);\n                }\n                return isDefaultPrevented;\n            },\n            callObserver: function (fnName) {\n                var args = [], len = arguments.length - 1;\n                while (len-- > 0)\n                    args[len] = arguments[len + 1];\n                return this.observer[fnName].apply(this.observer, args);\n            },\n            requiresHandlers: function (names) {\n                var this$1 = this;\n                if (this.observer.requiresHandlers) {\n                    return this.observer.requiresHandlers(names);\n                }\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (this$1.handlerMap[names[idx]]) {\n                        return true;\n                    }\n                }\n            }\n        });\n        function map(array, callback) {\n            var length = array.length;\n            var result = [];\n            for (var idx = 0; idx < length; idx++) {\n                var value = callback(array[idx]);\n                if (kendo.drawing.util.defined(value)) {\n                    result.push(value);\n                }\n            }\n            return result;\n        }\n        function mousewheelDelta(e) {\n            var delta = 0;\n            if (e.wheelDelta) {\n                delta = -e.wheelDelta / 120;\n                delta = delta > 0 ? Math.ceil(delta) : Math.floor(delta);\n            }\n            if (e.detail) {\n                delta = kendo.drawing.util.round(e.detail / 3);\n            }\n            return delta;\n        }\n        var ref = kendo.drawing.util;\n        var append = ref.append;\n        var bindEvents = ref.bindEvents;\n        var defined = ref.defined;\n        var deg = ref.deg;\n        var elementOffset = ref.elementOffset;\n        var elementSize = ref.elementSize;\n        var eventElement = ref.eventElement;\n        var eventCoordinates = ref.eventCoordinates;\n        var last = ref.last;\n        var limitValue = ref.limitValue;\n        var objectKey = ref.objectKey;\n        var rad = ref.rad;\n        var round = ref.round;\n        var unbindEvents = ref.unbindEvents;\n        var valueOrDefault = ref.valueOrDefault;\n        var FontLoader = Class.extend({});\n        FontLoader.fetchFonts = function (options, fonts, state) {\n            if (state === void 0) {\n                state = { depth: 0 };\n            }\n            var MAX_DEPTH = 5;\n            if (!options || state.depth > MAX_DEPTH || !document.fonts) {\n                return;\n            }\n            Object.keys(options).forEach(function (key) {\n                var value = options[key];\n                if (key === 'dataSource' || key[0] === '$' || !value) {\n                    return;\n                }\n                if (key === 'font') {\n                    fonts.push(value);\n                } else if (typeof value === 'object') {\n                    state.depth++;\n                    FontLoader.fetchFonts(value, fonts, state);\n                    state.depth--;\n                }\n            });\n        };\n        FontLoader.loadFonts = function (fonts, callback) {\n            var promises = [];\n            if (fonts.length > 0 && document.fonts) {\n                try {\n                    promises = fonts.map(function (font) {\n                        return document.fonts.load(font);\n                    });\n                } catch (e) {\n                    kendo.logToConsole(e);\n                }\n                Promise.all(promises).then(callback, callback);\n            } else {\n                callback();\n            }\n        };\n        FontLoader.preloadFonts = function (options, callback) {\n            var fonts = [];\n            FontLoader.fetchFonts(options, fonts);\n            FontLoader.loadFonts(fonts, callback);\n        };\n        function setDefaultOptions(type, options) {\n            var proto = type.prototype;\n            if (proto.options) {\n                proto.options = deepExtend({}, proto.options, options);\n            } else {\n                proto.options = options;\n            }\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_VALUE;\n            var max = MIN_VALUE;\n            for (var idx = 0, length = arr.length; idx < length; idx++) {\n                var value = arr[idx];\n                if (value !== null && isFinite(value)) {\n                    min = Math.min(min, value);\n                    max = Math.max(max, value);\n                }\n            }\n            return {\n                min: min === MAX_VALUE ? undefined : min,\n                max: max === MIN_VALUE ? undefined : max\n            };\n        }\n        function find(array, predicate) {\n            for (var i = 0; i < array.length; i++) {\n                var item = array[i];\n                if (predicate(item, i, array)) {\n                    return item;\n                }\n            }\n        }\n        function autoMajorUnit(min, max) {\n            var diff = round(max - min, DEFAULT_PRECISION - 1);\n            if (diff === 0) {\n                if (max === 0) {\n                    return 0.1;\n                }\n                diff = Math.abs(max);\n            }\n            var scale = Math.pow(10, Math.floor(Math.log(diff) / Math.log(10)));\n            var relativeValue = round(diff / scale, DEFAULT_PRECISION);\n            var scaleMultiplier = 1;\n            if (relativeValue < 1.904762) {\n                scaleMultiplier = 0.2;\n            } else if (relativeValue < 4.761904) {\n                scaleMultiplier = 0.5;\n            } else if (relativeValue < 9.523809) {\n                scaleMultiplier = 1;\n            } else {\n                scaleMultiplier = 2;\n            }\n            return round(scale * scaleMultiplier, DEFAULT_PRECISION);\n        }\n        var Point = Class.extend({\n            init: function (x, y) {\n                this.x = x || 0;\n                this.y = y || 0;\n            },\n            clone: function () {\n                return new Point(this.x, this.y);\n            },\n            equals: function (point) {\n                return point && this.x === point.x && this.y === point.y;\n            },\n            rotate: function (center, degrees) {\n                var theta = rad(degrees);\n                var cosT = Math.cos(theta);\n                var sinT = Math.sin(theta);\n                var cx = center.x;\n                var cy = center.y;\n                var ref = this;\n                var x = ref.x;\n                var y = ref.y;\n                this.x = round(cx + (x - cx) * cosT + (y - cy) * sinT, COORD_PRECISION);\n                this.y = round(cy + (y - cy) * cosT - (x - cx) * sinT, COORD_PRECISION);\n                return this;\n            },\n            multiply: function (a) {\n                this.x *= a;\n                this.y *= a;\n                return this;\n            },\n            distanceTo: function (point) {\n                var dx = this.x - point.x;\n                var dy = this.y - point.y;\n                return Math.sqrt(dx * dx + dy * dy);\n            }\n        });\n        Point.onCircle = function (center, angle, radius) {\n            var radians = rad(angle);\n            return new Point(center.x - radius * Math.cos(radians), center.y - radius * Math.sin(radians));\n        };\n        var Box = Class.extend({\n            init: function (x1, y1, x2, y2) {\n                this.x1 = x1 || 0;\n                this.y1 = y1 || 0;\n                this.x2 = x2 || 0;\n                this.y2 = y2 || 0;\n            },\n            equals: function (box) {\n                return this.x1 === box.x1 && this.x2 === box.x2 && this.y1 === box.y1 && this.y2 === box.y2;\n            },\n            width: function () {\n                return this.x2 - this.x1;\n            },\n            height: function () {\n                return this.y2 - this.y1;\n            },\n            translate: function (dx, dy) {\n                this.x1 += dx;\n                this.x2 += dx;\n                this.y1 += dy;\n                this.y2 += dy;\n                return this;\n            },\n            move: function (x, y) {\n                var height = this.height();\n                var width = this.width();\n                if (defined(x)) {\n                    this.x1 = x;\n                    this.x2 = this.x1 + width;\n                }\n                if (defined(y)) {\n                    this.y1 = y;\n                    this.y2 = this.y1 + height;\n                }\n                return this;\n            },\n            wrap: function (targetBox) {\n                this.x1 = Math.min(this.x1, targetBox.x1);\n                this.y1 = Math.min(this.y1, targetBox.y1);\n                this.x2 = Math.max(this.x2, targetBox.x2);\n                this.y2 = Math.max(this.y2, targetBox.y2);\n                return this;\n            },\n            wrapPoint: function (point) {\n                var arrayPoint = isArray(point);\n                var x = arrayPoint ? point[0] : point.x;\n                var y = arrayPoint ? point[1] : point.y;\n                this.wrap(new Box(x, y, x, y));\n                return this;\n            },\n            snapTo: function (targetBox, axis) {\n                if (axis === X || !axis) {\n                    this.x1 = targetBox.x1;\n                    this.x2 = targetBox.x2;\n                }\n                if (axis === Y || !axis) {\n                    this.y1 = targetBox.y1;\n                    this.y2 = targetBox.y2;\n                }\n                return this;\n            },\n            alignTo: function (targetBox, anchor) {\n                var height = this.height();\n                var width = this.width();\n                var axis = anchor === TOP || anchor === BOTTOM ? Y : X;\n                var offset = axis === Y ? height : width;\n                if (anchor === CENTER) {\n                    var targetCenter = targetBox.center();\n                    var center = this.center();\n                    this.x1 += targetCenter.x - center.x;\n                    this.y1 += targetCenter.y - center.y;\n                } else if (anchor === TOP || anchor === LEFT) {\n                    this[axis + 1] = targetBox[axis + 1] - offset;\n                } else {\n                    this[axis + 1] = targetBox[axis + 2];\n                }\n                this.x2 = this.x1 + width;\n                this.y2 = this.y1 + height;\n                return this;\n            },\n            shrink: function (dw, dh) {\n                this.x2 -= dw;\n                this.y2 -= dh;\n                return this;\n            },\n            expand: function (dw, dh) {\n                this.shrink(-dw, -dh);\n                return this;\n            },\n            pad: function (padding) {\n                var spacing = getSpacing(padding);\n                this.x1 -= spacing.left;\n                this.x2 += spacing.right;\n                this.y1 -= spacing.top;\n                this.y2 += spacing.bottom;\n                return this;\n            },\n            unpad: function (padding) {\n                var spacing = getSpacing(padding);\n                spacing.left = -spacing.left;\n                spacing.top = -spacing.top;\n                spacing.right = -spacing.right;\n                spacing.bottom = -spacing.bottom;\n                return this.pad(spacing);\n            },\n            clone: function () {\n                return new Box(this.x1, this.y1, this.x2, this.y2);\n            },\n            center: function () {\n                return new Point(this.x1 + this.width() / 2, this.y1 + this.height() / 2);\n            },\n            containsPoint: function (point) {\n                return point.x >= this.x1 && point.x <= this.x2 && point.y >= this.y1 && point.y <= this.y2;\n            },\n            points: function () {\n                return [\n                    new Point(this.x1, this.y1),\n                    new Point(this.x2, this.y1),\n                    new Point(this.x2, this.y2),\n                    new Point(this.x1, this.y2)\n                ];\n            },\n            getHash: function () {\n                return [\n                    this.x1,\n                    this.y1,\n                    this.x2,\n                    this.y2\n                ].join(',');\n            },\n            overlaps: function (box) {\n                return !(box.y2 < this.y1 || this.y2 < box.y1 || box.x2 < this.x1 || this.x2 < box.x1);\n            },\n            rotate: function (rotation) {\n                var width = this.width();\n                var height = this.height();\n                var ref = this.center();\n                var cx = ref.x;\n                var cy = ref.y;\n                var r1 = rotatePoint(0, 0, cx, cy, rotation);\n                var r2 = rotatePoint(width, 0, cx, cy, rotation);\n                var r3 = rotatePoint(width, height, cx, cy, rotation);\n                var r4 = rotatePoint(0, height, cx, cy, rotation);\n                width = Math.max(r1.x, r2.x, r3.x, r4.x) - Math.min(r1.x, r2.x, r3.x, r4.x);\n                height = Math.max(r1.y, r2.y, r3.y, r4.y) - Math.min(r1.y, r2.y, r3.y, r4.y);\n                this.x2 = this.x1 + width;\n                this.y2 = this.y1 + height;\n                return this;\n            },\n            toRect: function () {\n                return new Rect([\n                    this.x1,\n                    this.y1\n                ], [\n                    this.width(),\n                    this.height()\n                ]);\n            },\n            hasSize: function () {\n                return this.width() !== 0 && this.height() !== 0;\n            },\n            align: function (targetBox, axis, alignment) {\n                var c1 = axis + 1;\n                var c2 = axis + 2;\n                var sizeFunc = axis === X ? WIDTH : HEIGHT;\n                var size = this[sizeFunc]();\n                if (inArray(alignment, [\n                        LEFT,\n                        TOP\n                    ])) {\n                    this[c1] = targetBox[c1];\n                    this[c2] = this[c1] + size;\n                } else if (inArray(alignment, [\n                        RIGHT,\n                        BOTTOM\n                    ])) {\n                    this[c2] = targetBox[c2];\n                    this[c1] = this[c2] - size;\n                } else if (alignment === CENTER) {\n                    this[c1] = targetBox[c1] + (targetBox[sizeFunc]() - size) / 2;\n                    this[c2] = this[c1] + size;\n                }\n            }\n        });\n        function rotatePoint(x, y, cx, cy, angle) {\n            var theta = rad(angle);\n            return new Point(cx + (x - cx) * Math.cos(theta) + (y - cy) * Math.sin(theta), cy - (x - cx) * Math.sin(theta) + (y - cy) * Math.cos(theta));\n        }\n        var Ring = Class.extend({\n            init: function (center, innerRadius, radius, startAngle, angle) {\n                this.center = center;\n                this.innerRadius = innerRadius;\n                this.radius = radius;\n                this.startAngle = startAngle;\n                this.angle = angle;\n            },\n            clone: function () {\n                return new Ring(this.center, this.innerRadius, this.radius, this.startAngle, this.angle);\n            },\n            middle: function () {\n                return this.startAngle + this.angle / 2;\n            },\n            setRadius: function (newRadius, innerRadius) {\n                if (innerRadius) {\n                    this.innerRadius = newRadius;\n                } else {\n                    this.radius = newRadius;\n                }\n                return this;\n            },\n            point: function (angle, innerRadius) {\n                var radianAngle = rad(angle);\n                var ax = Math.cos(radianAngle);\n                var ay = Math.sin(radianAngle);\n                var radius = innerRadius ? this.innerRadius : this.radius;\n                var x = round(this.center.x - ax * radius, COORD_PRECISION);\n                var y = round(this.center.y - ay * radius, COORD_PRECISION);\n                return new Point(x, y);\n            },\n            adjacentBox: function (distance, width, height) {\n                var sector = this.clone().expand(distance);\n                var midAndle = sector.middle();\n                var midPoint = sector.point(midAndle);\n                var hw = width / 2;\n                var hh = height / 2;\n                var sa = Math.sin(rad(midAndle));\n                var ca = Math.cos(rad(midAndle));\n                var x = midPoint.x - hw;\n                var y = midPoint.y - hh;\n                if (Math.abs(sa) < 0.9) {\n                    x += hw * -ca / Math.abs(ca);\n                }\n                if (Math.abs(ca) < 0.9) {\n                    y += hh * -sa / Math.abs(sa);\n                }\n                return new Box(x, y, x + width, y + height);\n            },\n            containsPoint: function (p) {\n                var center = this.center;\n                var innerRadius = this.innerRadius;\n                var radius = this.radius;\n                var startAngle = this.startAngle;\n                var endAngle = this.startAngle + this.angle;\n                var dx = p.x - center.x;\n                var dy = p.y - center.y;\n                var vector = new Point(dx, dy);\n                var startPoint = this.point(startAngle);\n                var startVector = new Point(startPoint.x - center.x, startPoint.y - center.y);\n                var endPoint = this.point(endAngle);\n                var endVector = new Point(endPoint.x - center.x, endPoint.y - center.y);\n                var dist = round(dx * dx + dy * dy, COORD_PRECISION);\n                return (startVector.equals(vector) || clockwise(startVector, vector)) && !clockwise(endVector, vector) && dist >= innerRadius * innerRadius && dist <= radius * radius;\n            },\n            getBBox: function () {\n                var this$1 = this;\n                var box = new Box(MAX_VALUE, MAX_VALUE, MIN_VALUE, MIN_VALUE);\n                var startAngle = round(this.startAngle % 360);\n                var endAngle = round((startAngle + this.angle) % 360);\n                var innerRadius = this.innerRadius;\n                var allAngles = [\n                    0,\n                    90,\n                    180,\n                    270,\n                    startAngle,\n                    endAngle\n                ].sort(numericComparer);\n                var startAngleIndex = allAngles.indexOf(startAngle);\n                var endAngleIndex = allAngles.indexOf(endAngle);\n                var angles;\n                if (startAngle === endAngle) {\n                    angles = allAngles;\n                } else {\n                    if (startAngleIndex < endAngleIndex) {\n                        angles = allAngles.slice(startAngleIndex, endAngleIndex + 1);\n                    } else {\n                        angles = [].concat(allAngles.slice(0, endAngleIndex + 1), allAngles.slice(startAngleIndex, allAngles.length));\n                    }\n                }\n                for (var i = 0; i < angles.length; i++) {\n                    var point = this$1.point(angles[i]);\n                    box.wrapPoint(point);\n                    box.wrapPoint(point, innerRadius);\n                }\n                if (!innerRadius) {\n                    box.wrapPoint(this.center);\n                }\n                return box;\n            },\n            expand: function (value) {\n                this.radius += value;\n                return this;\n            }\n        });\n        function numericComparer(a, b) {\n            return a - b;\n        }\n        var Sector = Ring.extend({\n            init: function (center, radius, startAngle, angle) {\n                Ring.fn.init.call(this, center, 0, radius, startAngle, angle);\n            },\n            expand: function (value) {\n                return Ring.fn.expand.call(this, value);\n            },\n            clone: function () {\n                return new Sector(this.center, this.radius, this.startAngle, this.angle);\n            },\n            setRadius: function (newRadius) {\n                this.radius = newRadius;\n                return this;\n            }\n        });\n        var DIRECTION_ANGLE = 0.001;\n        var ShapeBuilder = Class.extend({\n            createRing: function (sector, options) {\n                var startAngle = sector.startAngle + 180;\n                var endAngle = sector.angle + startAngle;\n                if (sector.angle > 0 && startAngle === endAngle) {\n                    endAngle += DIRECTION_ANGLE;\n                }\n                var center = new geometry.Point(sector.center.x, sector.center.y);\n                var radius = Math.max(sector.radius, 0);\n                var innerRadius = Math.max(sector.innerRadius, 0);\n                var arc = new geometry.Arc(center, {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: radius,\n                    radiusY: radius\n                });\n                var path = Path.fromArc(arc, options).close();\n                if (innerRadius) {\n                    arc.radiusX = arc.radiusY = innerRadius;\n                    var innerEnd = arc.pointAt(endAngle);\n                    path.lineTo(innerEnd.x, innerEnd.y);\n                    path.arc(endAngle, startAngle, innerRadius, innerRadius, true);\n                } else {\n                    path.lineTo(center.x, center.y);\n                }\n                return path;\n            }\n        });\n        ShapeBuilder.current = new ShapeBuilder();\n        var ChartElement = Class.extend({\n            init: function (options) {\n                this.children = [];\n                this.options = deepExtend({}, this.options, this.initUserOptions(options));\n            },\n            initUserOptions: function (options) {\n                return options;\n            },\n            reflow: function (targetBox) {\n                var children = this.children;\n                var box;\n                for (var i = 0; i < children.length; i++) {\n                    var currentChild = children[i];\n                    currentChild.reflow(targetBox);\n                    box = box ? box.wrap(currentChild.box) : currentChild.box.clone();\n                }\n                this.box = box || targetBox;\n            },\n            destroy: function () {\n                var children = this.children;\n                if (this.animation) {\n                    this.animation.destroy();\n                }\n                for (var i = 0; i < children.length; i++) {\n                    children[i].destroy();\n                }\n            },\n            getRoot: function () {\n                var parent = this.parent;\n                return parent ? parent.getRoot() : null;\n            },\n            getSender: function () {\n                var service = this.getService();\n                if (service) {\n                    return service.sender;\n                }\n            },\n            getService: function () {\n                var element = this;\n                while (element) {\n                    if (element.chartService) {\n                        return element.chartService;\n                    }\n                    element = element.parent;\n                }\n            },\n            translateChildren: function (dx, dy) {\n                var children = this.children;\n                var childrenCount = children.length;\n                for (var i = 0; i < childrenCount; i++) {\n                    children[i].box.translate(dx, dy);\n                }\n            },\n            append: function () {\n                var arguments$1 = arguments;\n                var this$1 = this;\n                for (var i = 0; i < arguments.length; i++) {\n                    var item = arguments$1[i];\n                    this$1.children.push(item);\n                    item.parent = this$1;\n                }\n            },\n            renderVisual: function () {\n                if (this.options.visible === false) {\n                    return;\n                }\n                this.createVisual();\n                this.addVisual();\n                this.renderChildren();\n                this.createAnimation();\n                this.renderComplete();\n            },\n            addVisual: function () {\n                if (this.visual) {\n                    this.visual.chartElement = this;\n                    if (this.parent) {\n                        this.parent.appendVisual(this.visual);\n                    }\n                }\n            },\n            renderChildren: function () {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    children[i].renderVisual();\n                }\n            },\n            createVisual: function () {\n                this.visual = new Group({\n                    zIndex: this.options.zIndex,\n                    visible: valueOrDefault(this.options.visible, true)\n                });\n            },\n            createAnimation: function () {\n                if (this.visual && this.options.animation) {\n                    this.animation = drawing.Animation.create(this.visual, this.options.animation);\n                }\n            },\n            appendVisual: function (childVisual) {\n                if (!childVisual.chartElement) {\n                    childVisual.chartElement = this;\n                }\n                if (childVisual.options.noclip) {\n                    this.clipRoot().visual.append(childVisual);\n                } else if (defined(childVisual.options.zIndex)) {\n                    this.stackRoot().stackVisual(childVisual);\n                } else if (this.isStackRoot) {\n                    this.stackVisual(childVisual);\n                } else if (this.visual) {\n                    this.visual.append(childVisual);\n                } else {\n                    this.parent.appendVisual(childVisual);\n                }\n            },\n            clipRoot: function () {\n                if (this.parent) {\n                    return this.parent.clipRoot();\n                }\n                return this;\n            },\n            stackRoot: function () {\n                if (this.parent) {\n                    return this.parent.stackRoot();\n                }\n                return this;\n            },\n            stackVisual: function (childVisual) {\n                var zIndex = childVisual.options.zIndex || 0;\n                var visuals = this.visual.children;\n                var length = visuals.length;\n                var pos;\n                for (pos = 0; pos < length; pos++) {\n                    var sibling = visuals[pos];\n                    var here = valueOrDefault(sibling.options.zIndex, 0);\n                    if (here > zIndex) {\n                        break;\n                    }\n                }\n                this.visual.insert(pos, childVisual);\n            },\n            traverse: function (callback) {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    var child = children[i];\n                    callback(child);\n                    if (child.traverse) {\n                        child.traverse(callback);\n                    }\n                }\n            },\n            closest: function (match) {\n                var element = this;\n                var matched = false;\n                while (element && !matched) {\n                    matched = match(element);\n                    if (!matched) {\n                        element = element.parent;\n                    }\n                }\n                if (matched) {\n                    return element;\n                }\n            },\n            renderComplete: function () {\n            },\n            hasHighlight: function () {\n                var options = (this.options || {}).highlight;\n                return !(!this.createHighlight || options && options.visible === false);\n            },\n            toggleHighlight: function (show) {\n                var this$1 = this;\n                var options = (this.options || {}).highlight || {};\n                var customVisual = options.visual;\n                var highlight = this._highlight;\n                if (!highlight) {\n                    var highlightOptions = {\n                        fill: {\n                            color: WHITE,\n                            opacity: 0.2\n                        },\n                        stroke: {\n                            color: WHITE,\n                            width: 1,\n                            opacity: 0.2\n                        }\n                    };\n                    if (customVisual) {\n                        highlight = this._highlight = customVisual($.extend(this.highlightVisualArgs(), {\n                            createVisual: function () {\n                                return this$1.createHighlight(highlightOptions);\n                            },\n                            sender: this.getSender(),\n                            series: this.series,\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            runningTotal: this.runningTotal,\n                            total: this.total\n                        }));\n                        if (!highlight) {\n                            return;\n                        }\n                    } else {\n                        highlight = this._highlight = this.createHighlight(highlightOptions);\n                    }\n                    if (!defined(highlight.options.zIndex)) {\n                        highlight.options.zIndex = valueOrDefault(options.zIndex, this.options.zIndex);\n                    }\n                    this.appendVisual(highlight);\n                }\n                highlight.visible(show);\n            },\n            createGradientOverlay: function (element, options, gradientOptions) {\n                var overlay = new Path($.extend({\n                    stroke: { color: 'none' },\n                    fill: this.createGradient(gradientOptions),\n                    closed: element.options.closed\n                }, options));\n                overlay.segments.elements(element.segments.elements());\n                return overlay;\n            },\n            createGradient: function (options) {\n                if (this.parent) {\n                    return this.parent.createGradient(options);\n                }\n            }\n        });\n        ChartElement.prototype.options = {};\n        var BoxElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.options.margin = getSpacing(this.options.margin);\n                this.options.padding = getSpacing(this.options.padding);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var shrinkToFit = options.shrinkToFit;\n                var hasSetSize = width && height;\n                var margin = options.margin;\n                var padding = options.padding;\n                var borderWidth = options.border.width;\n                var box;\n                var reflowPaddingBox = function () {\n                    this$1.align(targetBox, X, options.align);\n                    this$1.align(targetBox, Y, options.vAlign);\n                    this$1.paddingBox = box.clone().unpad(margin).unpad(borderWidth);\n                };\n                var contentBox = targetBox.clone();\n                if (hasSetSize) {\n                    contentBox.x2 = contentBox.x1 + width;\n                    contentBox.y2 = contentBox.y1 + height;\n                }\n                if (shrinkToFit) {\n                    contentBox.unpad(margin).unpad(borderWidth).unpad(padding);\n                }\n                ChartElement.fn.reflow.call(this, contentBox);\n                if (hasSetSize) {\n                    box = this.box = new Box(0, 0, width, height);\n                } else {\n                    box = this.box;\n                }\n                if (shrinkToFit && hasSetSize) {\n                    reflowPaddingBox();\n                    contentBox = this.contentBox = this.paddingBox.clone().unpad(padding);\n                } else {\n                    contentBox = this.contentBox = box.clone();\n                    box.pad(padding).pad(borderWidth).pad(margin);\n                    reflowPaddingBox();\n                }\n                this.translateChildren(box.x1 - contentBox.x1 + margin.left + borderWidth + padding.left, box.y1 - contentBox.y1 + margin.top + borderWidth + padding.top);\n                var children = this.children;\n                for (var i = 0; i < children.length; i++) {\n                    var item = children[i];\n                    item.reflow(item.box);\n                }\n            },\n            align: function (targetBox, axis, alignment) {\n                this.box.align(targetBox, axis, alignment);\n            },\n            hasBox: function () {\n                var options = this.options;\n                return options.border.width || options.background;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                if (options.visible && this.hasBox()) {\n                    this.visual.append(Path.fromRect(this.paddingBox.toRect(), this.visualStyle()));\n                }\n            },\n            visualStyle: function () {\n                var options = this.options;\n                var border = options.border || {};\n                return {\n                    stroke: {\n                        width: border.width,\n                        color: border.color,\n                        opacity: valueOrDefault(border.opacity, options.opacity),\n                        dashType: border.dashType\n                    },\n                    fill: {\n                        color: options.background,\n                        opacity: options.opacity\n                    },\n                    cursor: options.cursor\n                };\n            }\n        });\n        setDefaultOptions(BoxElement, {\n            align: LEFT,\n            vAlign: TOP,\n            margin: {},\n            padding: {},\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            background: '',\n            shrinkToFit: false,\n            width: 0,\n            height: 0,\n            visible: true\n        });\n        var ShapeElement = BoxElement.extend({\n            init: function (options, pointData) {\n                BoxElement.fn.init.call(this, options);\n                this.pointData = pointData;\n            },\n            getElement: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.paddingBox;\n                var type = options.type;\n                var rotation = options.rotation;\n                var center = box.center();\n                var halfWidth = box.width() / 2;\n                if (!options.visible || !this.hasBox()) {\n                    return null;\n                }\n                var style = this.visualStyle();\n                var element;\n                if (type === CIRCLE) {\n                    element = new drawing.Circle(new Circle([\n                        round(box.x1 + halfWidth, COORD_PRECISION),\n                        round(box.y1 + box.height() / 2, COORD_PRECISION)\n                    ], halfWidth), style);\n                } else if (type === TRIANGLE) {\n                    element = Path.fromPoints([\n                        [\n                            box.x1 + halfWidth,\n                            box.y1\n                        ],\n                        [\n                            box.x1,\n                            box.y2\n                        ],\n                        [\n                            box.x2,\n                            box.y2\n                        ]\n                    ], style).close();\n                } else if (type === CROSS) {\n                    element = new drawing.MultiPath(style);\n                    element.moveTo(box.x1, box.y1).lineTo(box.x2, box.y2);\n                    element.moveTo(box.x1, box.y2).lineTo(box.x2, box.y1);\n                } else {\n                    element = Path.fromRect(box.toRect(), style);\n                }\n                if (rotation) {\n                    element.transform(geometryTransform().rotate(-rotation, [\n                        center.x,\n                        center.y\n                    ]));\n                }\n                element.options.zIndex = options.zIndex;\n                return element;\n            },\n            createElement: function () {\n                var this$1 = this;\n                var customVisual = this.options.visual;\n                var pointData = this.pointData || {};\n                var visual;\n                if (customVisual) {\n                    visual = customVisual({\n                        value: pointData.value,\n                        dataItem: pointData.dataItem,\n                        sender: this.getSender(),\n                        series: pointData.series,\n                        category: pointData.category,\n                        rect: this.paddingBox.toRect(),\n                        options: this.visualOptions(),\n                        createVisual: function () {\n                            return this$1.getElement();\n                        }\n                    });\n                } else {\n                    visual = this.getElement();\n                }\n                return visual;\n            },\n            visualOptions: function () {\n                var options = this.options;\n                return {\n                    background: options.background,\n                    border: options.border,\n                    margin: options.margin,\n                    padding: options.padding,\n                    type: options.type,\n                    size: options.width,\n                    visible: options.visible\n                };\n            },\n            createVisual: function () {\n                this.visual = this.createElement();\n            }\n        });\n        setDefaultOptions(ShapeElement, {\n            type: CIRCLE,\n            align: CENTER,\n            vAlign: CENTER\n        });\n        var LINEAR = 'linear';\n        var RADIAL = 'radial';\n        var GRADIENTS = {\n            glass: {\n                type: LINEAR,\n                rotation: 0,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.25,\n                        color: WHITE,\n                        opacity: 0.3\n                    },\n                    {\n                        offset: 1,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            sharpBevel: {\n                type: RADIAL,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0.55\n                    },\n                    {\n                        offset: 0.65,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.95,\n                        color: WHITE,\n                        opacity: 0.25\n                    }\n                ]\n            },\n            roundedBevel: {\n                type: RADIAL,\n                stops: [\n                    {\n                        offset: 0.33,\n                        color: WHITE,\n                        opacity: 0.06\n                    },\n                    {\n                        offset: 0.83,\n                        color: WHITE,\n                        opacity: 0.2\n                    },\n                    {\n                        offset: 0.95,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            roundedGlass: {\n                type: RADIAL,\n                supportVML: false,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.5,\n                        color: WHITE,\n                        opacity: 0.3\n                    },\n                    {\n                        offset: 0.99,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            sharpGlass: {\n                type: RADIAL,\n                supportVML: false,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0.2\n                    },\n                    {\n                        offset: 0.15,\n                        color: WHITE,\n                        opacity: 0.15\n                    },\n                    {\n                        offset: 0.17,\n                        color: WHITE,\n                        opacity: 0.35\n                    },\n                    {\n                        offset: 0.85,\n                        color: WHITE,\n                        opacity: 0.05\n                    },\n                    {\n                        offset: 0.87,\n                        color: WHITE,\n                        opacity: 0.15\n                    },\n                    {\n                        offset: 0.99,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            bubbleShadow: {\n                type: RADIAL,\n                center: [\n                    0.5,\n                    0.5\n                ],\n                radius: 0.5\n            }\n        };\n        function boxDiff(r, s) {\n            if (r.x1 === s.x1 && r.y1 === s.y1 && r.x2 === s.x2 && r.y2 === s.y2) {\n                return s;\n            }\n            var a = Math.min(r.x1, s.x1);\n            var b = Math.max(r.x1, s.x1);\n            var c = Math.min(r.x2, s.x2);\n            var d = Math.max(r.x2, s.x2);\n            var e = Math.min(r.y1, s.y1);\n            var f = Math.max(r.y1, s.y1);\n            var g = Math.min(r.y2, s.y2);\n            var h = Math.max(r.y2, s.y2);\n            var boxes = [];\n            boxes[0] = new Box(b, e, c, f);\n            boxes[1] = new Box(a, f, b, g);\n            boxes[2] = new Box(c, f, d, g);\n            boxes[3] = new Box(b, g, c, h);\n            if (r.x1 === a && r.y1 === e || s.x1 === a && s.y1 === e) {\n                boxes[4] = new Box(a, e, b, f);\n                boxes[5] = new Box(c, g, d, h);\n            } else {\n                boxes[4] = new Box(c, e, d, f);\n                boxes[5] = new Box(a, g, b, h);\n            }\n            return grep(boxes, function (box) {\n                return box.height() > 0 && box.width() > 0;\n            })[0];\n        }\n        var RootElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                var rootOptions = this.options;\n                rootOptions.width = parseInt(rootOptions.width, 10);\n                rootOptions.height = parseInt(rootOptions.height, 10);\n                this.gradients = {};\n            },\n            reflow: function () {\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var currentBox = new Box(0, 0, options.width, options.height);\n                this.box = currentBox.unpad(options.margin);\n                for (var i = 0; i < children.length; i++) {\n                    children[i].reflow(currentBox);\n                    currentBox = boxDiff(currentBox, children[i].box) || new Box();\n                }\n            },\n            createVisual: function () {\n                this.visual = new Group();\n                this.createBackground();\n            },\n            createBackground: function () {\n                var options = this.options;\n                var border = options.border || {};\n                var box = this.box.clone().pad(options.margin).unpad(border.width);\n                var background = Path.fromRect(box.toRect(), {\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    fill: {\n                        color: options.background,\n                        opacity: options.opacity\n                    },\n                    zIndex: -10\n                });\n                this.visual.append(background);\n            },\n            getRoot: function () {\n                return this;\n            },\n            createGradient: function (options) {\n                var gradients = this.gradients;\n                var hashCode = objectKey(options);\n                var gradient = GRADIENTS[options.gradient];\n                var drawingGradient;\n                if (gradients[hashCode]) {\n                    drawingGradient = gradients[hashCode];\n                } else {\n                    var gradientOptions = $.extend({}, gradient, options);\n                    if (gradient.type === 'linear') {\n                        drawingGradient = new drawing.LinearGradient(gradientOptions);\n                    } else {\n                        if (options.innerRadius) {\n                            gradientOptions.stops = innerRadialStops(gradientOptions);\n                        }\n                        drawingGradient = new drawing.RadialGradient(gradientOptions);\n                        drawingGradient.supportVML = gradient.supportVML !== false;\n                    }\n                    gradients[hashCode] = drawingGradient;\n                }\n                return drawingGradient;\n            },\n            cleanGradients: function () {\n                var gradients = this.gradients;\n                for (var hashCode in gradients) {\n                    gradients[hashCode]._observers = [];\n                }\n            },\n            size: function () {\n                var options = this.options;\n                return new Box(0, 0, options.width, options.height);\n            }\n        });\n        setDefaultOptions(RootElement, {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT,\n            background: WHITE,\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            margin: getSpacing(5),\n            zIndex: -2\n        });\n        function innerRadialStops(options) {\n            var stops = options.stops;\n            var usedSpace = options.innerRadius / options.radius * 100;\n            var length = stops.length;\n            var currentStops = [];\n            for (var i = 0; i < length; i++) {\n                var currentStop = $.extend({}, stops[i]);\n                currentStop.offset = (currentStop.offset * (100 - usedSpace) + usedSpace) / 100;\n                currentStops.push(currentStop);\n            }\n            return currentStops;\n        }\n        var FloatElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this._initDirection();\n            },\n            _initDirection: function () {\n                var options = this.options;\n                if (options.vertical) {\n                    this.groupAxis = X;\n                    this.elementAxis = Y;\n                    this.groupSizeField = WIDTH;\n                    this.elementSizeField = HEIGHT;\n                    this.groupSpacing = options.spacing;\n                    this.elementSpacing = options.vSpacing;\n                } else {\n                    this.groupAxis = Y;\n                    this.elementAxis = X;\n                    this.groupSizeField = HEIGHT;\n                    this.elementSizeField = WIDTH;\n                    this.groupSpacing = options.vSpacing;\n                    this.elementSpacing = options.spacing;\n                }\n            },\n            reflow: function (targetBox) {\n                this.box = targetBox.clone();\n                this.reflowChildren();\n            },\n            reflowChildren: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var elementAxis = ref.elementAxis;\n                var groupAxis = ref.groupAxis;\n                var elementSizeField = ref.elementSizeField;\n                var groupSizeField = ref.groupSizeField;\n                var ref$1 = this.groupOptions();\n                var groups = ref$1.groups;\n                var groupsSize = ref$1.groupsSize;\n                var maxGroupElementsSize = ref$1.maxGroupElementsSize;\n                var groupsCount = groups.length;\n                var groupsStart = box[groupAxis + 1] + this.alignStart(groupsSize, box[groupSizeField]());\n                if (groupsCount) {\n                    var groupStart = groupsStart;\n                    for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                        var group = groups[groupIdx];\n                        var groupElements = group.groupElements;\n                        var elementStart = box[elementAxis + 1];\n                        var groupElementsCount = groupElements.length;\n                        for (var idx = 0; idx < groupElementsCount; idx++) {\n                            var element = groupElements[idx];\n                            var elementSize$$1 = this$1.elementSize(element);\n                            var groupElementStart = groupStart + this$1.alignStart(elementSize$$1[groupSizeField], group.groupSize);\n                            var elementBox = new Box();\n                            elementBox[groupAxis + 1] = groupElementStart;\n                            elementBox[groupAxis + 2] = groupElementStart + elementSize$$1[groupSizeField];\n                            elementBox[elementAxis + 1] = elementStart;\n                            elementBox[elementAxis + 2] = elementStart + elementSize$$1[elementSizeField];\n                            element.reflow(elementBox);\n                            elementStart += elementSize$$1[elementSizeField] + this$1.elementSpacing;\n                        }\n                        groupStart += group.groupSize + this$1.groupSpacing;\n                    }\n                    box[groupAxis + 1] = groupsStart;\n                    box[groupAxis + 2] = groupsStart + groupsSize;\n                    box[elementAxis + 2] = box[elementAxis + 1] + maxGroupElementsSize;\n                }\n            },\n            alignStart: function (size, maxSize) {\n                var start = 0;\n                var align = this.options.align;\n                if (align === RIGHT || align === BOTTOM) {\n                    start = maxSize - size;\n                } else if (align === CENTER) {\n                    start = (maxSize - size) / 2;\n                }\n                return start;\n            },\n            groupOptions: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var children = ref.children;\n                var elementSizeField = ref.elementSizeField;\n                var groupSizeField = ref.groupSizeField;\n                var elementSpacing = ref.elementSpacing;\n                var groupSpacing = ref.groupSpacing;\n                var maxSize = round(box[elementSizeField]());\n                var childrenCount = children.length;\n                var groups = [];\n                var groupSize = 0;\n                var groupElementsSize = 0;\n                var groupsSize = 0;\n                var maxGroupElementsSize = 0;\n                var groupElements = [];\n                for (var idx = 0; idx < childrenCount; idx++) {\n                    var element = children[idx];\n                    if (!element.box) {\n                        element.reflow(box);\n                    }\n                    var elementSize$$1 = this$1.elementSize(element);\n                    if (this$1.options.wrap && round(groupElementsSize + elementSpacing + elementSize$$1[elementSizeField]) > maxSize) {\n                        groups.push({\n                            groupElements: groupElements,\n                            groupSize: groupSize,\n                            groupElementsSize: groupElementsSize\n                        });\n                        maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                        groupsSize += groupSpacing + groupSize;\n                        groupSize = 0;\n                        groupElementsSize = 0;\n                        groupElements = [];\n                    }\n                    groupSize = Math.max(groupSize, elementSize$$1[groupSizeField]);\n                    if (groupElementsSize > 0) {\n                        groupElementsSize += elementSpacing;\n                    }\n                    groupElementsSize += elementSize$$1[elementSizeField];\n                    groupElements.push(element);\n                }\n                groups.push({\n                    groupElements: groupElements,\n                    groupSize: groupSize,\n                    groupElementsSize: groupElementsSize\n                });\n                maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                groupsSize += groupSize;\n                return {\n                    groups: groups,\n                    groupsSize: groupsSize,\n                    maxGroupElementsSize: maxGroupElementsSize\n                };\n            },\n            elementSize: function (element) {\n                return {\n                    width: element.box.width(),\n                    height: element.box.height()\n                };\n            },\n            createVisual: function () {\n            }\n        });\n        setDefaultOptions(FloatElement, {\n            vertical: true,\n            wrap: true,\n            vSpacing: 0,\n            spacing: 0\n        });\n        var DrawingText = drawing.Text;\n        var Text = ChartElement.extend({\n            init: function (content, options) {\n                ChartElement.fn.init.call(this, options);\n                this.content = content;\n                this.reflow(new Box());\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var size = options.size = util.measureText(this.content, { font: options.font });\n                this.baseline = size.baseline;\n                this.box = new Box(targetBox.x1, targetBox.y1, targetBox.x1 + size.width, targetBox.y1 + size.height);\n            },\n            createVisual: function () {\n                var ref = this.options;\n                var font = ref.font;\n                var color = ref.color;\n                var opacity = ref.opacity;\n                var cursor = ref.cursor;\n                this.visual = new DrawingText(this.content, this.box.toRect().topLeft(), {\n                    font: font,\n                    fill: {\n                        color: color,\n                        opacity: opacity\n                    },\n                    cursor: cursor\n                });\n            }\n        });\n        setDefaultOptions(Text, {\n            font: DEFAULT_FONT,\n            color: BLACK\n        });\n        function rectToBox(rect) {\n            var origin = rect.origin;\n            var bottomRight = rect.bottomRight();\n            return new Box(origin.x, origin.y, bottomRight.x, bottomRight.y);\n        }\n        var ROWS_SPLIT_REGEX = /\\n/m;\n        var TextBox = BoxElement.extend({\n            init: function (content, options, data) {\n                BoxElement.fn.init.call(this, options);\n                this.content = content;\n                this.data = data;\n                this._initContainer();\n                if (this.options._autoReflow !== false) {\n                    this.reflow(new Box());\n                }\n            },\n            _initContainer: function () {\n                var options = this.options;\n                var rows = String(this.content).split(ROWS_SPLIT_REGEX);\n                var floatElement = new FloatElement({\n                    vertical: true,\n                    align: options.align,\n                    wrap: false\n                });\n                var textOptions = deepExtend({}, options, {\n                    opacity: 1,\n                    animation: null\n                });\n                this.container = floatElement;\n                this.append(floatElement);\n                for (var rowIdx = 0; rowIdx < rows.length; rowIdx++) {\n                    var text = new Text(rows[rowIdx].trim(), textOptions);\n                    floatElement.append(text);\n                }\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var visualFn = options.visual;\n                this.container.options.align = options.align;\n                if (visualFn && !this._boxReflow) {\n                    var visualBox = targetBox;\n                    if (!visualBox.hasSize()) {\n                        this._boxReflow = true;\n                        this.reflow(visualBox);\n                        this._boxReflow = false;\n                        visualBox = this.box;\n                    }\n                    var visual = this.visual = visualFn(this.visualContext(visualBox));\n                    if (visual) {\n                        visualBox = rectToBox(visual.clippedBBox() || new Rect());\n                        visual.options.zIndex = options.zIndex;\n                    }\n                    this.box = this.contentBox = this.paddingBox = visualBox;\n                } else {\n                    BoxElement.fn.reflow.call(this, targetBox);\n                    if (options.rotation) {\n                        var margin = getSpacing(options.margin);\n                        var box = this.box.unpad(margin);\n                        this.targetBox = targetBox;\n                        this.normalBox = box.clone();\n                        box = this.rotate();\n                        box.translate(margin.left - margin.right, margin.top - margin.bottom);\n                        this.rotatedBox = box.clone();\n                        box.pad(margin);\n                    }\n                }\n            },\n            createVisual: function () {\n                var options = this.options;\n                this.visual = new Group({\n                    transform: this.rotationTransform(),\n                    zIndex: options.zIndex,\n                    noclip: options.noclip\n                });\n                if (this.hasBox()) {\n                    var box = Path.fromRect(this.paddingBox.toRect(), this.visualStyle());\n                    this.visual.append(box);\n                }\n            },\n            renderVisual: function () {\n                if (!this.options.visible) {\n                    return;\n                }\n                if (this.options.visual) {\n                    var visual = this.visual;\n                    if (visual && !defined(visual.options.noclip)) {\n                        visual.options.noclip = this.options.noclip;\n                    }\n                    this.addVisual();\n                    this.createAnimation();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            },\n            visualContext: function (targetBox) {\n                var this$1 = this;\n                var context = {\n                    text: this.content,\n                    rect: targetBox.toRect(),\n                    sender: this.getSender(),\n                    options: this.options,\n                    createVisual: function () {\n                        this$1._boxReflow = true;\n                        this$1.reflow(targetBox);\n                        this$1._boxReflow = false;\n                        return this$1.getDefaultVisual();\n                    }\n                };\n                if (this.data) {\n                    $.extend(context, this.data);\n                }\n                return context;\n            },\n            getDefaultVisual: function () {\n                this.createVisual();\n                this.renderChildren();\n                var visual = this.visual;\n                delete this.visual;\n                return visual;\n            },\n            rotate: function () {\n                var options = this.options;\n                this.box.rotate(options.rotation);\n                this.align(this.targetBox, X, options.align);\n                this.align(this.targetBox, Y, options.vAlign);\n                return this.box;\n            },\n            rotationTransform: function () {\n                var rotation = this.options.rotation;\n                if (!rotation) {\n                    return null;\n                }\n                var ref = this.normalBox.center();\n                var cx = ref.x;\n                var cy = ref.y;\n                var boxCenter = this.rotatedBox.center();\n                return geometryTransform().translate(boxCenter.x - cx, boxCenter.y - cy).rotate(rotation, [\n                    cx,\n                    cy\n                ]);\n            }\n        });\n        var Title = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.append(new TextBox(this.options.text, $.extend({}, this.options, { vAlign: this.options.position })));\n            },\n            reflow: function (targetBox) {\n                ChartElement.fn.reflow.call(this, targetBox);\n                this.box.snapTo(targetBox, X);\n            }\n        });\n        Title.buildTitle = function (options, parent, defaultOptions) {\n            var titleOptions = options;\n            if (typeof options === 'string') {\n                titleOptions = { text: options };\n            }\n            titleOptions = $.extend({ visible: true }, defaultOptions, titleOptions);\n            var title;\n            if (titleOptions && titleOptions.visible && titleOptions.text) {\n                title = new Title(titleOptions);\n                parent.append(title);\n            }\n            return title;\n        };\n        setDefaultOptions(Title, {\n            color: BLACK,\n            position: TOP,\n            align: CENTER,\n            margin: getSpacing(5),\n            padding: getSpacing(5)\n        });\n        var AxisLabel = TextBox.extend({\n            init: function (value, text, index, dataItem, options) {\n                TextBox.fn.init.call(this, text, options);\n                this.text = text;\n                this.value = value;\n                this.index = index;\n                this.dataItem = dataItem;\n                this.reflow(new Box());\n            },\n            visualContext: function (targetBox) {\n                var context = TextBox.fn.visualContext.call(this, targetBox);\n                context.value = this.value;\n                context.dataItem = this.dataItem;\n                context.format = this.options.format;\n                context.culture = this.options.culture;\n                return context;\n            },\n            click: function (widget, e) {\n                widget.trigger(AXIS_LABEL_CLICK, {\n                    element: eventElement(e),\n                    value: this.value,\n                    text: this.text,\n                    index: this.index,\n                    dataItem: this.dataItem,\n                    axis: this.parent.options\n                });\n            },\n            rotate: function () {\n                if (this.options.alignRotation !== CENTER) {\n                    var box = this.normalBox.toRect();\n                    var transform = this.rotationTransform();\n                    this.box = rectToBox(box.bbox(transform.matrix()));\n                } else {\n                    TextBox.fn.rotate.call(this);\n                }\n                return this.box;\n            },\n            rotationTransform: function () {\n                var options = this.options;\n                var rotation = options.rotation;\n                if (!rotation) {\n                    return null;\n                }\n                if (options.alignRotation === CENTER) {\n                    return TextBox.fn.rotationTransform.call(this);\n                }\n                var rotationMatrix = geometryTransform().rotate(rotation).matrix();\n                var box = this.normalBox.toRect();\n                var rect = this.targetBox.toRect();\n                var rotationOrigin = options.rotationOrigin || TOP;\n                var alignAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? X : Y;\n                var distanceAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? Y : X;\n                var axisAnchor = rotationOrigin === TOP || rotationOrigin === LEFT ? rect.origin : rect.bottomRight();\n                var topLeft = box.topLeft().transformCopy(rotationMatrix);\n                var topRight = box.topRight().transformCopy(rotationMatrix);\n                var bottomRight = box.bottomRight().transformCopy(rotationMatrix);\n                var bottomLeft = box.bottomLeft().transformCopy(rotationMatrix);\n                var rotatedBox = Rect.fromPoints(topLeft, topRight, bottomRight, bottomLeft);\n                var translate = {};\n                translate[distanceAxis] = rect.origin[distanceAxis] - rotatedBox.origin[distanceAxis];\n                var distanceLeft = Math.abs(topLeft[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n                var distanceRight = Math.abs(topRight[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n                var alignStart, alignEnd;\n                if (round(distanceLeft, DEFAULT_PRECISION) === round(distanceRight, DEFAULT_PRECISION)) {\n                    alignStart = topLeft;\n                    alignEnd = topRight;\n                } else if (distanceRight < distanceLeft) {\n                    alignStart = topRight;\n                    alignEnd = bottomRight;\n                } else {\n                    alignStart = topLeft;\n                    alignEnd = bottomLeft;\n                }\n                var alignCenter = alignStart[alignAxis] + (alignEnd[alignAxis] - alignStart[alignAxis]) / 2;\n                translate[alignAxis] = rect.center()[alignAxis] - alignCenter;\n                return geometryTransform().translate(translate.x, translate.y).rotate(rotation);\n            }\n        });\n        setDefaultOptions(AxisLabel, { _autoReflow: false });\n        var DEFAULT_ICON_SIZE = 7;\n        var DEFAULT_LABEL_COLOR = '#fff';\n        var Note = BoxElement.extend({\n            init: function (fields, options, chartService) {\n                BoxElement.fn.init.call(this, options);\n                this.fields = fields;\n                this.chartService = chartService;\n                this.render();\n            },\n            hide: function () {\n                this.options.visible = false;\n            },\n            show: function () {\n                this.options.visible = true;\n            },\n            render: function () {\n                var this$1 = this;\n                var options = this.options;\n                if (options.visible) {\n                    var label = options.label;\n                    var icon = options.icon;\n                    var box = new Box();\n                    var childAlias = function () {\n                        return this$1;\n                    };\n                    var size = icon.size;\n                    var text = this.fields.text;\n                    var width, height;\n                    if (defined(label) && label.visible) {\n                        var noteTemplate = getTemplate(label);\n                        if (noteTemplate) {\n                            text = noteTemplate(this.fields);\n                        } else if (label.format) {\n                            text = this.chartService.format.auto(label.format, text);\n                        }\n                        if (!label.color) {\n                            label.color = label.position === INSIDE ? DEFAULT_LABEL_COLOR : icon.background;\n                        }\n                        this.label = new TextBox(text, deepExtend({}, label));\n                        this.label.aliasFor = childAlias;\n                        if (label.position === INSIDE && !defined(size)) {\n                            if (icon.type === CIRCLE) {\n                                size = Math.max(this.label.box.width(), this.label.box.height());\n                            } else {\n                                width = this.label.box.width();\n                                height = this.label.box.height();\n                            }\n                            box.wrap(this.label.box);\n                        }\n                    }\n                    icon.width = width || size || DEFAULT_ICON_SIZE;\n                    icon.height = height || size || DEFAULT_ICON_SIZE;\n                    var marker = new ShapeElement(deepExtend({}, icon));\n                    marker.aliasFor = childAlias;\n                    this.marker = marker;\n                    this.append(marker);\n                    if (this.label) {\n                        this.append(this.label);\n                    }\n                    marker.reflow(new Box());\n                    this.wrapperBox = box.wrap(marker.box);\n                }\n            },\n            reflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var label = ref.label;\n                var marker = ref.marker;\n                var wrapperBox = ref.wrapperBox;\n                var center = targetBox.center();\n                var length = options.line.length;\n                var position = options.position;\n                if (options.visible) {\n                    var lineStart, box, contentBox;\n                    if (inArray(position, [\n                            LEFT,\n                            RIGHT\n                        ])) {\n                        if (position === LEFT) {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(-length, targetBox.center().y - wrapperBox.center().y);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    targetBox.x1,\n                                    center.y\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        contentBox.x2,\n                                        center.y\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        } else {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(length, targetBox.center().y - wrapperBox.center().y);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    targetBox.x2,\n                                    center.y\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        contentBox.x1,\n                                        center.y\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        }\n                    } else {\n                        if (position === BOTTOM) {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, length);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    center.x,\n                                    targetBox.y2\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        center.x,\n                                        contentBox.y1\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        } else {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, -length);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    center.x,\n                                    targetBox.y1\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        center.x,\n                                        contentBox.y2\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        }\n                    }\n                    if (marker) {\n                        marker.reflow(contentBox);\n                    }\n                    if (label) {\n                        label.reflow(contentBox);\n                        if (marker) {\n                            if (options.label.position === OUTSIDE) {\n                                label.box.alignTo(marker.box, position);\n                            }\n                            label.reflow(label.box);\n                        }\n                    }\n                    this.contentBox = contentBox;\n                    this.targetBox = targetBox;\n                    this.box = box || contentBox;\n                }\n            },\n            createVisual: function () {\n                BoxElement.fn.createVisual.call(this);\n                this.visual.options.noclip = this.options.noclip;\n                if (this.options.visible) {\n                    this.createLine();\n                }\n            },\n            renderVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var customVisual = options.visual;\n                if (options.visible && customVisual) {\n                    this.visual = customVisual($.extend(this.fields, {\n                        sender: this.getSender(),\n                        rect: this.targetBox.toRect(),\n                        options: {\n                            background: options.background,\n                            border: options.background,\n                            icon: options.icon,\n                            label: options.label,\n                            line: options.line,\n                            position: options.position,\n                            visible: options.visible\n                        },\n                        createVisual: function () {\n                            this$1.createVisual();\n                            this$1.renderChildren();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    }));\n                    this.addVisual();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            },\n            createLine: function () {\n                var options = this.options.line;\n                if (this.linePoints) {\n                    var path = Path.fromPoints(this.linePoints, {\n                        stroke: {\n                            color: options.color,\n                            width: options.width,\n                            dashType: options.dashType\n                        }\n                    });\n                    alignPathToPixel(path);\n                    this.visual.append(path);\n                }\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(NOTE_CLICK, args)) {\n                    e.preventDefault();\n                }\n            },\n            over: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(NOTE_HOVER, args)) {\n                    e.preventDefault();\n                }\n            },\n            out: function (widget, e) {\n                var args = this.eventArgs(e);\n                widget.trigger(NOTE_LEAVE, args);\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return $.extend(this.fields, {\n                    element: eventElement(e),\n                    text: defined(options.label) ? options.label.text : '',\n                    visual: this.visual\n                });\n            }\n        });\n        setDefaultOptions(Note, {\n            icon: {\n                visible: true,\n                type: CIRCLE\n            },\n            label: {\n                position: INSIDE,\n                visible: true,\n                align: CENTER,\n                vAlign: CENTER\n            },\n            line: { visible: true },\n            visible: true,\n            position: TOP,\n            zIndex: 2\n        });\n        function createAxisTick(options, tickOptions) {\n            var tickX = options.tickX;\n            var tickY = options.tickY;\n            var position = options.position;\n            var tick = new Path({\n                stroke: {\n                    width: tickOptions.width,\n                    color: tickOptions.color\n                }\n            });\n            if (options.vertical) {\n                tick.moveTo(tickX, position).lineTo(tickX + tickOptions.size, position);\n            } else {\n                tick.moveTo(position, tickY).lineTo(position, tickY + tickOptions.size);\n            }\n            alignPathToPixel(tick);\n            return tick;\n        }\n        function createAxisGridLine(options, gridLine) {\n            var lineStart = options.lineStart;\n            var lineEnd = options.lineEnd;\n            var position = options.position;\n            var line = new Path({\n                stroke: {\n                    width: gridLine.width,\n                    color: gridLine.color,\n                    dashType: gridLine.dashType\n                }\n            });\n            if (options.vertical) {\n                line.moveTo(lineStart, position).lineTo(lineEnd, position);\n            } else {\n                line.moveTo(position, lineStart).lineTo(position, lineEnd);\n            }\n            alignPathToPixel(line);\n            return line;\n        }\n        var Axis = ChartElement.extend({\n            init: function (options, chartService) {\n                if (chartService === void 0) {\n                    chartService = new ChartService();\n                }\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n                if (!this.options.visible) {\n                    this.options = deepExtend({}, this.options, {\n                        labels: { visible: false },\n                        line: { visible: false },\n                        margin: 0,\n                        majorTickSize: 0,\n                        minorTickSize: 0\n                    });\n                }\n                this.options.minorTicks = deepExtend({}, {\n                    color: this.options.line.color,\n                    width: this.options.line.width,\n                    visible: this.options.minorTickType !== NONE\n                }, this.options.minorTicks, {\n                    size: this.options.minorTickSize,\n                    align: this.options.minorTickType\n                });\n                this.options.majorTicks = deepExtend({}, {\n                    color: this.options.line.color,\n                    width: this.options.line.width,\n                    visible: this.options.majorTickType !== NONE\n                }, this.options.majorTicks, {\n                    size: this.options.majorTickSize,\n                    align: this.options.majorTickType\n                });\n                this.initFields();\n                if (!this.options._deferLabels) {\n                    this.createLabels();\n                }\n                this.createTitle();\n                this.createNotes();\n            },\n            initFields: function () {\n            },\n            labelsRange: function () {\n                return {\n                    min: this.options.labels.skip,\n                    max: this.labelsCount()\n                };\n            },\n            createLabels: function () {\n                var this$1 = this;\n                var options = this.options;\n                var align = options.vertical ? RIGHT : CENTER;\n                var labelOptions = deepExtend({}, options.labels, {\n                    align: align,\n                    zIndex: options.zIndex\n                });\n                var step = Math.max(1, labelOptions.step);\n                this.clearLabels();\n                if (labelOptions.visible) {\n                    var range = this.labelsRange();\n                    var rotation = labelOptions.rotation;\n                    if (isObject(rotation)) {\n                        labelOptions.alignRotation = rotation.align;\n                        labelOptions.rotation = rotation.angle;\n                    }\n                    if (labelOptions.rotation === 'auto') {\n                        labelOptions.rotation = 0;\n                        options.autoRotateLabels = true;\n                    }\n                    for (var idx = range.min; idx < range.max; idx += step) {\n                        var label = this$1.createAxisLabel(idx, labelOptions);\n                        if (label) {\n                            this$1.append(label);\n                            this$1.labels.push(label);\n                        }\n                    }\n                }\n            },\n            clearLabels: function () {\n                this.children = grep(this.children, function (child) {\n                    return !(child instanceof AxisLabel);\n                });\n                this.labels = [];\n            },\n            clearTitle: function () {\n                var this$1 = this;\n                if (this.title) {\n                    this.children = grep(this.children, function (child) {\n                        return child !== this$1.title;\n                    });\n                    this.title = undefined;\n                }\n            },\n            clear: function () {\n                this.clearLabels();\n                this.clearTitle();\n            },\n            lineBox: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var axisX = mirror ? box.x1 : box.x2;\n                var axisY = mirror ? box.y2 : box.y1;\n                var lineWidth = options.line.width || 0;\n                return vertical ? new Box(axisX, box.y1, axisX, box.y2 - lineWidth) : new Box(box.x1, axisY, box.x2 - lineWidth, axisY);\n            },\n            createTitle: function () {\n                var options = this.options;\n                var titleOptions = deepExtend({\n                    rotation: options.vertical ? -90 : 0,\n                    text: '',\n                    zIndex: 1,\n                    visualSize: true\n                }, options.title);\n                if (titleOptions.visible && titleOptions.text) {\n                    var title = new TextBox(titleOptions.text, titleOptions);\n                    this.append(title);\n                    this.title = title;\n                }\n            },\n            createNotes: function () {\n                var this$1 = this;\n                var options = this.options;\n                var notes = options.notes;\n                var items = notes.data || [];\n                this.notes = [];\n                for (var i = 0; i < items.length; i++) {\n                    var item = deepExtend({}, notes, items[i]);\n                    item.value = this$1.parseNoteValue(item.value);\n                    var note = new Note({\n                        value: item.value,\n                        text: item.label.text,\n                        dataItem: item\n                    }, item, this$1.chartService);\n                    if (note.options.visible) {\n                        if (defined(note.options.position)) {\n                            if (options.vertical && !inArray(note.options.position, [\n                                    LEFT,\n                                    RIGHT\n                                ])) {\n                                note.options.position = options.reverse ? LEFT : RIGHT;\n                            } else if (!options.vertical && !inArray(note.options.position, [\n                                    TOP,\n                                    BOTTOM\n                                ])) {\n                                note.options.position = options.reverse ? BOTTOM : TOP;\n                            }\n                        } else {\n                            if (options.vertical) {\n                                note.options.position = options.reverse ? LEFT : RIGHT;\n                            } else {\n                                note.options.position = options.reverse ? BOTTOM : TOP;\n                            }\n                        }\n                        this$1.append(note);\n                        this$1.notes.push(note);\n                    }\n                }\n            },\n            parseNoteValue: function (value) {\n                return value;\n            },\n            renderVisual: function () {\n                ChartElement.fn.renderVisual.call(this);\n                this.createPlotBands();\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this.createBackground();\n                this.createLine();\n            },\n            gridLinesVisual: function () {\n                var gridLines = this._gridLines;\n                if (!gridLines) {\n                    gridLines = this._gridLines = new Group({ zIndex: -2 });\n                    this.appendVisual(this._gridLines);\n                }\n                return gridLines;\n            },\n            createTicks: function (lineGroup) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var mirror = options.labels.mirror;\n                var majorUnit = options.majorTicks.visible ? options.majorUnit : 0;\n                var tickLineOptions = { vertical: options.vertical };\n                function render(tickPositions, tickOptions, skipUnit) {\n                    var count = tickPositions.length;\n                    var step = Math.max(1, tickOptions.step);\n                    if (tickOptions.visible) {\n                        for (var i = tickOptions.skip; i < count; i += step) {\n                            if (defined(skipUnit) && i % skipUnit === 0) {\n                                continue;\n                            }\n                            tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                            tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                            tickLineOptions.position = tickPositions[i];\n                            lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n                        }\n                    }\n                }\n                render(this.getMajorTickPositions(), options.majorTicks);\n                render(this.getMinorTickPositions(), options.minorTicks, majorUnit / options.minorUnit);\n            },\n            createLine: function () {\n                var options = this.options;\n                var line = options.line;\n                var lineBox = this.lineBox();\n                if (line.width > 0 && line.visible) {\n                    var path = new Path({\n                        stroke: {\n                            width: line.width,\n                            color: line.color,\n                            dashType: line.dashType\n                        }\n                    });\n                    path.moveTo(lineBox.x1, lineBox.y1).lineTo(lineBox.x2, lineBox.y2);\n                    if (options._alignLines) {\n                        alignPathToPixel(path);\n                    }\n                    var group = this._lineGroup = new Group();\n                    group.append(path);\n                    this.visual.append(group);\n                    this.createTicks(group);\n                }\n            },\n            getActualTickSize: function () {\n                var options = this.options;\n                var tickSize = 0;\n                if (options.majorTicks.visible && options.minorTicks.visible) {\n                    tickSize = Math.max(options.majorTicks.size, options.minorTicks.size);\n                } else if (options.majorTicks.visible) {\n                    tickSize = options.majorTicks.size;\n                } else if (options.minorTicks.visible) {\n                    tickSize = options.minorTicks.size;\n                }\n                return tickSize;\n            },\n            createBackground: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var background = options.background;\n                if (background) {\n                    this._backgroundPath = Path.fromRect(box.toRect(), {\n                        fill: { color: background },\n                        stroke: null\n                    });\n                    this.visual.append(this._backgroundPath);\n                }\n            },\n            createPlotBands: function () {\n                var this$1 = this;\n                var options = this.options;\n                var plotBands = options.plotBands || [];\n                var vertical = options.vertical;\n                var plotArea = this.plotArea;\n                if (plotBands.length === 0) {\n                    return;\n                }\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                var altAxis = grep(this.pane.axes, function (axis) {\n                    return axis.options.vertical !== this$1.options.vertical;\n                })[0];\n                for (var idx = 0; idx < plotBands.length; idx++) {\n                    var item = plotBands[idx];\n                    var slotX = void 0, slotY = void 0;\n                    if (vertical) {\n                        slotX = (altAxis || plotArea.axisX).lineBox();\n                        slotY = this$1.getSlot(item.from, item.to, true);\n                    } else {\n                        slotX = this$1.getSlot(item.from, item.to, true);\n                        slotY = (altAxis || plotArea.axisY).lineBox();\n                    }\n                    if (slotX.width() !== 0 && slotY.height() !== 0) {\n                        var bandRect = new Rect([\n                            slotX.x1,\n                            slotY.y1\n                        ], [\n                            slotX.width(),\n                            slotY.height()\n                        ]);\n                        var path = Path.fromRect(bandRect, {\n                            fill: {\n                                color: item.color,\n                                opacity: item.opacity\n                            },\n                            stroke: null\n                        });\n                        group.append(path);\n                    }\n                }\n                this.appendVisual(group);\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var minorUnit = options.minorUnit;\n                var vertical = options.vertical;\n                var axisLineVisible = altAxis.options.line.visible;\n                var majorUnit = majorGridLines.visible ? options.majorUnit : 0;\n                var lineBox = altAxis.lineBox();\n                var linePos = lineBox[vertical ? 'y1' : 'x1'];\n                var lineOptions = {\n                    lineStart: lineBox[vertical ? 'x1' : 'y1'],\n                    lineEnd: lineBox[vertical ? 'x2' : 'y2'],\n                    vertical: vertical\n                };\n                var majorTicks = [];\n                var container = this.gridLinesVisual();\n                function render(tickPositions, gridLine, skipUnit) {\n                    var count = tickPositions.length;\n                    var step = Math.max(1, gridLine.step);\n                    if (gridLine.visible) {\n                        for (var i = gridLine.skip; i < count; i += step) {\n                            var pos = round(tickPositions[i]);\n                            if (!inArray(pos, majorTicks)) {\n                                if (i % skipUnit !== 0 && (!axisLineVisible || linePos !== pos)) {\n                                    lineOptions.position = pos;\n                                    container.append(createAxisGridLine(lineOptions, gridLine));\n                                    majorTicks.push(pos);\n                                }\n                            }\n                        }\n                    }\n                }\n                render(this.getMajorTickPositions(), majorGridLines);\n                render(this.getMinorTickPositions(), minorGridLines, majorUnit / minorUnit);\n                return container.children;\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var title = ref.title;\n                var vertical = options.vertical;\n                var count = labels.length;\n                var sizeFn = vertical ? WIDTH : HEIGHT;\n                var titleSize = title ? title.box[sizeFn]() : 0;\n                var space = this.getActualTickSize() + options.margin + titleSize;\n                var rootBox = (this.getRoot() || {}).box || box;\n                var boxSize = rootBox[sizeFn]();\n                var maxLabelSize = 0;\n                for (var i = 0; i < count; i++) {\n                    var labelSize = labels[i].box[sizeFn]();\n                    if (labelSize + space <= boxSize) {\n                        maxLabelSize = Math.max(maxLabelSize, labelSize);\n                    }\n                }\n                if (vertical) {\n                    this.box = new Box(box.x1, box.y1, box.x1 + maxLabelSize + space, box.y2);\n                } else {\n                    this.box = new Box(box.x1, box.y1, box.x2, box.y1 + maxLabelSize + space);\n                }\n                this.arrangeTitle();\n                this.arrangeLabels();\n                this.arrangeNotes();\n            },\n            getLabelsTickPositions: function () {\n                return this.getMajorTickPositions();\n            },\n            labelTickIndex: function (label) {\n                return label.index;\n            },\n            arrangeLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var labelsBetweenTicks = this.labelsBetweenTicks();\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var mirror = options.labels.mirror;\n                var tickPositions = this.getLabelsTickPositions();\n                var labelOffset = this.getActualTickSize() + options.margin;\n                for (var idx = 0; idx < labels.length; idx++) {\n                    var label = labels[idx];\n                    var tickIx = this$1.labelTickIndex(label);\n                    var labelSize = vertical ? label.box.height() : label.box.width();\n                    var labelPos = tickPositions[tickIx] - labelSize / 2;\n                    var labelBox = void 0, firstTickPosition = void 0, nextTickPosition = void 0;\n                    if (vertical) {\n                        if (labelsBetweenTicks) {\n                            firstTickPosition = tickPositions[tickIx];\n                            nextTickPosition = tickPositions[tickIx + 1];\n                            var middle = firstTickPosition + (nextTickPosition - firstTickPosition) / 2;\n                            labelPos = middle - labelSize / 2;\n                        }\n                        var labelX = lineBox.x2;\n                        if (mirror) {\n                            labelX += labelOffset;\n                            label.options.rotationOrigin = LEFT;\n                        } else {\n                            labelX -= labelOffset + label.box.width();\n                            label.options.rotationOrigin = RIGHT;\n                        }\n                        labelBox = label.box.move(labelX, labelPos);\n                    } else {\n                        if (labelsBetweenTicks) {\n                            firstTickPosition = tickPositions[tickIx];\n                            nextTickPosition = tickPositions[tickIx + 1];\n                        } else {\n                            firstTickPosition = labelPos;\n                            nextTickPosition = labelPos + labelSize;\n                        }\n                        var labelY = lineBox.y1;\n                        if (mirror) {\n                            labelY -= labelOffset + label.box.height();\n                            label.options.rotationOrigin = BOTTOM;\n                        } else {\n                            labelY += labelOffset;\n                            label.options.rotationOrigin = TOP;\n                        }\n                        labelBox = new Box(firstTickPosition, labelY, nextTickPosition, labelY + label.box.height());\n                    }\n                    label.reflow(labelBox);\n                }\n            },\n            autoRotateLabels: function () {\n                if (this.options.autoRotateLabels && !this.options.vertical) {\n                    var tickPositions = this.getMajorTickPositions();\n                    var labels = this.labels;\n                    var angle;\n                    for (var idx = 0; idx < labels.length; idx++) {\n                        var width = Math.abs(tickPositions[idx + 1] - tickPositions[idx]);\n                        var labelBox = labels[idx].box;\n                        if (labelBox.width() > width) {\n                            if (labelBox.height() > width) {\n                                angle = -90;\n                                break;\n                            }\n                            angle = -45;\n                        }\n                    }\n                    if (angle) {\n                        for (var idx$1 = 0; idx$1 < labels.length; idx$1++) {\n                            labels[idx$1].options.rotation = angle;\n                            labels[idx$1].reflow(new Box());\n                        }\n                        return true;\n                    }\n                }\n            },\n            arrangeTitle: function () {\n                var ref = this;\n                var options = ref.options;\n                var title = ref.title;\n                var mirror = options.labels.mirror;\n                var vertical = options.vertical;\n                if (title) {\n                    if (vertical) {\n                        title.options.align = mirror ? RIGHT : LEFT;\n                        title.options.vAlign = title.options.position;\n                    } else {\n                        title.options.align = title.options.position;\n                        title.options.vAlign = mirror ? TOP : BOTTOM;\n                    }\n                    title.reflow(this.box);\n                }\n            },\n            arrangeNotes: function () {\n                var this$1 = this;\n                for (var idx = 0; idx < this.notes.length; idx++) {\n                    var item = this$1.notes[idx];\n                    var value = item.options.value;\n                    var slot = void 0;\n                    if (defined(value)) {\n                        if (this$1.shouldRenderNote(value)) {\n                            item.show();\n                        } else {\n                            item.hide();\n                        }\n                        slot = this$1.noteSlot(value);\n                    } else {\n                        item.hide();\n                    }\n                    item.reflow(slot || this$1.lineBox());\n                }\n            },\n            noteSlot: function (value) {\n                return this.getSlot(value);\n            },\n            alignTo: function (secondAxis) {\n                var lineBox = secondAxis.lineBox();\n                var vertical = this.options.vertical;\n                var pos = vertical ? Y : X;\n                this.box.snapTo(lineBox, pos);\n                if (vertical) {\n                    this.box.shrink(0, this.lineBox().height() - lineBox.height());\n                } else {\n                    this.box.shrink(this.lineBox().width() - lineBox.width(), 0);\n                }\n                this.box[pos + 1] -= this.lineBox()[pos + 1] - lineBox[pos + 1];\n                this.box[pos + 2] -= this.lineBox()[pos + 2] - lineBox[pos + 2];\n            },\n            axisLabelText: function (value, dataItem, options) {\n                var tmpl = getTemplate(options);\n                var text = value;\n                if (tmpl) {\n                    text = tmpl({\n                        value: value,\n                        dataItem: dataItem,\n                        format: options.format,\n                        culture: options.culture\n                    });\n                } else if (options.format) {\n                    text = this.chartService.format.localeAuto(options.format, [value], options.culture);\n                }\n                return text;\n            },\n            slot: function (from, to, limit) {\n                var slot = this.getSlot(from, to, limit);\n                if (slot) {\n                    return slot.toRect();\n                }\n            },\n            contentBox: function () {\n                var box = this.box.clone();\n                var labels = this.labels;\n                if (labels.length) {\n                    var axis = this.options.vertical ? Y : X;\n                    if (this.chartService.isPannable(axis)) {\n                        var offset = this.maxLabelOffset();\n                        box[axis + 1] -= offset.start;\n                        box[axis + 2] += offset.end;\n                    } else {\n                        if (labels[0].options.visible) {\n                            box.wrap(labels[0].box);\n                        }\n                        var lastLabel = labels[labels.length - 1];\n                        if (lastLabel.options.visible) {\n                            box.wrap(lastLabel.box);\n                        }\n                    }\n                }\n                return box;\n            },\n            maxLabelOffset: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var reverse = ref.reverse;\n                var labelsBetweenTicks = this.labelsBetweenTicks();\n                var tickPositions = this.getLabelsTickPositions();\n                var offsetField = vertical ? Y : X;\n                var labels = this.labels;\n                var startPosition = reverse ? 1 : 0;\n                var endPosition = reverse ? 0 : 1;\n                var maxStartOffset = 0;\n                var maxEndOffset = 0;\n                for (var idx = 0; idx < labels.length; idx++) {\n                    var label = labels[idx];\n                    var tickIx = this$1.labelTickIndex(label);\n                    var startTick = void 0, endTick = void 0;\n                    if (labelsBetweenTicks) {\n                        startTick = tickPositions[tickIx + startPosition];\n                        endTick = tickPositions[tickIx + endPosition];\n                    } else {\n                        startTick = endTick = tickPositions[tickIx];\n                    }\n                    maxStartOffset = Math.max(maxStartOffset, startTick - label.box[offsetField + 1]);\n                    maxEndOffset = Math.max(maxEndOffset, label.box[offsetField + 2] - endTick);\n                }\n                return {\n                    start: maxStartOffset,\n                    end: maxEndOffset\n                };\n            },\n            limitRange: function (from, to, min, max, offset) {\n                var options = this.options;\n                if (from < min && offset < 0 && (!defined(options.min) || options.min <= min) || max < to && offset > 0 && (!defined(options.max) || max <= options.max)) {\n                    return null;\n                }\n                if (to < min && offset > 0 || max < from && offset < 0) {\n                    return {\n                        min: from,\n                        max: to\n                    };\n                }\n                var rangeSize = to - from;\n                var minValue = from;\n                var maxValue = to;\n                if (from < min && offset < 0) {\n                    minValue = limitValue(from, min, max);\n                    maxValue = limitValue(from + rangeSize, min + rangeSize, max);\n                } else if (to > max && offset > 0) {\n                    maxValue = limitValue(to, min, max);\n                    minValue = limitValue(to - rangeSize, min, max - rangeSize);\n                }\n                return {\n                    min: minValue,\n                    max: maxValue\n                };\n            },\n            valueRange: function () {\n                return {\n                    min: this.seriesMin,\n                    max: this.seriesMax\n                };\n            },\n            labelsBetweenTicks: function () {\n                return !this.options.justified;\n            },\n            prepareUserOptions: function () {\n            }\n        });\n        setDefaultOptions(Axis, {\n            labels: {\n                visible: true,\n                rotation: 0,\n                mirror: false,\n                step: 1,\n                skip: 0\n            },\n            line: {\n                width: 1,\n                color: BLACK,\n                visible: true\n            },\n            title: {\n                visible: true,\n                position: CENTER\n            },\n            majorTicks: {\n                align: OUTSIDE,\n                size: 4,\n                skip: 0,\n                step: 1\n            },\n            minorTicks: {\n                align: OUTSIDE,\n                size: 3,\n                skip: 0,\n                step: 1\n            },\n            axisCrossingValue: 0,\n            majorTickType: OUTSIDE,\n            minorTickType: NONE,\n            majorGridLines: {\n                skip: 0,\n                step: 1\n            },\n            minorGridLines: {\n                visible: false,\n                width: 1,\n                color: BLACK,\n                skip: 0,\n                step: 1\n            },\n            margin: 5,\n            visible: true,\n            reverse: false,\n            justified: true,\n            notes: { label: { text: '' } },\n            _alignLines: true,\n            _deferLabels: false\n        });\n        var MILLISECONDS = 'milliseconds';\n        var SECONDS = 'seconds';\n        var MINUTES = 'minutes';\n        var HOURS = 'hours';\n        var DAYS = 'days';\n        var WEEKS = 'weeks';\n        var MONTHS = 'months';\n        var YEARS = 'years';\n        var TIME_PER_MILLISECOND = 1;\n        var TIME_PER_SECOND = 1000;\n        var TIME_PER_MINUTE = 60 * TIME_PER_SECOND;\n        var TIME_PER_HOUR = 60 * TIME_PER_MINUTE;\n        var TIME_PER_DAY = 24 * TIME_PER_HOUR;\n        var TIME_PER_WEEK = 7 * TIME_PER_DAY;\n        var TIME_PER_MONTH = 31 * TIME_PER_DAY;\n        var TIME_PER_YEAR = 365 * TIME_PER_DAY;\n        var TIME_PER_UNIT = {\n            'years': TIME_PER_YEAR,\n            'months': TIME_PER_MONTH,\n            'weeks': TIME_PER_WEEK,\n            'days': TIME_PER_DAY,\n            'hours': TIME_PER_HOUR,\n            'minutes': TIME_PER_MINUTE,\n            'seconds': TIME_PER_SECOND,\n            'milliseconds': TIME_PER_MILLISECOND\n        };\n        function absoluteDateDiff(a, b) {\n            var diff = a.getTime() - b;\n            var offsetDiff = a.getTimezoneOffset() - b.getTimezoneOffset();\n            return diff - offsetDiff * TIME_PER_MINUTE;\n        }\n        function addTicks(date, ticks) {\n            return new Date(date.getTime() + ticks);\n        }\n        function toDate(value) {\n            var result;\n            if (value instanceof Date) {\n                result = value;\n            } else if (value) {\n                result = new Date(value);\n            }\n            return result;\n        }\n        function startOfWeek(date, weekStartDay) {\n            if (weekStartDay === void 0) {\n                weekStartDay = 0;\n            }\n            var daysToSubtract = 0;\n            var day = date.getDay();\n            if (!isNaN(day)) {\n                while (day !== weekStartDay) {\n                    if (day === 0) {\n                        day = 6;\n                    } else {\n                        day--;\n                    }\n                    daysToSubtract++;\n                }\n            }\n            return addTicks(date, -daysToSubtract * TIME_PER_DAY);\n        }\n        function adjustDST(date, hours) {\n            if (hours === 0 && date.getHours() === 23) {\n                date.setHours(date.getHours() + 2);\n                return true;\n            }\n            return false;\n        }\n        function addHours(date, hours) {\n            var roundedDate = new Date(date);\n            roundedDate.setMinutes(0, 0, 0);\n            var tzDiff = (date.getTimezoneOffset() - roundedDate.getTimezoneOffset()) * TIME_PER_MINUTE;\n            return addTicks(roundedDate, tzDiff + hours * TIME_PER_HOUR);\n        }\n        function addDuration(dateValue, value, unit, weekStartDay) {\n            var result = dateValue;\n            if (dateValue) {\n                var date = toDate(dateValue);\n                var hours = date.getHours();\n                if (unit === YEARS) {\n                    result = new Date(date.getFullYear() + value, 0, 1);\n                    adjustDST(result, 0);\n                } else if (unit === MONTHS) {\n                    result = new Date(date.getFullYear(), date.getMonth() + value, 1);\n                    adjustDST(result, hours);\n                } else if (unit === WEEKS) {\n                    result = addDuration(startOfWeek(date, weekStartDay), value * 7, DAYS);\n                    adjustDST(result, hours);\n                } else if (unit === DAYS) {\n                    result = new Date(date.getFullYear(), date.getMonth(), date.getDate() + value);\n                    adjustDST(result, hours);\n                } else if (unit === HOURS) {\n                    result = addHours(date, value);\n                } else if (unit === MINUTES) {\n                    result = addTicks(date, value * TIME_PER_MINUTE);\n                    if (result.getSeconds() > 0) {\n                        result.setSeconds(0);\n                    }\n                } else if (unit === SECONDS) {\n                    result = addTicks(date, value * TIME_PER_SECOND);\n                } else if (unit === MILLISECONDS) {\n                    result = addTicks(date, value);\n                }\n                if (unit !== MILLISECONDS && result.getMilliseconds() > 0) {\n                    result.setMilliseconds(0);\n                }\n            }\n            return result;\n        }\n        function floorDate(date, unit, weekStartDay) {\n            return addDuration(toDate(date), 0, unit, weekStartDay);\n        }\n        function ceilDate(dateValue, unit, weekStartDay) {\n            var date = toDate(dateValue);\n            if (date && floorDate(date, unit, weekStartDay).getTime() === date.getTime()) {\n                return date;\n            }\n            return addDuration(date, 1, unit, weekStartDay);\n        }\n        function dateComparer(a, b) {\n            if (a && b) {\n                return a.getTime() - b.getTime();\n            }\n            return -1;\n        }\n        function dateDiff(a, b) {\n            return a.getTime() - b;\n        }\n        function toTime(value) {\n            if (isArray(value)) {\n                var result = [];\n                for (var idx = 0; idx < value.length; idx++) {\n                    result.push(toTime(value[idx]));\n                }\n                return result;\n            } else if (value) {\n                return toDate(value).getTime();\n            }\n        }\n        function dateEquals(a, b) {\n            if (a && b) {\n                return toTime(a) === toTime(b);\n            }\n            return a === b;\n        }\n        function timeIndex(date, start, baseUnit) {\n            return absoluteDateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n        }\n        function dateIndex(value, start, baseUnit, baseUnitStep) {\n            var date = toDate(value);\n            var startDate = toDate(start);\n            var index;\n            if (baseUnit === MONTHS) {\n                index = date.getMonth() - startDate.getMonth() + (date.getFullYear() - startDate.getFullYear()) * 12 + timeIndex(date, new Date(date.getFullYear(), date.getMonth()), DAYS) / new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n            } else if (baseUnit === YEARS) {\n                index = date.getFullYear() - startDate.getFullYear() + dateIndex(date, new Date(date.getFullYear(), 0), MONTHS, 1) / 12;\n            } else if (baseUnit === DAYS || baseUnit === WEEKS) {\n                index = timeIndex(date, startDate, baseUnit);\n            } else {\n                index = dateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n            }\n            return index / baseUnitStep;\n        }\n        function duration(a, b, unit) {\n            var diff;\n            if (unit === YEARS) {\n                diff = b.getFullYear() - a.getFullYear();\n            } else if (unit === MONTHS) {\n                diff = duration(a, b, YEARS) * 12 + b.getMonth() - a.getMonth();\n            } else if (unit === DAYS) {\n                diff = Math.floor(dateDiff(b, a) / TIME_PER_DAY);\n            } else {\n                diff = Math.floor(dateDiff(b, a) / TIME_PER_UNIT[unit]);\n            }\n            return diff;\n        }\n        function lteDateIndex(date, sortedDates) {\n            var low = 0;\n            var high = sortedDates.length - 1;\n            var index;\n            while (low <= high) {\n                index = Math.floor((low + high) / 2);\n                var currentDate = sortedDates[index];\n                if (currentDate < date) {\n                    low = index + 1;\n                    continue;\n                }\n                if (currentDate > date) {\n                    high = index - 1;\n                    continue;\n                }\n                while (dateEquals(sortedDates[index - 1], date)) {\n                    index--;\n                }\n                return index;\n            }\n            if (sortedDates[index] <= date) {\n                return index;\n            }\n            return index - 1;\n        }\n        function parseDate(intlService, date) {\n            var result;\n            if (isString(date)) {\n                result = intlService.parseDate(date) || toDate(date);\n            } else {\n                result = toDate(date);\n            }\n            return result;\n        }\n        function parseDates(intlService, dates) {\n            if (isArray(dates)) {\n                var result = [];\n                for (var idx = 0; idx < dates.length; idx++) {\n                    result.push(parseDate(intlService, dates[idx]));\n                }\n                return result;\n            }\n            return parseDate(intlService, dates);\n        }\n        var MIN_CATEGORY_POINTS_RANGE = 0.01;\n        function indexOf(value, arr) {\n            if (value instanceof Date) {\n                var length = arr.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (dateEquals(arr[idx], value)) {\n                        return idx;\n                    }\n                }\n                return -1;\n            }\n            return arr.indexOf(value);\n        }\n        var CategoryAxis = Axis.extend({\n            initFields: function () {\n                this._ticks = {};\n            },\n            categoriesHash: function () {\n                return '';\n            },\n            clone: function () {\n                var copy = new CategoryAxis($.extend({}, this.options, { categories: this.options.srcCategories }), this.chartService);\n                copy.createLabels();\n                return copy;\n            },\n            initUserOptions: function (options) {\n                var categories = options.categories || [];\n                var definedMin = defined(options.min);\n                var definedMax = defined(options.max);\n                options.srcCategories = options.categories = categories;\n                if ((definedMin || definedMax) && categories.length) {\n                    var min = definedMin ? Math.floor(options.min) : 0;\n                    var max;\n                    if (definedMax) {\n                        max = options.justified ? Math.floor(options.max) + 1 : Math.ceil(options.max);\n                    } else {\n                        max = categories.length;\n                    }\n                    options.categories = options.categories.slice(min, max);\n                }\n                return options;\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var length = options.categories.length || 1;\n                var min = isNumber(options.min) ? options.min % 1 : 0;\n                var max;\n                if (isNumber(options.max) && options.max % 1 !== 0 && options.max < this.totalRange().max) {\n                    max = length - (1 - options.max % 1);\n                } else {\n                    max = length - (options.justified ? 1 : 0);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            totalRangeIndices: function (limit) {\n                var options = this.options;\n                var min = isNumber(options.min) ? options.min : 0;\n                var max;\n                if (isNumber(options.max)) {\n                    max = options.max;\n                } else if (isNumber(options.min)) {\n                    max = min + options.categories.length;\n                } else {\n                    max = this.totalRange().max || 1;\n                }\n                if (limit) {\n                    var totalRange = this.totalRange();\n                    min = limitValue(min, 0, totalRange.max);\n                    max = limitValue(max, 0, totalRange.max);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function () {\n                var options = this.options;\n                var min = isNumber(options.min) ? options.min : 0;\n                var max = isNumber(options.max) ? options.max : this.totalRange().max;\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            roundedRange: function () {\n                return this.range();\n            },\n            totalRange: function () {\n                var options = this.options;\n                return {\n                    min: 0,\n                    max: Math.max(this._seriesMax || 0, options.srcCategories.length) - (options.justified ? 1 : 0)\n                };\n            },\n            scaleOptions: function () {\n                var ref = this.rangeIndices();\n                var min = ref.min;\n                var max = ref.max;\n                var lineBox = this.lineBox();\n                var size = this.options.vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (max - min || 1);\n                return {\n                    scale: scale * (this.options.reverse ? -1 : 1),\n                    box: lineBox,\n                    min: min,\n                    max: max\n                };\n            },\n            arrangeLabels: function () {\n                Axis.fn.arrangeLabels.call(this);\n                this.hideOutOfRangeLabels();\n            },\n            hideOutOfRangeLabels: function () {\n                var ref = this;\n                var box = ref.box;\n                var labels = ref.labels;\n                if (labels.length) {\n                    var valueAxis = this.options.vertical ? Y : X;\n                    var start = box[valueAxis + 1];\n                    var end = box[valueAxis + 2];\n                    var firstLabel = labels[0];\n                    var lastLabel = last(labels);\n                    if (firstLabel.box[valueAxis + 1] > end || firstLabel.box[valueAxis + 2] < start) {\n                        firstLabel.options.visible = false;\n                    }\n                    if (lastLabel.box[valueAxis + 1] > end || lastLabel.box[valueAxis + 2] < start) {\n                        lastLabel.options.visible = false;\n                    }\n                }\n            },\n            getMajorTickPositions: function () {\n                return this.getTicks().majorTicks;\n            },\n            getMinorTickPositions: function () {\n                return this.getTicks().minorTicks;\n            },\n            getLabelsTickPositions: function () {\n                return this.getTicks().labelTicks;\n            },\n            tickIndices: function (stepSize) {\n                var ref = this.rangeIndices();\n                var min = ref.min;\n                var max = ref.max;\n                var limit = Math.ceil(max);\n                var current = Math.floor(min);\n                var indices = [];\n                while (current <= limit) {\n                    indices.push(current);\n                    current += stepSize;\n                }\n                return indices;\n            },\n            getTickPositions: function (stepSize) {\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var reverse = ref.reverse;\n                var ref$1 = this.scaleOptions();\n                var scale = ref$1.scale;\n                var box = ref$1.box;\n                var min = ref$1.min;\n                var pos = box[(vertical ? Y : X) + (reverse ? 2 : 1)];\n                var indices = this.tickIndices(stepSize);\n                var positions = [];\n                for (var idx = 0; idx < indices.length; idx++) {\n                    positions.push(pos + round(scale * (indices[idx] - min), COORD_PRECISION));\n                }\n                return positions;\n            },\n            getTicks: function () {\n                var options = this.options;\n                var cache = this._ticks;\n                var range = this.rangeIndices();\n                var lineBox = this.lineBox();\n                var hash = lineBox.getHash() + range.min + ',' + range.max + options.reverse + options.justified;\n                if (cache._hash !== hash) {\n                    var hasMinor = options.minorTicks.visible || options.minorGridLines.visible;\n                    cache._hash = hash;\n                    cache.labelTicks = this.getTickPositions(1);\n                    cache.majorTicks = this.filterOutOfRangePositions(cache.labelTicks, lineBox);\n                    cache.minorTicks = hasMinor ? this.filterOutOfRangePositions(this.getTickPositions(0.5), lineBox) : [];\n                }\n                return cache;\n            },\n            filterOutOfRangePositions: function (positions, lineBox) {\n                if (!positions.length) {\n                    return positions;\n                }\n                var axis = this.options.vertical ? Y : X;\n                var inRange = function (position) {\n                    return lineBox[axis + 1] <= position && position <= lineBox[axis + 2];\n                };\n                var end = positions.length - 1;\n                var startIndex = 0;\n                while (!inRange(positions[startIndex]) && startIndex <= end) {\n                    startIndex++;\n                }\n                var endIndex = end;\n                while (!inRange(positions[endIndex]) && endIndex >= 0) {\n                    endIndex--;\n                }\n                return positions.slice(startIndex, endIndex + 1);\n            },\n            getSlot: function (from, to, limit) {\n                var options = this.options;\n                var reverse = options.reverse;\n                var justified = options.justified;\n                var vertical = options.vertical;\n                var ref = this.scaleOptions();\n                var scale = ref.scale;\n                var box = ref.box;\n                var min = ref.min;\n                var valueAxis = vertical ? Y : X;\n                var lineStart = box[valueAxis + (reverse ? 2 : 1)];\n                var slotBox = box.clone();\n                var singleSlot = !defined(to);\n                var start = valueOrDefault(from, 0);\n                var end = valueOrDefault(to, start);\n                end = Math.max(end - 1, start);\n                end = Math.max(start, end);\n                var p1 = lineStart + (start - min) * scale;\n                var p2 = lineStart + (end + 1 - min) * scale;\n                if (singleSlot && justified) {\n                    p2 = p1;\n                }\n                if (limit) {\n                    p1 = limitValue(p1, box[valueAxis + 1], box[valueAxis + 2]);\n                    p2 = limitValue(p2, box[valueAxis + 1], box[valueAxis + 2]);\n                }\n                slotBox[valueAxis + 1] = reverse ? p2 : p1;\n                slotBox[valueAxis + 2] = reverse ? p1 : p2;\n                return slotBox;\n            },\n            limitSlot: function (slot) {\n                var vertical = this.options.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var limittedSlot = slot.clone();\n                limittedSlot[valueAxis + 1] = limitValue(slot[valueAxis + 1], lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                limittedSlot[valueAxis + 2] = limitValue(slot[valueAxis + 2], lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                return limittedSlot;\n            },\n            slot: function (from, to, limit) {\n                var min = Math.floor(this.options.min || 0);\n                var start = from;\n                var end = to;\n                if (typeof start === 'string') {\n                    start = this.categoryIndex(start);\n                } else if (isNumber(start)) {\n                    start -= min;\n                }\n                if (typeof end === 'string') {\n                    end = this.categoryIndex(end);\n                } else if (isNumber(end)) {\n                    end -= min;\n                }\n                return Axis.fn.slot.call(this, start, end, limit);\n            },\n            pointCategoryIndex: function (point) {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var justified = ref.justified;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var ref$1 = this.scaleOptions();\n                var scale = ref$1.scale;\n                var box = ref$1.box;\n                var min = ref$1.min;\n                var max = ref$1.max;\n                var startValue = reverse ? max : min;\n                var lineStart = box[valueAxis + 1];\n                var lineEnd = box[valueAxis + 2];\n                var pos = point[valueAxis];\n                if (pos < lineStart || pos > lineEnd) {\n                    return null;\n                }\n                var value = startValue + (pos - lineStart) / scale;\n                var diff = value % 1;\n                if (justified) {\n                    value = Math.round(value);\n                } else if (diff === 0 && value > 0) {\n                    value--;\n                }\n                return Math.floor(value);\n            },\n            getCategory: function (point) {\n                var index = this.pointCategoryIndex(point);\n                if (index === null) {\n                    return null;\n                }\n                return this.options.categories[index];\n            },\n            categoryIndex: function (value) {\n                return this.totalIndex(value) - Math.floor(this.options.min || 0);\n            },\n            categoryAt: function (index, total) {\n                var options = this.options;\n                return (total ? options.srcCategories : options.categories)[index];\n            },\n            categoriesCount: function () {\n                return (this.options.categories || []).length;\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var range = options.categories.length;\n                var scale = size / range;\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                return {\n                    min: offset,\n                    max: range + offset\n                };\n            },\n            zoomRange: function (rate) {\n                var rangeIndices = this.totalRangeIndices();\n                var ref = this.totalRange();\n                var totalMin = ref.min;\n                var totalMax = ref.max;\n                var min = limitValue(rangeIndices.min + rate, totalMin, totalMax);\n                var max = limitValue(rangeIndices.max - rate, totalMin, totalMax);\n                if (max - min > 0) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            scaleRange: function (scale) {\n                var range = this.options.categories.length;\n                var delta = scale * range;\n                return {\n                    min: -delta,\n                    max: range + delta\n                };\n            },\n            labelsCount: function () {\n                var labelsRange = this.labelsRange();\n                return labelsRange.max - labelsRange.min;\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var justified = options.justified;\n                var labelOptions = options.labels;\n                var ref = this.totalRangeIndices(true);\n                var min = ref.min;\n                var max = ref.max;\n                var start = Math.floor(min);\n                if (!justified) {\n                    min = Math.floor(min);\n                    max = Math.ceil(max);\n                } else {\n                    min = Math.ceil(min);\n                    max = Math.floor(max);\n                }\n                var skip;\n                if (min > labelOptions.skip) {\n                    skip = labelOptions.skip + labelOptions.step * Math.ceil((min - labelOptions.skip) / labelOptions.step);\n                } else {\n                    skip = labelOptions.skip;\n                }\n                return {\n                    min: skip - start,\n                    max: (options.categories.length ? max + (justified ? 1 : 0) : 0) - start\n                };\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var dataItem = options.dataItems ? options.dataItems[index] : null;\n                var category = valueOrDefault(options.categories[index], '');\n                var text = this.axisLabelText(category, dataItem, labelOptions);\n                return new AxisLabel(category, text, index, dataItem, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.totalRangeIndices();\n                return Math.floor(range.min) <= value && value <= Math.ceil(range.max);\n            },\n            noteSlot: function (value) {\n                var options = this.options;\n                var index = value - Math.floor(options.min || 0);\n                return this.getSlot(index);\n            },\n            arrangeNotes: function () {\n                Axis.fn.arrangeNotes.call(this);\n                this.hideOutOfRangeNotes();\n            },\n            hideOutOfRangeNotes: function () {\n                var ref = this;\n                var notes = ref.notes;\n                var box = ref.box;\n                if (notes && notes.length) {\n                    var valueAxis = this.options.vertical ? Y : X;\n                    var start = box[valueAxis + 1];\n                    var end = box[valueAxis + 2];\n                    for (var idx = 0; idx < notes.length; idx++) {\n                        var note = notes[idx];\n                        if (note.box && (end < note.box[valueAxis + 1] || note.box[valueAxis + 2] < start)) {\n                            note.hide();\n                        }\n                    }\n                }\n            },\n            pan: function (delta) {\n                var range = this.totalRangeIndices(true);\n                var ref = this.scaleOptions();\n                var scale = ref.scale;\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                var totalRange = this.totalRange();\n                var min = range.min + offset;\n                var max = range.max + offset;\n                return this.limitRange(min, max, 0, totalRange.max, offset);\n            },\n            pointsRange: function (start, end) {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var range = this.totalRangeIndices(true);\n                var ref$1 = this.scaleOptions();\n                var scale = ref$1.scale;\n                var box = ref$1.box;\n                var lineStart = box[valueAxis + (reverse ? 2 : 1)];\n                var diffStart = start[valueAxis] - lineStart;\n                var diffEnd = end[valueAxis] - lineStart;\n                var min = range.min + diffStart / scale;\n                var max = range.min + diffEnd / scale;\n                var rangeMin = Math.min(min, max);\n                var rangeMax = Math.max(min, max);\n                if (rangeMax - rangeMin >= MIN_CATEGORY_POINTS_RANGE) {\n                    return {\n                        min: rangeMin,\n                        max: rangeMax\n                    };\n                }\n            },\n            valueRange: function () {\n                return this.range();\n            },\n            totalIndex: function (value) {\n                var options = this.options;\n                var index = this._categoriesMap ? this._categoriesMap.get(value) : indexOf(value, options.srcCategories);\n                return index;\n            },\n            currentRangeIndices: function () {\n                var options = this.options;\n                var min = 0;\n                if (isNumber(options.min)) {\n                    min = Math.floor(options.min);\n                }\n                var max;\n                if (isNumber(options.max)) {\n                    max = options.justified ? Math.floor(options.max) : Math.ceil(options.max) - 1;\n                } else {\n                    max = this.totalCount() - 1;\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            mapCategories: function () {\n                if (!this._categoriesMap) {\n                    var map$$1 = this._categoriesMap = new HashMap();\n                    var srcCategories = this.options.srcCategories;\n                    for (var idx = 0; idx < srcCategories.length; idx++) {\n                        map$$1.set(srcCategories[idx], idx);\n                    }\n                }\n            },\n            totalCount: function () {\n                return Math.max(this.options.srcCategories.length, this._seriesMax || 0);\n            }\n        });\n        setDefaultOptions(CategoryAxis, {\n            type: 'category',\n            vertical: false,\n            majorGridLines: {\n                visible: false,\n                width: 1,\n                color: BLACK\n            },\n            labels: { zIndex: 1 },\n            justified: false,\n            _deferLabels: true\n        });\n        var COORDINATE_LIMIT = 300000;\n        var DateLabelFormats = {\n            milliseconds: 'HH:mm:ss.fff',\n            seconds: 'HH:mm:ss',\n            minutes: 'HH:mm',\n            hours: 'HH:mm',\n            days: 'M/d',\n            weeks: 'M/d',\n            months: 'MMM \\'yy',\n            years: 'yyyy'\n        };\n        var ZERO_THRESHOLD = 0.2;\n        var AUTO = 'auto';\n        var BASE_UNITS = [\n            MILLISECONDS,\n            SECONDS,\n            MINUTES,\n            HOURS,\n            DAYS,\n            WEEKS,\n            MONTHS,\n            YEARS\n        ];\n        var FIT = 'fit';\n        function categoryRange(categories) {\n            var range = categories._range;\n            if (!range) {\n                range = categories._range = sparseArrayLimits(categories);\n                range.min = toDate(range.min);\n                range.max = toDate(range.max);\n            }\n            return range;\n        }\n        var EmptyDateRange = Class.extend({\n            init: function (options) {\n                this.options = options;\n            },\n            displayIndices: function () {\n                return {\n                    min: 0,\n                    max: 1\n                };\n            },\n            displayRange: function () {\n                return {};\n            },\n            total: function () {\n                return {};\n            },\n            valueRange: function () {\n                return {};\n            },\n            valueIndex: function () {\n                return -1;\n            },\n            values: function () {\n                return [];\n            },\n            totalIndex: function () {\n                return -1;\n            },\n            valuesCount: function () {\n                return 0;\n            },\n            totalCount: function () {\n                return 0;\n            },\n            dateAt: function () {\n                return null;\n            }\n        });\n        var DateRange = Class.extend({\n            init: function (start, end, options) {\n                this.options = options;\n                options.baseUnitStep = options.baseUnitStep || 1;\n                var roundToBaseUnit = options.roundToBaseUnit;\n                var justified = options.justified;\n                this.start = addDuration(start, 0, options.baseUnit, options.weekStartDay);\n                var lowerEnd = this.roundToTotalStep(end);\n                var expandEnd = !justified && dateEquals(end, lowerEnd) && !options.justifyEnd;\n                this.end = this.roundToTotalStep(end, !justified, expandEnd ? 1 : 0);\n                var min = options.min || start;\n                this.valueStart = this.roundToTotalStep(min);\n                this.displayStart = roundToBaseUnit ? this.valueStart : min;\n                var max = options.max;\n                if (!max) {\n                    this.valueEnd = lowerEnd;\n                    this.displayEnd = roundToBaseUnit || expandEnd ? this.end : end;\n                } else {\n                    this.valueEnd = this.roundToTotalStep(max, false, !justified && dateEquals(max, this.roundToTotalStep(max)) ? -1 : 0);\n                    this.displayEnd = roundToBaseUnit ? this.roundToTotalStep(max, !justified) : options.max;\n                }\n                if (this.valueEnd < this.valueStart) {\n                    this.valueEnd = this.valueStart;\n                }\n                if (this.displayEnd <= this.displayStart) {\n                    this.displayEnd = this.roundToTotalStep(this.displayStart, false, 1);\n                }\n            },\n            displayRange: function () {\n                return {\n                    min: this.displayStart,\n                    max: this.displayEnd\n                };\n            },\n            displayIndices: function () {\n                if (!this._indices) {\n                    var options = this.options;\n                    var baseUnit = options.baseUnit;\n                    var baseUnitStep = options.baseUnitStep;\n                    var minIdx = dateIndex(this.displayStart, this.valueStart, baseUnit, baseUnitStep);\n                    var maxIdx = dateIndex(this.displayEnd, this.valueStart, baseUnit, baseUnitStep);\n                    this._indices = {\n                        min: minIdx,\n                        max: maxIdx\n                    };\n                }\n                return this._indices;\n            },\n            total: function () {\n                return {\n                    min: this.start,\n                    max: this.end\n                };\n            },\n            totalCount: function () {\n                var last$$1 = this.totalIndex(this.end);\n                return last$$1 + (this.options.justified ? 1 : 0);\n            },\n            valueRange: function () {\n                return {\n                    min: this.valueStart,\n                    max: this.valueEnd\n                };\n            },\n            valueIndex: function (value) {\n                var options = this.options;\n                return Math.floor(dateIndex(value, this.valueStart, options.baseUnit, options.baseUnitStep));\n            },\n            totalIndex: function (value) {\n                var options = this.options;\n                return Math.floor(dateIndex(value, this.start, options.baseUnit, options.baseUnitStep));\n            },\n            dateIndex: function (value) {\n                var options = this.options;\n                return dateIndex(value, this.valueStart, options.baseUnit, options.baseUnitStep);\n            },\n            valuesCount: function () {\n                var maxIdx = this.valueIndex(this.valueEnd);\n                return maxIdx + 1;\n            },\n            values: function () {\n                var values = this._values;\n                if (!values) {\n                    var options = this.options;\n                    var range = this.valueRange();\n                    this._values = values = [];\n                    for (var date = range.min; date <= range.max;) {\n                        values.push(date);\n                        date = addDuration(date, options.baseUnitStep, options.baseUnit, options.weekStartDay);\n                    }\n                }\n                return values;\n            },\n            dateAt: function (index, total) {\n                var options = this.options;\n                return addDuration(total ? this.start : this.valueStart, options.baseUnitStep * index, options.baseUnit, options.weekStartDay);\n            },\n            roundToTotalStep: function (value, upper, next) {\n                var ref = this.options;\n                var baseUnit = ref.baseUnit;\n                var baseUnitStep = ref.baseUnitStep;\n                var weekStartDay = ref.weekStartDay;\n                var start = this.start;\n                var step = dateIndex(value, start, baseUnit, baseUnitStep);\n                var roundedStep = upper ? Math.ceil(step) : Math.floor(step);\n                if (next) {\n                    roundedStep += next;\n                }\n                return addDuration(start, roundedStep * baseUnitStep, baseUnit, weekStartDay);\n            }\n        });\n        function autoBaseUnit(options, startUnit, startStep) {\n            var categoryLimits = categoryRange(options.categories);\n            var span = (options.max || categoryLimits.max) - (options.min || categoryLimits.min);\n            var autoBaseUnitSteps = options.autoBaseUnitSteps;\n            var maxDateGroups = options.maxDateGroups;\n            var autoUnit = options.baseUnit === FIT;\n            var autoUnitIx = startUnit ? BASE_UNITS.indexOf(startUnit) : 0;\n            var baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit;\n            var units = span / TIME_PER_UNIT[baseUnit];\n            var totalUnits = units;\n            var unitSteps, step, nextStep;\n            while (!step || units >= maxDateGroups) {\n                unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n                do {\n                    nextStep = unitSteps.shift();\n                } while (nextStep && startUnit === baseUnit && nextStep < startStep);\n                if (nextStep) {\n                    step = nextStep;\n                    units = totalUnits / step;\n                } else if (baseUnit === last(BASE_UNITS)) {\n                    step = Math.ceil(totalUnits / maxDateGroups);\n                    break;\n                } else if (autoUnit) {\n                    baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n                    totalUnits = span / TIME_PER_UNIT[baseUnit];\n                    unitSteps = null;\n                } else {\n                    if (units > maxDateGroups) {\n                        step = Math.ceil(totalUnits / maxDateGroups);\n                    }\n                    break;\n                }\n            }\n            options.baseUnitStep = step;\n            options.baseUnit = baseUnit;\n        }\n        function defaultBaseUnit(options) {\n            var categories = options.categories;\n            var count = defined(categories) ? categories.length : 0;\n            var minDiff = MAX_VALUE;\n            var lastCategory, unit;\n            for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n                var category = categories[categoryIx];\n                if (category && lastCategory) {\n                    var diff = absoluteDateDiff(category, lastCategory);\n                    if (diff > 0) {\n                        minDiff = Math.min(minDiff, diff);\n                        if (minDiff >= TIME_PER_YEAR) {\n                            unit = YEARS;\n                        } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n                            unit = MONTHS;\n                        } else if (minDiff >= TIME_PER_WEEK) {\n                            unit = WEEKS;\n                        } else if (minDiff >= TIME_PER_DAY) {\n                            unit = DAYS;\n                        } else if (minDiff >= TIME_PER_HOUR) {\n                            unit = HOURS;\n                        } else if (minDiff >= TIME_PER_MINUTE) {\n                            unit = MINUTES;\n                        } else {\n                            unit = SECONDS;\n                        }\n                    }\n                }\n                lastCategory = category;\n            }\n            options.baseUnit = unit || DAYS;\n        }\n        function initUnit(options) {\n            var baseUnit = (options.baseUnit || '').toLowerCase();\n            var useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n            if (useDefault) {\n                defaultBaseUnit(options);\n            }\n            if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n                autoBaseUnit(options);\n            }\n            return options;\n        }\n        var DateCategoryAxis = CategoryAxis.extend({\n            clone: function () {\n                var copy = new DateCategoryAxis($.extend({}, this.options), this.chartService);\n                copy.createLabels();\n                return copy;\n            },\n            categoriesHash: function () {\n                var start = this.dataRange.total().min;\n                return this.options.baseUnit + this.options.baseUnitStep + start;\n            },\n            initUserOptions: function (options) {\n                return options;\n            },\n            initFields: function () {\n                CategoryAxis.fn.initFields.call(this);\n                var chartService = this.chartService;\n                var intlService = chartService.intl;\n                var options = this.options;\n                var categories = options.categories || [];\n                if (!categories._parsed) {\n                    categories = parseDates(intlService, categories);\n                    categories._parsed = true;\n                }\n                options = deepExtend({ roundToBaseUnit: true }, options, {\n                    categories: categories,\n                    min: parseDate(intlService, options.min),\n                    max: parseDate(intlService, options.max)\n                });\n                if (chartService.panning && chartService.isPannable(options.vertical ? Y : X)) {\n                    options.roundToBaseUnit = false;\n                }\n                options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n                options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n                this.options = options;\n                options.srcCategories = categories;\n                if (categories.length > 0) {\n                    var range = categoryRange(categories);\n                    var maxDivisions = options.maxDivisions;\n                    this.dataRange = new DateRange(range.min, range.max, initUnit(options));\n                    if (maxDivisions) {\n                        var dataRange = this.dataRange.displayRange();\n                        var divisionOptions = $.extend({}, options, {\n                            justified: true,\n                            roundToBaseUnit: false,\n                            baseUnit: 'fit',\n                            min: dataRange.min,\n                            max: dataRange.max,\n                            maxDateGroups: maxDivisions\n                        });\n                        var dataRangeOptions = this.dataRange.options;\n                        autoBaseUnit(divisionOptions, dataRangeOptions.baseUnit, dataRangeOptions.baseUnitStep);\n                        this.divisionRange = new DateRange(range.min, range.max, divisionOptions);\n                    } else {\n                        this.divisionRange = this.dataRange;\n                    }\n                } else {\n                    options.baseUnit = options.baseUnit || DAYS;\n                    this.dataRange = this.divisionRange = new EmptyDateRange(options);\n                }\n            },\n            tickIndices: function (stepSize) {\n                var ref = this;\n                var dataRange = ref.dataRange;\n                var divisionRange = ref.divisionRange;\n                var valuesCount = divisionRange.valuesCount();\n                if (!this.options.maxDivisions || !valuesCount) {\n                    return CategoryAxis.fn.tickIndices.call(this, stepSize);\n                }\n                var indices = [];\n                var values = divisionRange.values();\n                var offset = 0;\n                if (!this.options.justified) {\n                    values = values.concat(divisionRange.dateAt(valuesCount));\n                    offset = 0.5;\n                }\n                for (var idx = 0; idx < values.length; idx++) {\n                    indices.push(dataRange.dateIndex(values[idx]) + offset);\n                    if (stepSize !== 1 && idx >= 1) {\n                        var last$$1 = indices.length - 1;\n                        indices.splice(idx, 0, indices[last$$1 - 1] + (indices[last$$1] - indices[last$$1 - 1]) * stepSize);\n                    }\n                }\n                return indices;\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                var categories = this.options.categories || [];\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n            },\n            parseNoteValue: function (value) {\n                return parseDate(this.chartService.intl, value);\n            },\n            noteSlot: function (value) {\n                return this.getSlot(value);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var weekStartDay = options.weekStartDay;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var range = this.range();\n                var scale = size / (range.max - range.min);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if (range.min && range.max) {\n                    var from = addTicks(options.min || range.min, offset);\n                    var to = addTicks(options.max || range.max, offset);\n                    range = {\n                        min: addDuration(from, 0, baseUnit, weekStartDay),\n                        max: addDuration(to, 0, baseUnit, weekStartDay)\n                    };\n                }\n                return range;\n            },\n            scaleRange: function (delta) {\n                var rounds = Math.abs(delta);\n                var result = this.range();\n                var from = result.min;\n                var to = result.max;\n                if (from && to) {\n                    while (rounds--) {\n                        var range = dateDiff(from, to);\n                        var step = Math.round(range * 0.1);\n                        if (delta < 0) {\n                            from = addTicks(from, step);\n                            to = addTicks(to, -step);\n                        } else {\n                            from = addTicks(from, -step);\n                            to = addTicks(to, step);\n                        }\n                    }\n                    result = {\n                        min: from,\n                        max: to\n                    };\n                }\n                return result;\n            },\n            labelsRange: function () {\n                return {\n                    min: this.options.labels.skip,\n                    max: this.divisionRange.valuesCount()\n                };\n            },\n            pan: function (delta) {\n                if (this.isEmpty()) {\n                    return null;\n                }\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var ref = this.dataRange.displayRange();\n                var min = ref.min;\n                var max = ref.max;\n                var totalLimits = this.dataRange.total();\n                var scale = size / (max - min);\n                var offset = round(delta / scale, DEFAULT_PRECISION) * (options.reverse ? -1 : 1);\n                var from = addTicks(min, offset);\n                var to = addTicks(max, offset);\n                var panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n                if (panRange) {\n                    panRange.min = toDate(panRange.min);\n                    panRange.max = toDate(panRange.max);\n                    panRange.baseUnit = options.baseUnit;\n                    panRange.baseUnitStep = options.baseUnitStep || 1;\n                    panRange.userSetBaseUnit = options.userSetBaseUnit;\n                    panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n                    return panRange;\n                }\n            },\n            pointsRange: function (start, end) {\n                if (this.isEmpty()) {\n                    return null;\n                }\n                var pointsRange = CategoryAxis.fn.pointsRange.call(this, start, end);\n                var datesRange = this.dataRange.displayRange();\n                var indicesRange = this.dataRange.displayIndices();\n                var scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n                var options = this.options;\n                var min = addTicks(datesRange.min, pointsRange.min * scale);\n                var max = addTicks(datesRange.min, pointsRange.max * scale);\n                return {\n                    min: min,\n                    max: max,\n                    baseUnit: options.userSetBaseUnit || options.baseUnit,\n                    baseUnitStep: options.userSetBaseUnitStep || options.baseUnitStep\n                };\n            },\n            zoomRange: function (delta) {\n                if (this.isEmpty()) {\n                    return null;\n                }\n                var options = this.options;\n                var fit = options.userSetBaseUnit === FIT;\n                var totalLimits = this.dataRange.total();\n                var ref = this.dataRange.displayRange();\n                var rangeMin = ref.min;\n                var rangeMax = ref.max;\n                var ref$1 = this.dataRange.options;\n                var weekStartDay = ref$1.weekStartDay;\n                var baseUnit = ref$1.baseUnit;\n                var baseUnitStep = ref$1.baseUnitStep;\n                var min = addDuration(rangeMin, delta * baseUnitStep, baseUnit, weekStartDay);\n                var max = addDuration(rangeMax, -delta * baseUnitStep, baseUnit, weekStartDay);\n                if (fit) {\n                    var autoBaseUnitSteps = options.autoBaseUnitSteps;\n                    var maxDateGroups = options.maxDateGroups;\n                    var maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n                    var rangeDiff = dateDiff(rangeMax, rangeMin);\n                    var diff = dateDiff(max, min);\n                    var baseUnitIndex = BASE_UNITS.indexOf(baseUnit);\n                    var autoBaseUnitStep, ticks;\n                    if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== MILLISECONDS) {\n                        baseUnit = BASE_UNITS[baseUnitIndex - 1];\n                        autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n                        ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n                        min = addTicks(rangeMin, ticks);\n                        max = addTicks(rangeMax, -ticks);\n                    } else if (diff > maxDiff && baseUnit !== YEARS) {\n                        var stepIndex = 0;\n                        do {\n                            baseUnitIndex++;\n                            baseUnit = BASE_UNITS[baseUnitIndex];\n                            stepIndex = 0;\n                            ticks = 2 * TIME_PER_UNIT[baseUnit];\n                            do {\n                                autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n                                stepIndex++;\n                            } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n                        } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n                        ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n                        if (ticks > 0) {\n                            min = addTicks(rangeMin, -ticks);\n                            max = addTicks(rangeMax, ticks);\n                            min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n                            max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n                        }\n                    }\n                }\n                if (min < totalLimits.min) {\n                    min = totalLimits.min;\n                }\n                if (max > totalLimits.max) {\n                    max = totalLimits.max;\n                }\n                if (min && max && dateDiff(max, min) > 0) {\n                    return {\n                        min: min,\n                        max: max,\n                        baseUnit: options.userSetBaseUnit || options.baseUnit,\n                        baseUnitStep: options.userSetBaseUnitStep || options.baseUnitStep\n                    };\n                }\n            },\n            range: function () {\n                return this.dataRange.displayRange();\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var dataItem = options.dataItems && !options.maxDivisions ? options.dataItems[index] : null;\n                var date = this.divisionRange.dateAt(index);\n                var unitFormat = labelOptions.dateFormats[this.divisionRange.options.baseUnit];\n                labelOptions.format = labelOptions.format || unitFormat;\n                var text = this.axisLabelText(date, dataItem, labelOptions);\n                if (text) {\n                    return new AxisLabel(date, text, index, dataItem, labelOptions);\n                }\n            },\n            categoryIndex: function (value) {\n                return this.dataRange.valueIndex(value);\n            },\n            slot: function (from, to, limit) {\n                var dateRange = this.dataRange;\n                var start = from;\n                var end = to;\n                if (start instanceof Date) {\n                    start = dateRange.dateIndex(start);\n                }\n                if (end instanceof Date) {\n                    end = dateRange.dateIndex(end);\n                }\n                var slot = this.getSlot(start, end, limit);\n                if (slot) {\n                    return slot.toRect();\n                }\n            },\n            getSlot: function (a, b, limit) {\n                var start = a;\n                var end = b;\n                if (typeof start === OBJECT) {\n                    start = this.categoryIndex(start);\n                }\n                if (typeof end === OBJECT) {\n                    end = this.categoryIndex(end);\n                }\n                return CategoryAxis.fn.getSlot.call(this, start, end, limit);\n            },\n            valueRange: function () {\n                var options = this.options;\n                var range = categoryRange(options.srcCategories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            },\n            categoryAt: function (index, total) {\n                return this.dataRange.dateAt(index, total);\n            },\n            categoriesCount: function () {\n                return this.dataRange.valuesCount();\n            },\n            rangeIndices: function () {\n                return this.dataRange.displayIndices();\n            },\n            labelsBetweenTicks: function () {\n                return !this.divisionRange.options.justified;\n            },\n            prepareUserOptions: function () {\n                if (this.isEmpty()) {\n                    return;\n                }\n                this.options.categories = this.dataRange.values();\n            },\n            getCategory: function (point) {\n                var index = this.pointCategoryIndex(point);\n                if (index === null) {\n                    return null;\n                }\n                return this.dataRange.dateAt(index);\n            },\n            totalIndex: function (value) {\n                return this.dataRange.totalIndex(value);\n            },\n            currentRangeIndices: function () {\n                var range = this.dataRange.valueRange();\n                return {\n                    min: this.dataRange.totalIndex(range.min),\n                    max: this.dataRange.totalIndex(range.max)\n                };\n            },\n            totalRange: function () {\n                return this.dataRange.total();\n            },\n            totalCount: function () {\n                return this.dataRange.totalCount();\n            },\n            isEmpty: function () {\n                return !this.options.srcCategories.length;\n            },\n            roundedRange: function () {\n                if (this.options.roundToBaseUnit !== false || this.isEmpty()) {\n                    return this.range();\n                }\n                var options = this.options;\n                var datesRange = categoryRange(options.srcCategories);\n                var dateRange = new DateRange(datesRange.min, datesRange.max, $.extend({}, options, {\n                    justified: false,\n                    roundToBaseUnit: true,\n                    justifyEnd: options.justified\n                }));\n                return dateRange.displayRange();\n            }\n        });\n        setDefaultOptions(DateCategoryAxis, {\n            type: DATE,\n            labels: { dateFormats: DateLabelFormats },\n            autoBaseUnitSteps: {\n                milliseconds: [\n                    1,\n                    10,\n                    100\n                ],\n                seconds: [\n                    1,\n                    2,\n                    5,\n                    15,\n                    30\n                ],\n                minutes: [\n                    1,\n                    2,\n                    5,\n                    15,\n                    30\n                ],\n                hours: [\n                    1,\n                    2,\n                    3\n                ],\n                days: [\n                    1,\n                    2,\n                    3\n                ],\n                weeks: [\n                    1,\n                    2\n                ],\n                months: [\n                    1,\n                    2,\n                    3,\n                    6\n                ],\n                years: [\n                    1,\n                    2,\n                    3,\n                    5,\n                    10,\n                    25,\n                    50\n                ]\n            },\n            maxDateGroups: 10\n        });\n        function autoAxisMin(min, max, narrow) {\n            if (!min && !max) {\n                return 0;\n            }\n            var axisMin;\n            if (min >= 0 && max >= 0) {\n                var minValue = min === max ? 0 : min;\n                var diff = (max - minValue) / max;\n                if (narrow === false || !narrow && diff > ZERO_THRESHOLD) {\n                    return 0;\n                }\n                axisMin = Math.max(0, minValue - (max - minValue) / 2);\n            } else {\n                axisMin = min;\n            }\n            return axisMin;\n        }\n        function autoAxisMax(min, max, narrow) {\n            if (!min && !max) {\n                return 1;\n            }\n            var axisMax;\n            if (min <= 0 && max <= 0) {\n                var maxValue = min === max ? 0 : max;\n                var diff = Math.abs((maxValue - min) / maxValue);\n                if (narrow === false || !narrow && diff > ZERO_THRESHOLD) {\n                    return 0;\n                }\n                axisMax = Math.min(0, maxValue - (min - maxValue) / 2);\n            } else {\n                axisMax = max;\n            }\n            return axisMax;\n        }\n        function floor(value, step) {\n            return round(Math.floor(value / step) * step, DEFAULT_PRECISION);\n        }\n        function ceil(value, step) {\n            return round(Math.ceil(value / step) * step, DEFAULT_PRECISION);\n        }\n        function limitCoordinate(value) {\n            return Math.max(Math.min(value, COORDINATE_LIMIT), -COORDINATE_LIMIT);\n        }\n        var MIN_VALUE_RANGE = Math.pow(10, -DEFAULT_PRECISION + 1);\n        var NumericAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options, chartService) {\n                Axis.fn.init.call(this, $.extend({}, options, {\n                    seriesMin: seriesMin,\n                    seriesMax: seriesMax\n                }), chartService);\n            },\n            initUserOptions: function (options) {\n                var autoOptions = autoAxisOptions(options.seriesMin, options.seriesMax, options);\n                this.totalOptions = totalAxisOptions(autoOptions, options);\n                return axisOptions(autoOptions, options);\n            },\n            initFields: function () {\n                this.totalMin = this.totalOptions.min;\n                this.totalMax = this.totalOptions.max;\n                this.totalMajorUnit = this.totalOptions.majorUnit;\n                this.seriesMin = this.options.seriesMin;\n                this.seriesMax = this.options.seriesMax;\n            },\n            clone: function () {\n                return new NumericAxis(this.seriesMin, this.seriesMax, $.extend({}, this.options), this.chartService);\n            },\n            startValue: function () {\n                return 0;\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                if (stepValue === 0) {\n                    return 1;\n                }\n                var options = this.options;\n                var range = options.max - options.min;\n                return Math.floor(round(range / stepValue, COORD_PRECISION)) + 1;\n            },\n            getTickPositions: function (unit, skipUnit) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var lineBox = this.lineBox();\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var range = options.max - options.min;\n                var scale = lineSize / range;\n                var step = unit * scale;\n                var divisions = this.getDivisions(unit);\n                var dir = (vertical ? -1 : 1) * (reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var positions = [];\n                var pos = lineBox[(vertical ? Y : X) + startEdge];\n                var skipStep = 0;\n                if (skipUnit) {\n                    skipStep = skipUnit / unit;\n                }\n                for (var idx = 0; idx < divisions; idx++) {\n                    if (idx % skipStep !== 0) {\n                        positions.push(round(pos, COORD_PRECISION));\n                    }\n                    pos = pos + step * dir;\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                return this.getTickPositions(this.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                if (limit === void 0) {\n                    limit = false;\n                }\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var step = dir * (lineSize / (options.max - options.min));\n                var slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n                var start = a;\n                var end = b;\n                if (!defined(start)) {\n                    start = end || 0;\n                }\n                if (!defined(end)) {\n                    end = start || 0;\n                }\n                if (limit) {\n                    start = Math.max(Math.min(start, options.max), options.min);\n                    end = Math.max(Math.min(end, options.max), options.min);\n                }\n                var p1, p2;\n                if (vertical) {\n                    p1 = options.max - Math.max(start, end);\n                    p2 = options.max - Math.min(start, end);\n                } else {\n                    p1 = Math.min(start, end) - options.min;\n                    p2 = Math.max(start, end) - options.min;\n                }\n                slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n                slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n                return slotBox;\n            },\n            getValue: function (point) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var max = Number(options.max);\n                var min = Number(options.min);\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var offset = dir * (point[valueAxis] - lineStart);\n                var step = (max - min) / lineSize;\n                var valueOffset = offset * step;\n                if (offset < 0 || offset > lineSize) {\n                    return null;\n                }\n                var value = vertical ? max - valueOffset : min + valueOffset;\n                return round(value, DEFAULT_PRECISION);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var max = options.max;\n                var min = options.min;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var range = max - min;\n                var scale = size / range;\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if ((vertical || reverse) && !(vertical && reverse)) {\n                    offset = -offset;\n                }\n                return {\n                    min: min + offset,\n                    max: max + offset,\n                    offset: offset\n                };\n            },\n            scaleRange: function (delta) {\n                var options = this.options;\n                var offset = -delta * options.majorUnit;\n                return {\n                    min: options.min - offset,\n                    max: options.max + offset\n                };\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var value = round(options.min + index * options.majorUnit, DEFAULT_PRECISION);\n                var text = this.axisLabelText(value, null, labelOptions);\n                return new AxisLabel(value, text, index, null, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return range.min <= value && value <= range.max;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta);\n                return this.limitRange(range.min, range.max, this.totalMin, this.totalMax, range.offset);\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                if (this.isValidRange(min, max)) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            zoomRange: function (delta) {\n                var ref = this;\n                var totalMin = ref.totalMin;\n                var totalMax = ref.totalMax;\n                var newRange = this.scaleRange(delta);\n                var min = limitValue(newRange.min, totalMin, totalMax);\n                var max = limitValue(newRange.max, totalMin, totalMax);\n                if (this.isValidRange(min, max)) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            isValidRange: function (min, max) {\n                return max - min > MIN_VALUE_RANGE;\n            }\n        });\n        function autoAxisOptions(seriesMin, seriesMax, options) {\n            var narrowRange = options.narrowRange;\n            var autoMin = autoAxisMin(seriesMin, seriesMax, narrowRange);\n            var autoMax = autoAxisMax(seriesMin, seriesMax, narrowRange);\n            var majorUnit = autoMajorUnit(autoMin, autoMax);\n            var autoOptions = { majorUnit: majorUnit };\n            if (options.roundToMajorUnit !== false) {\n                if (autoMin < 0 && remainderClose(autoMin, majorUnit, 1 / 3)) {\n                    autoMin -= majorUnit;\n                }\n                if (autoMax > 0 && remainderClose(autoMax, majorUnit, 1 / 3)) {\n                    autoMax += majorUnit;\n                }\n            }\n            autoOptions.min = floor(autoMin, majorUnit);\n            autoOptions.max = ceil(autoMax, majorUnit);\n            return autoOptions;\n        }\n        function totalAxisOptions(autoOptions, options) {\n            return {\n                min: defined(options.min) ? Math.min(autoOptions.min, options.min) : autoOptions.min,\n                max: defined(options.max) ? Math.max(autoOptions.max, options.max) : autoOptions.max,\n                majorUnit: autoOptions.majorUnit\n            };\n        }\n        function clearNullValues(options, fields) {\n            for (var idx = 0; idx < fields.length; idx++) {\n                var field = fields[idx];\n                if (options[field] === null) {\n                    options[field] = undefined;\n                }\n            }\n        }\n        function axisOptions(autoOptions, userOptions) {\n            var options = userOptions;\n            var userSetMin, userSetMax;\n            if (userOptions) {\n                clearNullValues(userOptions, [\n                    'min',\n                    'max'\n                ]);\n                userSetMin = defined(userOptions.min);\n                userSetMax = defined(userOptions.max);\n                var userSetLimits = userSetMin || userSetMax;\n                if (userSetLimits) {\n                    if (userOptions.min === userOptions.max) {\n                        if (userOptions.min > 0) {\n                            userOptions.min = 0;\n                        } else {\n                            userOptions.max = 1;\n                        }\n                    }\n                }\n                if (userOptions.majorUnit) {\n                    autoOptions.min = floor(autoOptions.min, userOptions.majorUnit);\n                    autoOptions.max = ceil(autoOptions.max, userOptions.majorUnit);\n                } else if (userSetLimits) {\n                    options = deepExtend(autoOptions, userOptions);\n                    autoOptions.majorUnit = autoMajorUnit(options.min, options.max);\n                }\n            }\n            autoOptions.minorUnit = (options.majorUnit || autoOptions.majorUnit) / 5;\n            var result = deepExtend(autoOptions, options);\n            if (result.min >= result.max) {\n                if (userSetMin && !userSetMax) {\n                    result.max = result.min + result.majorUnit;\n                } else if (!userSetMin && userSetMax) {\n                    result.min = result.max - result.majorUnit;\n                }\n            }\n            return result;\n        }\n        function remainderClose(value, divisor, ratio) {\n            var remainder = round(Math.abs(value % divisor), DEFAULT_PRECISION);\n            var threshold = divisor * (1 - ratio);\n            return remainder === 0 || remainder > threshold;\n        }\n        setDefaultOptions(NumericAxis, {\n            type: 'numeric',\n            min: 0,\n            max: 1,\n            vertical: true,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            labels: { format: '#.####################' },\n            zIndex: 1\n        });\n        var DateValueAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, axisOptions, chartService) {\n                var min = toDate(seriesMin);\n                var max = toDate(seriesMax);\n                var intlService = chartService.intl;\n                var options = axisOptions || {};\n                options = deepExtend(options || {}, {\n                    min: parseDate(intlService, options.min),\n                    max: parseDate(intlService, options.max),\n                    axisCrossingValue: parseDates(intlService, options.axisCrossingValues || options.axisCrossingValue)\n                });\n                options = applyDefaults(min, max, options);\n                Axis.fn.init.call(this, options, chartService);\n                this.intlService = intlService;\n                this.seriesMin = min;\n                this.seriesMax = max;\n                var weekStartDay = options.weekStartDay || 0;\n                this.totalMin = toTime(floorDate(toTime(min) - 1, options.baseUnit, weekStartDay));\n                this.totalMax = toTime(ceilDate(toTime(max) + 1, options.baseUnit, weekStartDay));\n            },\n            clone: function () {\n                return new DateValueAxis(this.seriesMin, this.seriesMax, $.extend({}, this.options), this.chartService);\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                var options = this.options;\n                return Math.floor(duration(options.min, options.max, options.baseUnit) / stepValue + 1);\n            },\n            getTickPositions: function (step) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var dir = (vertical ? -1 : 1) * (options.reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var start = lineBox[(vertical ? Y : X) + startEdge];\n                var divisions = this.getDivisions(step);\n                var timeRange = dateDiff(options.max, options.min);\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var scale = lineSize / timeRange;\n                var weekStartDay = options.weekStartDay || 0;\n                var positions = [start];\n                for (var i = 1; i < divisions; i++) {\n                    var date = addDuration(options.min, i * step, options.baseUnit, weekStartDay);\n                    var pos = start + dateDiff(date, options.min) * scale * dir;\n                    positions.push(round(pos, COORD_PRECISION));\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                return this.getTickPositions(this.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                return NumericAxis.prototype.getSlot.call(this, parseDate(this.intlService, a), parseDate(this.intlService, b), limit);\n            },\n            getValue: function (point) {\n                var value = NumericAxis.prototype.getValue.call(this, point);\n                return value !== null ? toDate(value) : null;\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var offset = index * options.majorUnit;\n                var weekStartDay = options.weekStartDay || 0;\n                var date = options.min;\n                if (offset > 0) {\n                    date = addDuration(date, offset, options.baseUnit, weekStartDay);\n                }\n                var unitFormat = labelOptions.dateFormats[options.baseUnit];\n                labelOptions.format = labelOptions.format || unitFormat;\n                var text = this.axisLabelText(date, null, labelOptions);\n                return new AxisLabel(date, text, index, null, labelOptions);\n            },\n            translateRange: function (delta, exact) {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var weekStartDay = options.weekStartDay || 0;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var range = this.range();\n                var scale = size / dateDiff(range.max, range.min);\n                var offset = round(delta / scale, DEFAULT_PRECISION) * (options.reverse ? -1 : 1);\n                var from = addTicks(options.min, offset);\n                var to = addTicks(options.max, offset);\n                if (!exact) {\n                    from = addDuration(from, 0, baseUnit, weekStartDay);\n                    to = addDuration(to, 0, baseUnit, weekStartDay);\n                }\n                return {\n                    min: from,\n                    max: to,\n                    offset: offset\n                };\n            },\n            scaleRange: function (delta) {\n                var ref = this.options;\n                var from = ref.min;\n                var to = ref.max;\n                var rounds = Math.abs(delta);\n                while (rounds--) {\n                    var range = dateDiff(from, to);\n                    var step = Math.round(range * 0.1);\n                    if (delta < 0) {\n                        from = addTicks(from, step);\n                        to = addTicks(to, -step);\n                    } else {\n                        from = addTicks(from, -step);\n                        to = addTicks(to, step);\n                    }\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta, true);\n                var limittedRange = this.limitRange(toTime(range.min), toTime(range.max), this.totalMin, this.totalMax, range.offset);\n                if (limittedRange) {\n                    return {\n                        min: toDate(limittedRange.min),\n                        max: toDate(limittedRange.max)\n                    };\n                }\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                return {\n                    min: toDate(min),\n                    max: toDate(max)\n                };\n            },\n            zoomRange: function (delta) {\n                var range = this.scaleRange(delta);\n                var min = toDate(limitValue(toTime(range.min), this.totalMin, this.totalMax));\n                var max = toDate(limitValue(toTime(range.max), this.totalMin, this.totalMax));\n                return {\n                    min: min,\n                    max: max\n                };\n            }\n        });\n        function timeUnits(delta) {\n            var unit = HOURS;\n            if (delta >= TIME_PER_YEAR) {\n                unit = YEARS;\n            } else if (delta >= TIME_PER_MONTH) {\n                unit = MONTHS;\n            } else if (delta >= TIME_PER_WEEK) {\n                unit = WEEKS;\n            } else if (delta >= TIME_PER_DAY) {\n                unit = DAYS;\n            }\n            return unit;\n        }\n        function applyDefaults(seriesMin, seriesMax, options) {\n            var min = options.min || seriesMin;\n            var max = options.max || seriesMax;\n            var baseUnit = options.baseUnit || (max && min ? timeUnits(absoluteDateDiff(max, min)) : HOURS);\n            var baseUnitTime = TIME_PER_UNIT[baseUnit];\n            var weekStartDay = options.weekStartDay || 0;\n            var autoMin = floorDate(toTime(min) - 1, baseUnit, weekStartDay) || toDate(max);\n            var autoMax = ceilDate(toTime(max) + 1, baseUnit, weekStartDay);\n            var userMajorUnit = options.majorUnit ? options.majorUnit : undefined;\n            var majorUnit = userMajorUnit || ceil(autoMajorUnit(autoMin.getTime(), autoMax.getTime()), baseUnitTime) / baseUnitTime;\n            var actualUnits = duration(autoMin, autoMax, baseUnit);\n            var totalUnits = ceil(actualUnits, majorUnit);\n            var unitsToAdd = totalUnits - actualUnits;\n            var head = Math.floor(unitsToAdd / 2);\n            var tail = unitsToAdd - head;\n            if (!options.baseUnit) {\n                delete options.baseUnit;\n            }\n            options.baseUnit = options.baseUnit || baseUnit;\n            options.min = options.min || addDuration(autoMin, -head, baseUnit, weekStartDay);\n            options.max = options.max || addDuration(autoMax, tail, baseUnit, weekStartDay);\n            options.minorUnit = options.minorUnit || majorUnit / 5;\n            options.majorUnit = majorUnit;\n            return options;\n        }\n        setDefaultOptions(DateValueAxis, {\n            type: DATE,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            labels: { dateFormats: DateLabelFormats }\n        });\n        var DEFAULT_MAJOR_UNIT = 10;\n        var LogarithmicAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options, chartService) {\n                var axisOptions = deepExtend({\n                    majorUnit: DEFAULT_MAJOR_UNIT,\n                    min: seriesMin,\n                    max: seriesMax\n                }, options);\n                var base = axisOptions.majorUnit;\n                var autoMax = autoAxisMax$1(seriesMax, base);\n                var autoMin = autoAxisMin$1(seriesMin, seriesMax, axisOptions);\n                var range = initRange(autoMin, autoMax, axisOptions, options);\n                axisOptions.max = range.max;\n                axisOptions.min = range.min;\n                axisOptions.minorUnit = options.minorUnit || round(base - 1, DEFAULT_PRECISION);\n                Axis.fn.init.call(this, axisOptions, chartService);\n                this.totalMin = defined(options.min) ? Math.min(autoMin, options.min) : autoMin;\n                this.totalMax = defined(options.max) ? Math.max(autoMax, options.max) : autoMax;\n                this.logMin = round(log(range.min, base), DEFAULT_PRECISION);\n                this.logMax = round(log(range.max, base), DEFAULT_PRECISION);\n                this.seriesMin = seriesMin;\n                this.seriesMax = seriesMax;\n                this.createLabels();\n            },\n            clone: function () {\n                return new LogarithmicAxis(this.seriesMin, this.seriesMax, $.extend({}, this.options), this.chartService);\n            },\n            startValue: function () {\n                return this.options.min;\n            },\n            getSlot: function (a, b, limit) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var step = dir * (lineSize / (logMax - logMin));\n                var slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n                var start = a;\n                var end = b;\n                if (!defined(start)) {\n                    start = end || 1;\n                }\n                if (!defined(end)) {\n                    end = start || 1;\n                }\n                if (start <= 0 || end <= 0) {\n                    return null;\n                }\n                if (limit) {\n                    start = Math.max(Math.min(start, options.max), options.min);\n                    end = Math.max(Math.min(end, options.max), options.min);\n                }\n                start = log(start, base);\n                end = log(end, base);\n                var p1, p2;\n                if (vertical) {\n                    p1 = logMax - Math.max(start, end);\n                    p2 = logMax - Math.min(start, end);\n                } else {\n                    p1 = Math.min(start, end) - logMin;\n                    p2 = Math.max(start, end) - logMin;\n                }\n                slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n                slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n                return slotBox;\n            },\n            getValue: function (point) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var lineBox = this.lineBox();\n                var dir = vertical === reverse ? 1 : -1;\n                var startEdge = dir === 1 ? 1 : 2;\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var step = (logMax - logMin) / lineSize;\n                var valueAxis = vertical ? Y : X;\n                var lineStart = lineBox[valueAxis + startEdge];\n                var offset = dir * (point[valueAxis] - lineStart);\n                var valueOffset = offset * step;\n                if (offset < 0 || offset > lineSize) {\n                    return null;\n                }\n                var value = logMin + valueOffset;\n                return round(Math.pow(base, value), DEFAULT_PRECISION);\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            scaleRange: function (delta) {\n                var base = this.options.majorUnit;\n                var offset = -delta;\n                return {\n                    min: Math.pow(base, this.logMin - offset),\n                    max: Math.pow(base, this.logMax + offset)\n                };\n            },\n            translateRange: function (delta) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (logMax - logMin);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if ((vertical || reverse) && !(vertical && reverse)) {\n                    offset = -offset;\n                }\n                return {\n                    min: Math.pow(base, logMin + offset),\n                    max: Math.pow(base, logMax + offset),\n                    offset: offset\n                };\n            },\n            labelsCount: function () {\n                var floorMax = Math.floor(this.logMax);\n                var count = Math.floor(floorMax - this.logMin) + 1;\n                return count;\n            },\n            getMajorTickPositions: function () {\n                var ticks = [];\n                this.traverseMajorTicksPositions(function (position) {\n                    ticks.push(position);\n                }, {\n                    step: 1,\n                    skip: 0\n                });\n                return ticks;\n            },\n            createTicks: function (lineGroup) {\n                var options = this.options;\n                var majorTicks = options.majorTicks;\n                var minorTicks = options.minorTicks;\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var lineBox = this.lineBox();\n                var ticks = [];\n                var tickLineOptions = { vertical: vertical };\n                function render(tickPosition, tickOptions) {\n                    tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                    tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                    tickLineOptions.position = tickPosition;\n                    lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n                }\n                if (majorTicks.visible) {\n                    this.traverseMajorTicksPositions(render, majorTicks);\n                }\n                if (minorTicks.visible) {\n                    this.traverseMinorTicksPositions(render, minorTicks);\n                }\n                return ticks;\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var vertical = options.vertical;\n                var lineBox = altAxis.lineBox();\n                var lineOptions = {\n                    lineStart: lineBox[vertical ? 'x1' : 'y1'],\n                    lineEnd: lineBox[vertical ? 'x2' : 'y2'],\n                    vertical: vertical\n                };\n                var majorTicks = [];\n                var container = this.gridLinesVisual();\n                function render(tickPosition, gridLine) {\n                    if (!inArray(tickPosition, majorTicks)) {\n                        lineOptions.position = tickPosition;\n                        container.append(createAxisGridLine(lineOptions, gridLine));\n                        majorTicks.push(tickPosition);\n                    }\n                }\n                if (majorGridLines.visible) {\n                    this.traverseMajorTicksPositions(render, majorGridLines);\n                }\n                if (minorGridLines.visible) {\n                    this.traverseMinorTicksPositions(render, minorGridLines);\n                }\n                return container.children;\n            },\n            traverseMajorTicksPositions: function (callback, tickOptions) {\n                var ref = this._lineOptions();\n                var lineStart = ref.lineStart;\n                var step = ref.step;\n                var ref$1 = this;\n                var logMin = ref$1.logMin;\n                var logMax = ref$1.logMax;\n                for (var power = Math.ceil(logMin) + tickOptions.skip; power <= logMax; power += tickOptions.step) {\n                    var position = round(lineStart + step * (power - logMin), DEFAULT_PRECISION);\n                    callback(position, tickOptions);\n                }\n            },\n            traverseMinorTicksPositions: function (callback, tickOptions) {\n                var this$1 = this;\n                var ref = this.options;\n                var min = ref.min;\n                var max = ref.max;\n                var minorUnit = ref.minorUnit;\n                var base = ref.majorUnit;\n                var ref$1 = this._lineOptions();\n                var lineStart = ref$1.lineStart;\n                var step = ref$1.step;\n                var ref$2 = this;\n                var logMin = ref$2.logMin;\n                var logMax = ref$2.logMax;\n                var start = Math.floor(logMin);\n                for (var power = start; power < logMax; power++) {\n                    var minorOptions = this$1._minorIntervalOptions(power);\n                    for (var idx = tickOptions.skip; idx < minorUnit; idx += tickOptions.step) {\n                        var value = minorOptions.value + idx * minorOptions.minorStep;\n                        if (value > max) {\n                            break;\n                        }\n                        if (value >= min) {\n                            var position = round(lineStart + step * (log(value, base) - logMin), DEFAULT_PRECISION);\n                            callback(position, tickOptions);\n                        }\n                    }\n                }\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var power = Math.ceil(this.logMin + index);\n                var value = Math.pow(this.options.majorUnit, power);\n                var text = this.axisLabelText(value, null, labelOptions);\n                return new AxisLabel(value, text, index, null, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return range.min <= value && value <= range.max;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta);\n                return this.limitRange(range.min, range.max, this.totalMin, this.totalMax, range.offset);\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            zoomRange: function (delta) {\n                var ref = this;\n                var options = ref.options;\n                var totalMin = ref.totalMin;\n                var totalMax = ref.totalMax;\n                var newRange = this.scaleRange(delta);\n                var min = limitValue(newRange.min, totalMin, totalMax);\n                var max = limitValue(newRange.max, totalMin, totalMax);\n                var base = options.majorUnit;\n                var acceptOptionsRange = max > min && options.min && options.max && round(log(options.max, base) - log(options.min, base), DEFAULT_PRECISION) < 1;\n                var acceptNewRange = !(options.min === totalMin && options.max === totalMax) && round(log(max, base) - log(min, base), DEFAULT_PRECISION) >= 1;\n                if (acceptOptionsRange || acceptNewRange) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            _minorIntervalOptions: function (power) {\n                var ref = this.options;\n                var minorUnit = ref.minorUnit;\n                var base = ref.majorUnit;\n                var value = Math.pow(base, power);\n                var nextValue = Math.pow(base, power + 1);\n                var difference = nextValue - value;\n                var minorStep = difference / minorUnit;\n                return {\n                    value: value,\n                    minorStep: minorStep\n                };\n            },\n            _lineOptions: function () {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var dir = vertical === reverse ? 1 : -1;\n                var startEdge = dir === 1 ? 1 : 2;\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var step = dir * (lineSize / (this.logMax - this.logMin));\n                var lineStart = lineBox[valueAxis + startEdge];\n                return {\n                    step: step,\n                    lineStart: lineStart,\n                    lineBox: lineBox\n                };\n            }\n        });\n        function initRange(autoMin, autoMax, axisOptions, options) {\n            var min = axisOptions.min;\n            var max = axisOptions.max;\n            if (defined(axisOptions.axisCrossingValue) && axisOptions.axisCrossingValue <= 0) {\n                throwNegativeValuesError();\n            }\n            if (!defined(options.max)) {\n                max = autoMax;\n            } else if (options.max <= 0) {\n                throwNegativeValuesError();\n            }\n            if (!defined(options.min)) {\n                min = autoMin;\n            } else if (options.min <= 0) {\n                throwNegativeValuesError();\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function autoAxisMin$1(min, max, options) {\n            var base = options.majorUnit;\n            var autoMin = min;\n            if (min <= 0) {\n                autoMin = max <= 1 ? Math.pow(base, -2) : 1;\n            } else if (!options.narrowRange) {\n                autoMin = Math.pow(base, Math.floor(log(min, base)));\n            }\n            return autoMin;\n        }\n        function autoAxisMax$1(max, base) {\n            var logMaxRemainder = round(log(max, base), DEFAULT_PRECISION) % 1;\n            var autoMax;\n            if (max <= 0) {\n                autoMax = base;\n            } else if (logMaxRemainder !== 0 && (logMaxRemainder < 0.3 || logMaxRemainder > 0.9)) {\n                autoMax = Math.pow(base, log(max, base) + 0.2);\n            } else {\n                autoMax = Math.pow(base, Math.ceil(log(max, base)));\n            }\n            return autoMax;\n        }\n        function throwNegativeValuesError() {\n            throw new Error('Non positive values cannot be used for a logarithmic axis');\n        }\n        function log(y, x) {\n            return Math.log(y) / Math.log(x);\n        }\n        setDefaultOptions(LogarithmicAxis, {\n            type: 'log',\n            majorUnit: DEFAULT_MAJOR_UNIT,\n            minorUnit: 1,\n            axisCrossingValue: 1,\n            vertical: true,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            zIndex: 1,\n            _deferLabels: true\n        });\n        var GridLinesMixin = {\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var radius = Math.abs(this.box.center().y - altAxis.lineBox().y1);\n                var gridLines = [];\n                var skipMajor = false;\n                var majorAngles, minorAngles;\n                if (options.majorGridLines.visible) {\n                    majorAngles = this.majorGridLineAngles(altAxis);\n                    skipMajor = true;\n                    gridLines = this.renderMajorGridLines(majorAngles, radius, options.majorGridLines);\n                }\n                if (options.minorGridLines.visible) {\n                    minorAngles = this.minorGridLineAngles(altAxis, skipMajor);\n                    append(gridLines, this.renderMinorGridLines(minorAngles, radius, options.minorGridLines, altAxis, skipMajor));\n                }\n                return gridLines;\n            },\n            renderMajorGridLines: function (angles, radius, options) {\n                return this.renderGridLines(angles, radius, options);\n            },\n            renderMinorGridLines: function (angles, radius, options, altAxis, skipMajor) {\n                var radiusCallback = this.radiusCallback && this.radiusCallback(radius, altAxis, skipMajor);\n                return this.renderGridLines(angles, radius, options, radiusCallback);\n            },\n            renderGridLines: function (angles, radius, options, radiusCallback) {\n                var style = {\n                    stroke: {\n                        width: options.width,\n                        color: options.color,\n                        dashType: options.dashType\n                    }\n                };\n                var center = this.box.center();\n                var circle = new Circle([\n                    center.x,\n                    center.y\n                ], radius);\n                var container = this.gridLinesVisual();\n                for (var i = 0; i < angles.length; i++) {\n                    var line = new Path(style);\n                    if (radiusCallback) {\n                        circle.radius = radiusCallback(angles[i]);\n                    }\n                    line.moveTo(circle.center).lineTo(circle.pointAt(angles[i] + 180));\n                    container.append(line);\n                }\n                return container.children;\n            },\n            gridLineAngles: function (altAxis, size, skip, step, skipAngles) {\n                var this$1 = this;\n                var divs = this.intervals(size, skip, step, skipAngles);\n                var options = altAxis.options;\n                var altAxisVisible = options.visible && (options.line || {}).visible !== false;\n                return map(divs, function (d) {\n                    var alpha = this$1.intervalAngle(d);\n                    if (!altAxisVisible || alpha !== 90) {\n                        return alpha;\n                    }\n                });\n            }\n        };\n        var RadarCategoryAxis = CategoryAxis.extend({\n            range: function () {\n                return {\n                    min: 0,\n                    max: this.options.categories.length\n                };\n            },\n            reflow: function (box) {\n                this.box = box;\n                this.reflowLabels();\n            },\n            lineBox: function () {\n                return this.box;\n            },\n            reflowLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var labels = ref.labels;\n                var labelOptions = ref.options.labels;\n                var skip = labelOptions.skip || 0;\n                var step = labelOptions.step || 1;\n                var measureBox = new Box();\n                for (var i = 0; i < labels.length; i++) {\n                    labels[i].reflow(measureBox);\n                    var labelBox = labels[i].box;\n                    labels[i].reflow(this$1.getSlot(skip + i * step).adjacentBox(0, labelBox.width(), labelBox.height()));\n                }\n            },\n            intervals: function (size, skipOption, stepOption, skipAngles) {\n                if (skipAngles === void 0) {\n                    skipAngles = false;\n                }\n                var options = this.options;\n                var categories = options.categories.length;\n                var divCount = categories / size || 1;\n                var divAngle = 360 / divCount;\n                var skip = skipOption || 0;\n                var step = stepOption || 1;\n                var divs = [];\n                var angle = 0;\n                for (var i = skip; i < divCount; i += step) {\n                    if (options.reverse) {\n                        angle = 360 - i * divAngle;\n                    } else {\n                        angle = i * divAngle;\n                    }\n                    angle = round(angle, COORD_PRECISION) % 360;\n                    if (!(skipAngles && inArray(angle, skipAngles))) {\n                        divs.push(angle);\n                    }\n                }\n                return divs;\n            },\n            majorIntervals: function () {\n                return this.intervals(1);\n            },\n            minorIntervals: function () {\n                return this.intervals(0.5);\n            },\n            intervalAngle: function (interval) {\n                return (360 + interval + this.options.startAngle) % 360;\n            },\n            majorAngles: function () {\n                var this$1 = this;\n                return map(this.majorIntervals(), function (interval) {\n                    return this$1.intervalAngle(interval);\n                });\n            },\n            createLine: function () {\n                return [];\n            },\n            majorGridLineAngles: function (altAxis) {\n                var majorGridLines = this.options.majorGridLines;\n                return this.gridLineAngles(altAxis, 1, majorGridLines.skip, majorGridLines.step);\n            },\n            minorGridLineAngles: function (altAxis, skipMajor) {\n                var ref = this.options;\n                var minorGridLines = ref.minorGridLines;\n                var majorGridLines = ref.majorGridLines;\n                var majorGridLineAngles = skipMajor ? this.intervals(1, majorGridLines.skip, majorGridLines.step) : null;\n                return this.gridLineAngles(altAxis, 0.5, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n            },\n            radiusCallback: function (radius, altAxis, skipMajor) {\n                if (altAxis.options.type !== ARC) {\n                    var minorAngle = rad(360 / (this.options.categories.length * 2));\n                    var minorRadius = Math.cos(minorAngle) * radius;\n                    var majorAngles = this.majorAngles();\n                    var radiusCallback = function (angle) {\n                        if (!skipMajor && inArray(angle, majorAngles)) {\n                            return radius;\n                        }\n                        return minorRadius;\n                    };\n                    return radiusCallback;\n                }\n            },\n            createPlotBands: function () {\n                var this$1 = this;\n                var plotBands = this.options.plotBands || [];\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                for (var i = 0; i < plotBands.length; i++) {\n                    var band = plotBands[i];\n                    var slot = this$1.plotBandSlot(band);\n                    var singleSlot = this$1.getSlot(band.from);\n                    var head = band.from - Math.floor(band.from);\n                    slot.startAngle += head * singleSlot.angle;\n                    var tail = Math.ceil(band.to) - band.to;\n                    slot.angle -= (tail + head) * singleSlot.angle;\n                    var ring = ShapeBuilder.current.createRing(slot, {\n                        fill: {\n                            color: band.color,\n                            opacity: band.opacity\n                        },\n                        stroke: { opacity: band.opacity }\n                    });\n                    group.append(ring);\n                }\n                this.appendVisual(group);\n            },\n            plotBandSlot: function (band) {\n                return this.getSlot(band.from, band.to - 1);\n            },\n            getSlot: function (from, to) {\n                var options = this.options;\n                var justified = options.justified;\n                var box = this.box;\n                var divs = this.majorAngles();\n                var totalDivs = divs.length;\n                var slotAngle = 360 / totalDivs;\n                var fromValue = from;\n                if (options.reverse && !justified) {\n                    fromValue = (fromValue + 1) % totalDivs;\n                }\n                fromValue = limitValue(Math.floor(fromValue), 0, totalDivs - 1);\n                var slotStart = divs[fromValue];\n                if (justified) {\n                    slotStart = slotStart - slotAngle / 2;\n                    if (slotStart < 0) {\n                        slotStart += 360;\n                    }\n                }\n                var toValue = limitValue(Math.ceil(to || fromValue), fromValue, totalDivs - 1);\n                var slots = toValue - fromValue + 1;\n                var angle = slotAngle * slots;\n                return new Ring(box.center(), 0, box.height() / 2, slotStart, angle);\n            },\n            slot: function (from, to) {\n                var slot = this.getSlot(from, to);\n                var startAngle = slot.startAngle + 180;\n                var endAngle = startAngle + slot.angle;\n                return new geometry.Arc([\n                    slot.center.x,\n                    slot.center.y\n                ], {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: slot.radius,\n                    radiusY: slot.radius\n                });\n            },\n            pointCategoryIndex: function (point) {\n                var this$1 = this;\n                var length = this.options.categories.length;\n                var index = null;\n                for (var i = 0; i < length; i++) {\n                    var slot = this$1.getSlot(i);\n                    if (slot.containsPoint(point)) {\n                        index = i;\n                        break;\n                    }\n                }\n                return index;\n            }\n        });\n        setDefaultOptions(RadarCategoryAxis, {\n            startAngle: 90,\n            labels: { margin: getSpacing(10) },\n            majorGridLines: { visible: true },\n            justified: true\n        });\n        deepExtend(RadarCategoryAxis.prototype, GridLinesMixin);\n        var PolarAxis = Axis.extend({\n            init: function (options, chartService) {\n                Axis.fn.init.call(this, options, chartService);\n                var instanceOptions = this.options;\n                instanceOptions.minorUnit = instanceOptions.minorUnit || instanceOptions.majorUnit / 2;\n            },\n            getDivisions: function (stepValue) {\n                return NumericAxis.prototype.getDivisions.call(this, stepValue) - 1;\n            },\n            reflow: function (box) {\n                this.box = box;\n                this.reflowLabels();\n            },\n            reflowLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var labelOptions = ref.options.labels;\n                var skip = labelOptions.skip || 0;\n                var step = labelOptions.step || 1;\n                var measureBox = new Box();\n                var divs = this.intervals(options.majorUnit, skip, step);\n                for (var i = 0; i < labels.length; i++) {\n                    labels[i].reflow(measureBox);\n                    var labelBox = labels[i].box;\n                    labels[i].reflow(this$1.getSlot(divs[i]).adjacentBox(0, labelBox.width(), labelBox.height()));\n                }\n            },\n            lineBox: function () {\n                return this.box;\n            },\n            intervals: function (size, skipOption, stepOption, skipAngles) {\n                if (skipAngles === void 0) {\n                    skipAngles = false;\n                }\n                var min = this.options.min;\n                var divisions = this.getDivisions(size);\n                var divs = [];\n                var skip = skipOption || 0;\n                var step = stepOption || 1;\n                for (var i = skip; i < divisions; i += step) {\n                    var current = (360 + min + i * size) % 360;\n                    if (!(skipAngles && inArray(current, skipAngles))) {\n                        divs.push(current);\n                    }\n                }\n                return divs;\n            },\n            majorIntervals: function () {\n                return this.intervals(this.options.majorUnit);\n            },\n            minorIntervals: function () {\n                return this.intervals(this.options.minorUnit);\n            },\n            intervalAngle: function (i) {\n                return (540 - i - this.options.startAngle) % 360;\n            },\n            createLine: function () {\n                return [];\n            },\n            majorGridLineAngles: function (altAxis) {\n                var majorGridLines = this.options.majorGridLines;\n                return this.gridLineAngles(altAxis, this.options.majorUnit, majorGridLines.skip, majorGridLines.step);\n            },\n            minorGridLineAngles: function (altAxis, skipMajor) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var majorGridLineAngles = skipMajor ? this.intervals(options.majorUnit, majorGridLines.skip, majorGridLines.step) : null;\n                return this.gridLineAngles(altAxis, options.minorUnit, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n            },\n            plotBandSlot: function (band) {\n                return this.getSlot(band.from, band.to);\n            },\n            getSlot: function (a, b) {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var startAngle = options.startAngle;\n                var start = limitValue(a, options.min, options.max);\n                var end = limitValue(b || start, start, options.max);\n                if (options.reverse) {\n                    start *= -1;\n                    end *= -1;\n                }\n                start = (540 - start - startAngle) % 360;\n                end = (540 - end - startAngle) % 360;\n                if (end < start) {\n                    var tmp = start;\n                    start = end;\n                    end = tmp;\n                }\n                return new Ring(box.center(), 0, box.height() / 2, start, end - start);\n            },\n            slot: function (from, to) {\n                if (to === void 0) {\n                    to = from;\n                }\n                var options = this.options;\n                var start = 360 - options.startAngle;\n                var slot = this.getSlot(from, to);\n                var min = Math.min(from, to);\n                var max = Math.max(from, to);\n                var startAngle, endAngle;\n                if (options.reverse) {\n                    startAngle = min;\n                    endAngle = max;\n                } else {\n                    startAngle = 360 - max;\n                    endAngle = 360 - min;\n                }\n                startAngle = (startAngle + start) % 360;\n                endAngle = (endAngle + start) % 360;\n                return new geometry.Arc([\n                    slot.center.x,\n                    slot.center.y\n                ], {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: slot.radius,\n                    radiusY: slot.radius\n                });\n            },\n            getValue: function (point) {\n                var options = this.options;\n                var center = this.box.center();\n                var dx = point.x - center.x;\n                var dy = point.y - center.y;\n                var theta = Math.round(deg(Math.atan2(dy, dx)));\n                var start = options.startAngle;\n                if (!options.reverse) {\n                    theta *= -1;\n                    start *= -1;\n                }\n                return (theta + start + 360) % 360;\n            },\n            valueRange: function () {\n                return {\n                    min: 0,\n                    max: Math.PI * 2\n                };\n            }\n        });\n        setDefaultOptions(PolarAxis, {\n            type: 'polar',\n            startAngle: 0,\n            reverse: false,\n            majorUnit: 60,\n            min: 0,\n            max: 360,\n            labels: { margin: getSpacing(10) },\n            majorGridLines: {\n                color: BLACK,\n                visible: true,\n                width: 1\n            },\n            minorGridLines: { color: '#aaa' }\n        });\n        deepExtend(PolarAxis.prototype, GridLinesMixin, {\n            createPlotBands: RadarCategoryAxis.prototype.createPlotBands,\n            majorAngles: RadarCategoryAxis.prototype.majorAngles,\n            range: NumericAxis.prototype.range,\n            labelsCount: NumericAxis.prototype.labelsCount,\n            createAxisLabel: NumericAxis.prototype.createAxisLabel\n        });\n        var RadarNumericAxisMixin = {\n            options: { majorGridLines: { visible: true } },\n            createPlotBands: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var type = ref.majorGridLines.type;\n                var plotBands = ref.plotBands;\n                if (plotBands === void 0) {\n                    plotBands = [];\n                }\n                var altAxis = this.plotArea.polarAxis;\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                for (var i = 0; i < plotBands.length; i++) {\n                    var band = plotBands[i];\n                    var bandStyle = {\n                        fill: {\n                            color: band.color,\n                            opacity: band.opacity\n                        },\n                        stroke: { opacity: band.opacity }\n                    };\n                    var slot = this$1.getSlot(band.from, band.to, true);\n                    var ring = new Ring(center, center.y - slot.y2, center.y - slot.y1, 0, 360);\n                    var shape = void 0;\n                    if (type === ARC) {\n                        shape = ShapeBuilder.current.createRing(ring, bandStyle);\n                    } else {\n                        shape = Path.fromPoints(this$1.plotBandPoints(ring, majorAngles), bandStyle).close();\n                    }\n                    group.append(shape);\n                }\n                this.appendVisual(group);\n            },\n            plotBandPoints: function (ring, angles) {\n                var innerPoints = [];\n                var outerPoints = [];\n                var center = [\n                    ring.center.x,\n                    ring.center.y\n                ];\n                var innerCircle = new Circle(center, ring.innerRadius);\n                var outerCircle = new Circle(center, ring.radius);\n                for (var i = 0; i < angles.length; i++) {\n                    innerPoints.push(innerCircle.pointAt(angles[i] + 180));\n                    outerPoints.push(outerCircle.pointAt(angles[i] + 180));\n                }\n                innerPoints.reverse();\n                innerPoints.push(innerPoints[0]);\n                outerPoints.push(outerPoints[0]);\n                return outerPoints.concat(innerPoints);\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var majorTicks = this.radarMajorGridLinePositions();\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var gridLines = [];\n                if (options.majorGridLines.visible) {\n                    gridLines = this.renderGridLines(center, majorTicks, majorAngles, options.majorGridLines);\n                }\n                if (options.minorGridLines.visible) {\n                    var minorTicks = this.radarMinorGridLinePositions();\n                    append(gridLines, this.renderGridLines(center, minorTicks, majorAngles, options.minorGridLines));\n                }\n                return gridLines;\n            },\n            renderGridLines: function (center, ticks, angles, options) {\n                var style = {\n                    stroke: {\n                        width: options.width,\n                        color: options.color,\n                        dashType: options.dashType\n                    }\n                };\n                var skip = options.skip;\n                if (skip === void 0) {\n                    skip = 0;\n                }\n                var step = options.step;\n                if (step === void 0) {\n                    step = 0;\n                }\n                var container = this.gridLinesVisual();\n                for (var tickIx = skip; tickIx < ticks.length; tickIx += step) {\n                    var tickRadius = center.y - ticks[tickIx];\n                    if (tickRadius > 0) {\n                        var circle = new Circle([\n                            center.x,\n                            center.y\n                        ], tickRadius);\n                        if (options.type === ARC) {\n                            container.append(new drawing.Circle(circle, style));\n                        } else {\n                            var line = new Path(style);\n                            for (var angleIx = 0; angleIx < angles.length; angleIx++) {\n                                line.lineTo(circle.pointAt(angles[angleIx] + 180));\n                            }\n                            line.close();\n                            container.append(line);\n                        }\n                    }\n                }\n                return container.children;\n            },\n            getValue: function (point) {\n                var lineBox = this.lineBox();\n                var altAxis = this.plotArea.polarAxis;\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var radius = point.distanceTo(center);\n                var distance = radius;\n                if (this.options.majorGridLines.type !== ARC && majorAngles.length > 1) {\n                    var dx = point.x - center.x;\n                    var dy = point.y - center.y;\n                    var theta = (deg(Math.atan2(dy, dx)) + 540) % 360;\n                    majorAngles.sort(function (a, b) {\n                        return angularDistance(a, theta) - angularDistance(b, theta);\n                    });\n                    var midAngle = angularDistance(majorAngles[0], majorAngles[1]) / 2;\n                    var alpha = angularDistance(theta, majorAngles[0]);\n                    var gamma = 90 - midAngle;\n                    var beta = 180 - alpha - gamma;\n                    distance = radius * (Math.sin(rad(beta)) / Math.sin(rad(gamma)));\n                }\n                return this.axisType().prototype.getValue.call(this, new Point(lineBox.x1, lineBox.y2 - distance));\n            }\n        };\n        function angularDistance(a, b) {\n            return 180 - Math.abs(Math.abs(a - b) - 180);\n        }\n        var RadarNumericAxis = NumericAxis.extend({\n            radarMajorGridLinePositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            radarMinorGridLinePositions: function () {\n                var options = this.options;\n                var minorSkipStep = 0;\n                if (options.majorGridLines.visible) {\n                    minorSkipStep = options.majorUnit;\n                }\n                return this.getTickPositions(options.minorUnit, minorSkipStep);\n            },\n            axisType: function () {\n                return NumericAxis;\n            }\n        });\n        deepExtend(RadarNumericAxis.prototype, RadarNumericAxisMixin);\n        var RadarLogarithmicAxis = LogarithmicAxis.extend({\n            radarMajorGridLinePositions: function () {\n                var positions = [];\n                this.traverseMajorTicksPositions(function (position) {\n                    positions.push(position);\n                }, this.options.majorGridLines);\n                return positions;\n            },\n            radarMinorGridLinePositions: function () {\n                var positions = [];\n                this.traverseMinorTicksPositions(function (position) {\n                    positions.push(position);\n                }, this.options.minorGridLines);\n                return positions;\n            },\n            axisType: function () {\n                return LogarithmicAxis;\n            }\n        });\n        deepExtend(RadarLogarithmicAxis.prototype, RadarNumericAxisMixin);\n        var WEIGHT = 0.333;\n        var EXTREMUM_ALLOWED_DEVIATION = 0.01;\n        var CurveProcessor = Class.extend({\n            init: function (closed) {\n                this.closed = closed;\n            },\n            process: function (dataPoints) {\n                var this$1 = this;\n                var points = dataPoints.slice(0);\n                var segments = [];\n                var closed = this.closed;\n                var length = points.length;\n                if (length > 2) {\n                    this.removeDuplicates(0, points);\n                    length = points.length;\n                }\n                if (length < 2 || length === 2 && points[0].equals(points[1])) {\n                    return segments;\n                }\n                var p0 = points[0];\n                var p1 = points[1];\n                var p2 = points[2];\n                segments.push(new Segment(p0));\n                while (p0.equals(points[length - 1])) {\n                    closed = true;\n                    points.pop();\n                    length--;\n                }\n                if (length === 2) {\n                    var tangent = this.tangent(p0, p1, X, Y);\n                    last(segments).controlOut(this.firstControlPoint(tangent, p0, p1, X, Y));\n                    segments.push(new Segment(p1, this.secondControlPoint(tangent, p0, p1, X, Y)));\n                    return segments;\n                }\n                var initialControlPoint, lastControlPoint;\n                if (closed) {\n                    p0 = points[length - 1];\n                    p1 = points[0];\n                    p2 = points[1];\n                    var controlPoints = this.controlPoints(p0, p1, p2);\n                    initialControlPoint = controlPoints[1];\n                    lastControlPoint = controlPoints[0];\n                } else {\n                    var tangent$1 = this.tangent(p0, p1, X, Y);\n                    initialControlPoint = this.firstControlPoint(tangent$1, p0, p1, X, Y);\n                }\n                var cp0 = initialControlPoint;\n                for (var idx = 0; idx <= length - 3; idx++) {\n                    this$1.removeDuplicates(idx, points);\n                    length = points.length;\n                    if (idx + 3 <= length) {\n                        p0 = points[idx];\n                        p1 = points[idx + 1];\n                        p2 = points[idx + 2];\n                        var controlPoints$1 = this$1.controlPoints(p0, p1, p2);\n                        last(segments).controlOut(cp0);\n                        cp0 = controlPoints$1[1];\n                        var cp1 = controlPoints$1[0];\n                        segments.push(new Segment(p1, cp1));\n                    }\n                }\n                if (closed) {\n                    p0 = points[length - 2];\n                    p1 = points[length - 1];\n                    p2 = points[0];\n                    var controlPoints$2 = this.controlPoints(p0, p1, p2);\n                    last(segments).controlOut(cp0);\n                    segments.push(new Segment(p1, controlPoints$2[0]));\n                    last(segments).controlOut(controlPoints$2[1]);\n                    segments.push(new Segment(p2, lastControlPoint));\n                } else {\n                    var tangent$2 = this.tangent(p1, p2, X, Y);\n                    last(segments).controlOut(cp0);\n                    segments.push(new Segment(p2, this.secondControlPoint(tangent$2, p1, p2, X, Y)));\n                }\n                return segments;\n            },\n            removeDuplicates: function (idx, points) {\n                while (points[idx + 1] && (points[idx].equals(points[idx + 1]) || points[idx + 1].equals(points[idx + 2]))) {\n                    points.splice(idx + 1, 1);\n                }\n            },\n            invertAxis: function (p0, p1, p2) {\n                var invertAxis = false;\n                if (p0.x === p1.x) {\n                    invertAxis = true;\n                } else if (p1.x === p2.x) {\n                    if (p1.y < p2.y && p0.y <= p1.y || p2.y < p1.y && p1.y <= p0.y) {\n                        invertAxis = true;\n                    }\n                } else {\n                    var fn = this.lineFunction(p0, p1);\n                    var y2 = this.calculateFunction(fn, p2.x);\n                    if (!(p0.y <= p1.y && p2.y <= y2) && !(p1.y <= p0.y && p2.y >= y2)) {\n                        invertAxis = true;\n                    }\n                }\n                return invertAxis;\n            },\n            isLine: function (p0, p1, p2) {\n                var fn = this.lineFunction(p0, p1);\n                var y2 = this.calculateFunction(fn, p2.x);\n                return p0.x === p1.x && p1.x === p2.x || round(y2, 1) === round(p2.y, 1);\n            },\n            lineFunction: function (p1, p2) {\n                var a = (p2.y - p1.y) / (p2.x - p1.x);\n                var b = p1.y - a * p1.x;\n                return [\n                    b,\n                    a\n                ];\n            },\n            controlPoints: function (p0, p1, p2) {\n                var xField = X;\n                var yField = Y;\n                var restrict = false;\n                var switchOrientation = false;\n                var tangent;\n                if (this.isLine(p0, p1, p2)) {\n                    tangent = this.tangent(p0, p1, X, Y);\n                } else {\n                    var monotonic = {\n                        x: this.isMonotonicByField(p0, p1, p2, X),\n                        y: this.isMonotonicByField(p0, p1, p2, Y)\n                    };\n                    if (monotonic.x && monotonic.y) {\n                        tangent = this.tangent(p0, p2, X, Y);\n                        restrict = true;\n                    } else {\n                        if (this.invertAxis(p0, p1, p2)) {\n                            xField = Y;\n                            yField = X;\n                        }\n                        if (monotonic[xField]) {\n                            tangent = 0;\n                        } else {\n                            var sign;\n                            if (p2[yField] < p0[yField] && p0[yField] <= p1[yField] || p0[yField] < p2[yField] && p1[yField] <= p0[yField]) {\n                                sign = numberSign((p2[yField] - p0[yField]) * (p1[xField] - p0[xField]));\n                            } else {\n                                sign = -numberSign((p2[xField] - p0[xField]) * (p1[yField] - p0[yField]));\n                            }\n                            tangent = EXTREMUM_ALLOWED_DEVIATION * sign;\n                            switchOrientation = true;\n                        }\n                    }\n                }\n                var secondControlPoint = this.secondControlPoint(tangent, p0, p1, xField, yField);\n                if (switchOrientation) {\n                    var oldXField = xField;\n                    xField = yField;\n                    yField = oldXField;\n                }\n                var firstControlPoint = this.firstControlPoint(tangent, p1, p2, xField, yField);\n                if (restrict) {\n                    this.restrictControlPoint(p0, p1, secondControlPoint, tangent);\n                    this.restrictControlPoint(p1, p2, firstControlPoint, tangent);\n                }\n                return [\n                    secondControlPoint,\n                    firstControlPoint\n                ];\n            },\n            restrictControlPoint: function (p1, p2, cp, tangent) {\n                if (p1.y < p2.y) {\n                    if (p2.y < cp.y) {\n                        cp.x = p1.x + (p2.y - p1.y) / tangent;\n                        cp.y = p2.y;\n                    } else if (cp.y < p1.y) {\n                        cp.x = p2.x - (p2.y - p1.y) / tangent;\n                        cp.y = p1.y;\n                    }\n                } else {\n                    if (cp.y < p2.y) {\n                        cp.x = p1.x - (p1.y - p2.y) / tangent;\n                        cp.y = p2.y;\n                    } else if (p1.y < cp.y) {\n                        cp.x = p2.x + (p1.y - p2.y) / tangent;\n                        cp.y = p1.y;\n                    }\n                }\n            },\n            tangent: function (p0, p1, xField, yField) {\n                var x = p1[xField] - p0[xField];\n                var y = p1[yField] - p0[yField];\n                var tangent;\n                if (x === 0) {\n                    tangent = 0;\n                } else {\n                    tangent = y / x;\n                }\n                return tangent;\n            },\n            isMonotonicByField: function (p0, p1, p2, field) {\n                return p2[field] > p1[field] && p1[field] > p0[field] || p2[field] < p1[field] && p1[field] < p0[field];\n            },\n            firstControlPoint: function (tangent, p0, p3, xField, yField) {\n                var t1 = p0[xField];\n                var t2 = p3[xField];\n                var distance = (t2 - t1) * WEIGHT;\n                return this.point(t1 + distance, p0[yField] + distance * tangent, xField, yField);\n            },\n            secondControlPoint: function (tangent, p0, p3, xField, yField) {\n                var t1 = p0[xField];\n                var t2 = p3[xField];\n                var distance = (t2 - t1) * WEIGHT;\n                return this.point(t2 - distance, p3[yField] - distance * tangent, xField, yField);\n            },\n            point: function (xValue, yValue, xField, yField) {\n                var controlPoint = new geometry.Point();\n                controlPoint[xField] = xValue;\n                controlPoint[yField] = yValue;\n                return controlPoint;\n            },\n            calculateFunction: function (fn, x) {\n                var length = fn.length;\n                var result = 0;\n                for (var i = 0; i < length; i++) {\n                    result += Math.pow(x, i) * fn[i];\n                }\n                return result;\n            }\n        });\n        function numberSign(value) {\n            return value <= 0 ? -1 : 1;\n        }\n        dataviz.Gradients = GRADIENTS;\n        kendo.deepExtend(kendo.dataviz, {\n            constants: constants,\n            services: services,\n            autoMajorUnit: autoMajorUnit,\n            Point: Point,\n            Box: Box,\n            Ring: Ring,\n            Sector: Sector,\n            ShapeBuilder: ShapeBuilder,\n            ShapeElement: ShapeElement,\n            ChartElement: ChartElement,\n            BoxElement: BoxElement,\n            RootElement: RootElement,\n            FloatElement: FloatElement,\n            Text: Text,\n            TextBox: TextBox,\n            Title: Title,\n            AxisLabel: AxisLabel,\n            Axis: Axis,\n            Note: Note,\n            CategoryAxis: CategoryAxis,\n            DateCategoryAxis: DateCategoryAxis,\n            DateValueAxis: DateValueAxis,\n            NumericAxis: NumericAxis,\n            LogarithmicAxis: LogarithmicAxis,\n            PolarAxis: PolarAxis,\n            RadarCategoryAxis: RadarCategoryAxis,\n            RadarNumericAxis: RadarNumericAxis,\n            RadarLogarithmicAxis: RadarLogarithmicAxis,\n            CurveProcessor: CurveProcessor,\n            rectToBox: rectToBox,\n            addClass: addClass,\n            removeClass: removeClass,\n            alignPathToPixel: alignPathToPixel,\n            clockwise: clockwise,\n            convertableToNumber: convertableToNumber,\n            deepExtend: deepExtend,\n            elementStyles: elementStyles,\n            getSpacing: getSpacing,\n            getTemplate: getTemplate,\n            getter: __common_getter_js,\n            grep: grep,\n            hasClasses: hasClasses,\n            HashMap: HashMap,\n            inArray: inArray,\n            interpolateValue: interpolateValue,\n            InstanceObserver: InstanceObserver,\n            isArray: isArray,\n            isFunction: isFunction,\n            isNumber: isNumber,\n            isObject: isObject,\n            isString: isString,\n            map: map,\n            mousewheelDelta: mousewheelDelta,\n            FontLoader: FontLoader,\n            setDefaultOptions: setDefaultOptions,\n            sparseArrayLimits: sparseArrayLimits,\n            styleValue: styleValue,\n            find: find,\n            append: append,\n            bindEvents: bindEvents,\n            Class: Class,\n            defined: defined,\n            deg: deg,\n            elementOffset: elementOffset,\n            elementSize: elementSize,\n            eventElement: eventElement,\n            eventCoordinates: eventCoordinates,\n            last: last,\n            limitValue: limitValue,\n            logToConsole: kendo.logToConsole,\n            objectKey: objectKey,\n            rad: rad,\n            round: round,\n            unbindEvents: unbindEvents,\n            valueOrDefault: valueOrDefault,\n            absoluteDateDiff: absoluteDateDiff,\n            addDuration: addDuration,\n            addTicks: addTicks,\n            ceilDate: ceilDate,\n            dateComparer: dateComparer,\n            dateDiff: dateDiff,\n            dateEquals: dateEquals,\n            dateIndex: dateIndex,\n            duration: duration,\n            floorDate: floorDate,\n            lteDateIndex: lteDateIndex,\n            startOfWeek: startOfWeek,\n            toDate: toDate,\n            parseDate: parseDate,\n            parseDates: parseDates,\n            toTime: toTime\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/core/core', ['dataviz/core/kendo-core'], f);\n}(function () {\n    (function ($) {\n        var dataviz = kendo.dataviz;\n        var services = dataviz.services;\n        var draw = kendo.drawing;\n        dataviz.SASS_THEMES = [\n            'sass',\n            'default-v2',\n            'bootstrap-v4',\n            'material-v2'\n        ];\n        dataviz.ExportMixin = {\n            extend: function (proto, skipLegacy) {\n                if (!proto.exportVisual) {\n                    throw new Error('Mixin target has no exportVisual method defined.');\n                }\n                proto.exportSVG = this.exportSVG;\n                proto.exportImage = this.exportImage;\n                proto.exportPDF = this.exportPDF;\n                if (!skipLegacy) {\n                    proto.svg = this.svg;\n                    proto.imageDataURL = this.imageDataURL;\n                }\n            },\n            exportSVG: function (options) {\n                return draw.exportSVG(this.exportVisual(), options);\n            },\n            exportImage: function (options) {\n                return draw.exportImage(this.exportVisual(options), options);\n            },\n            exportPDF: function (options) {\n                return draw.exportPDF(this.exportVisual(), options);\n            },\n            svg: function () {\n                if (draw.svg.Surface) {\n                    return draw.svg.exportGroup(this.exportVisual());\n                } else {\n                    throw new Error('SVG Export failed. Unable to export instantiate kendo.drawing.svg.Surface');\n                }\n            },\n            imageDataURL: function () {\n                if (!kendo.support.canvas) {\n                    return null;\n                }\n                if (draw.canvas.Surface) {\n                    var container = $('<div />').css({\n                        display: 'none',\n                        width: this.element.width(),\n                        height: this.element.height()\n                    }).appendTo(document.body);\n                    var surface = new draw.canvas.Surface(container[0]);\n                    surface.draw(this.exportVisual());\n                    var image = surface._rootElement.toDataURL();\n                    surface.destroy();\n                    container.remove();\n                    return image;\n                } else {\n                    throw new Error('Image Export failed. Unable to export instantiate kendo.drawing.canvas.Surface');\n                }\n            }\n        };\n        services.IntlService.register({\n            format: function (format) {\n                return kendo.format.apply(null, [format].concat(Array.prototype.slice.call(arguments, 1)));\n            },\n            toString: kendo.toString,\n            parseDate: kendo.parseDate\n        });\n        services.TemplateService.register({ compile: kendo.template });\n        dataviz.Point2D = dataviz.Point;\n        dataviz.Box2D = dataviz.Box;\n        dataviz.mwDelta = function (e) {\n            return dataviz.mousewheelDelta(e.originalEvent);\n        };\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.core', [\n        'dataviz/core/kendo-core',\n        'dataviz/core/core'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.core',\n        name: 'Core',\n        description: 'The DataViz core functions',\n        category: 'dataviz',\n        depends: [\n            'core',\n            'drawing'\n        ],\n        hidden: true\n    };\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}