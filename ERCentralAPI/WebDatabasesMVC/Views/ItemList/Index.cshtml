<!-- ItemList -->

@model ItemListWithCriteria
@using BusinessLibrary.BusinessClasses;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
<style>
    #ItemsGrid table {
        //background-color: yellow !important;
        //color: #00ff00 !important;
        table-layout: auto;
    }
</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/2.4.0/jszip.min.js"></script>
<script>
    @{var jdata = @Html.Raw(JsonConvert.SerializeObject(Model.items, new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() }));};
        var ListData = @jdata;
        const PageIndex = @Model.items.PageIndex;
        const TotPages = @Model.items.PageCount;
        var ColumnVisibility = {
            ItemId: false,
            ShortTitle: true,
            Title: true,
            Year: true,
            Authors: false,
            Journal: false
        };
    $(document).ready(function () {
            function onSelectColumnVisibility(e) {
                const txt = $(e.item).children(".k-link").text().trim();
                console.log("onSelectColumnVisibility", txt);
                if (txt == "Id") {
                    ColumnVisibility.ItemId = !ColumnVisibility.ItemId;
                    document.getElementById("cbItemId").checked = ColumnVisibility.ItemId;
                    }
            else if (txt == "Short Title") {
                        ColumnVisibility.ShortTitle = !ColumnVisibility.ShortTitle;
                        document.getElementById("cbShortTitle").checked = ColumnVisibility.ShortTitle;
                        }
            else if (txt == "Title") {
                            ColumnVisibility.Title = !ColumnVisibility.Title;
                            document.getElementById("cbTitle").checked = ColumnVisibility.Title;
                            }
            else if (txt == "Year") {
                                ColumnVisibility.Year = !ColumnVisibility.Year;
                                document.getElementById("cbYear").checked = ColumnVisibility.Year;
                                }
            else if (txt == "Authors") {
                                    ColumnVisibility.Authors = !ColumnVisibility.Authors;
                                    document.getElementById("cbAuthors").checked = ColumnVisibility.Authors;
                                    }
            else if (txt == "Journal") {
                                        ColumnVisibility.Journal = !ColumnVisibility.Journal;
                                        document.getElementById("cbJournal").checked = ColumnVisibility.Journal;
                                        }
                                        setColumns();
                                    };



        $(document).ready(function () {
            $("#menu").kendoMenu({
                                        select: onSelectColumnVisibility,
            });
            document.getElementById("cbItemId").checked = ColumnVisibility.ItemId;
            document.getElementById("cbShortTitle").checked = ColumnVisibility.ShortTitle;
            document.getElementById("cbTitle").checked = ColumnVisibility.Title;
            document.getElementById("cbYear").checked = ColumnVisibility.Year;
            document.getElementById("cbAuthors").checked = ColumnVisibility.Authors;
            document.getElementById("cbJournal").checked = ColumnVisibility.Journal;
            setColumns();
            });
        $("#ItemsGrid").kendoGrid({
            rowTemplate: kendo.template($("#ItemsGridTemplate").html()),
            columns: [
                {
                field: "itemId",
                    title: "Id",
                    width: "5%",
                    headerAttributes: {
                        "class": "ml-1 p-1 border-bottom"
                    }
                },
                {
                field: "shortTitle",
                    title: "Short title",
                    width: "10%",
                    headerAttributes: {
                        "class": "p-1 border-bottom"
                    }
                },
                {
                field: "title",
                    title: "Title",
                    width: "50%",
                    minResizableWidth: 100,
                    headerAttributes: {
                        "class": "p-1 border-bottom"
                    }
                },
                {
                field: "year",
                    title: "Year",
                    width: "5%",
                    headerAttributes: {
                        "class": "p-1 border-bottom"
                    }
                },
                {
                field: "authors",
                    title: "Authors",
                    width: "10%",
                    headerAttributes: {
                        "class": "p-1 border-bottom"
                    }
                },
                {
                field: "parentTitle",
                    title: "Journal",
                    width: "10%",
                    headerAttributes: {
                        "class": "p-1 border-bottom"
                    }
                }],
            dataSource: {
                data: ListData
            },

            //tableLayout: "auto",
            toolbar: ["search", "excel"],
            resizable: true,
            toolbar: [
                { template: kendo.template($("#gridToolbarTemplate").html()) }
            ],
            sortable: false,
            //mobile: "phone",
            search: {
                fields: ["title", "year", "itemId", "shortTitle", "authors", "journal"]
            }
            });
            });

    function QuickCitations() {
                var output = "";
                for (var itm of ListData) {
                    output += "<p>" + itm.quickCitation + "</p>";
                }
            $("#formattedCitations").html(output);
        }
    function setColumns() {
        console.log("setColumns", ColumnVisibility);
        var grid = $('#ItemsGrid').data('kendoGrid');
        if (ColumnVisibility.ItemId) {
            grid.showColumn(0);
        } else {
            grid.hideColumn(0);
        }
        if (ColumnVisibility.ShortTitle) {
            grid.showColumn(1);
        } else {
            grid.hideColumn(1);
        }
        if (ColumnVisibility.Title) {
            grid.showColumn(2);
        } else {
            grid.hideColumn(2);
        }
        if (ColumnVisibility.Year) {
            grid.showColumn(3);
        } else {
            grid.hideColumn(3);
        }
        if (ColumnVisibility.Authors) {
            grid.showColumn(4);
        } else {
            grid.hideColumn(4);
        }
        if (ColumnVisibility.Journal) {
            grid.showColumn(5);
        } else {
            grid.hideColumn(5);
        }
    }


    function PageToRisClick() {
        const data = ExportListToRIS(ListData);
        downloadRISFile(data);
    }
    function WholeListToRisClick() {
        let formData = { PageIndex: 0 }
        const form = $("#ListPagingForm");
        if (!form) return;
        const HiddenFields = form.children('input[type=hidden]');
        //console.log("WholeListToRisClick", HiddenFields);
        let ctn = 0;
        for (let i = 0; i < HiddenFields.length; i++) {
            let element = HiddenFields[i];
            //console.log("WholeListToRisClick", element, element.name, element.value, ctn);
            ctn++;
            formData[element.name] = element.value;

            //console.log("WholeListToRisClick", FormData);
        }
        let RISstring = "";
        $("#ExportToRisProgress").css("display", "inline");
        $("#ExportToRisProgressN").html((formData.PageIndex + 1).toString());
        //this starts a recursive call!!
        $.post("ListFromCritJSON", formData, function (data, result) {
            interimWholeListToRisClick(data, result, formData, RISstring);
        }).fail(function (response) {
            interimFail(response);
        });

        //let file = ExportListToRIS(ListData);
        //downloadRISFile(file);
    }
    function interimFail(response) {
        alert('Error: ' + response.responseText);
        $("#ExportToRisProgress").hide();
    }
    function interimWholeListToRisClick(response, result, formData, RISstring) {
        console.log("interimWholeListToRisClick", formData, response);
        RISstring += ExportListToRIS(response.items);
        formData.PageIndex++;
        if (formData.PageIndex < TotPages) {
            //get the next page
            $("#ExportToRisProgressN").html((formData.PageIndex + 1).toString());
            $.post("ListFromCritJSON", formData, function (data, result) {
                interimWholeListToRisClick(data, result, formData, RISstring);
            }).fail(function (response) {
                interimFail(response);
            });
        }
        else {
            //all done!
            downloadRISFile(RISstring, true);
        }
    }

    function downloadRISFile(risData, hideProgress = false) {
        const file = new Blob([risData], { type: 'text/plain' });
        const blobUrl = URL.createObjectURL(file);
        // Save the need for file-save.js
        const link = document.createElement("a");
        link.href = blobUrl;
        link.download = 'references.ris';
        link.click();
        if (hideProgress) setTimeout(()=> $("#ExportToRisProgress").hide(), 3000);
    }
    function ExportListToRIS(list) {
        console.log("ExportListToRIS", list);
        const len = list.length;
        let risData = '';
        for (let i = 0; i < len; i++) {
            risData += exportItemToRIS(list[i]);
        }
        return risData;
    }
    function exportItemToRIS(it) {
        const calend = [
            'Jan',
            'Feb',
            'Mar',
            'Apr',
            'May',
            'Jun',
            'Jul',
            'Aug',
            'Sep',
            'Oct',
            'Nov',
            'Dec',

        ];
        const newLine = '\r\n';
        let res = 'TY  - ';
        let tmp = '';
        switch (it.typeId) {
            case 14:
                res += 'JOUR' + newLine;
                break;
            case 1:
                res += 'RPRT' + newLine;
                break;
            case 2:
                res += 'BOOK' + newLine;
                break;
            case 3:
                res += 'CHAP' + newLine;
                break;
            case 4:
                res += 'THES' + newLine;
                break;
            case 5:
                res += 'CONF' + newLine;
                break;
            case 6:
                res += 'ELEC' + newLine;
                break;
            case 7:
                res += 'ELEC' + newLine;
                break;
            case 8:
                res += 'ADVS' + newLine;
                break;
            case 10:
                res += 'MGZN' + newLine;
                break;
            default:
                res += 'GEN' + newLine;
                break;
        }
        res += 'T1  - ' + it.title + newLine;
        if (it.typeId == 10 || it.typeId == 14)
            res += 'JF  - ' + it.parentTitle + newLine;
        else res += 'T2  - ' + it.parentTitle + newLine;
        if (it.authors) {
            for (let au of it.authors.split(';')) {
                tmp = au.trim();
                if (tmp != '') res += 'A1  - ' + tmp + newLine;
            }
        }
        if (it.parentAuthors) {
            for (let au of it.parentAuthors.split(';')) {
                tmp = au.trim();
                if (tmp != '') res += 'A2  - ' + tmp + newLine;
            }
        }

        //console.log("Item to ris, got here!", it);
        res +=
            'KW  - eppi-reviewer4' +
            newLine +
            (it.keywords && it.keywords.length > 2
                ? it.keywords.trim() + newLine
                : '');
        let tmpDate = '';
        let Month = safeParseInt(it.month);

        //console.log("Item to ris, got here!1", it.month);
        if (it.month && (!Month || Month < 1 || Month > 12)) {
            Month =
                1 + it.month.length > 2
                    ? calend.indexOf(it.month.substring(0, 3)) + 1
                    : 0;
        }

        //console.log("Item to ris, got here!2");
        let yr = safeParseInt(it.year);
        if (it.year !== '' && yr) {
            if (yr > 0) {
                if (yr < 20) yr += 1900;
                else if (yr < 100) yr += 2000;
                if (yr.toString().length == 4) {
                    res += 'py  - ' + yr.toString() + newLine;
                    if (Month != 0) {
                        tmpDate +=
                            it.year +
                            '/' +
                            (Month.toString().length == 1
                                ? '0' + Month.toString()
                                : Month.toString()) +
                            '//';
                    } else {
                        tmpDate += it.year + '///' + it.Month; //"y1  - "
                    }
                }
            }
        }

        //console.log("Item to ris, got here!3");
        if (tmpDate.length > 0) {
            res += 'DA  - ' + tmpDate + newLine;
            res += 'Y1  - ' + tmpDate;

            //little trick: edition information is supposed to be the additional info at the end of the
            //Y1 filed. For Thesis pubtype (4) we use the edition field to hold the thesys type,
            //the following finishes up the Y1 field keeping all this into account

            if (it.typeId == 4 && it.edition.length > 0)
                res += newLine + 'KW  - ' + it.edition + newLine;
            else if (it.edition.length > 0) res += ' ' + it.edition + newLine;
            else res += newLine;
        } else if (it.typeId == 4 && it.edition.length > 0) {
            res += newLine + 'KW  - ' + it.edition + newLine;
        } //end of little trick

        //console.log("Item to ris, got here!4");
        res += 'AB  - ' + it.abstract + newLine;
        if (it.doi.length > 0) res += 'DO  - ' + it.doi + newLine;
        res += 'VL  - ' + it.volume + newLine;
        res += 'IS  - ' + it.issue + newLine;
        let split = '-';
        Yr = it.pages.indexOf(split);
        if (Yr > 0) {
            let pgs = it.pages.split(split);
            res += 'SP  - ' + pgs[0] + newLine;
            res += 'EP  - ' + pgs[1] + newLine;
        } else if (it.pages.length > 0) res += 'SP  - ' + it.pages + newLine;
        res +=
            'CY  - ' +
            it.city +
            (it.country.length > 0 ? ' ' + it.country : '') +
            newLine;
        if (it.url.length > 0) res += 'UR  - ' + it.url + newLine;
        if (it.availability.length > 0) res += 'AV  - ' + it.availability + newLine;
        if (it.publisher.length > 0) res += 'PB  - ' + it.publisher + newLine;
        if (it.standardNumber.length > 0)
            res += 'SN  - ' + it.standardNumber + newLine;
        res += 'U1  - ' + it.itemId.toString() + newLine;
        if (it.oldItemId.length > 0) res += 'U2  - ' + it.oldItemId + newLine;

        res += 'N1  - ' + it.comments + newLine;

        res += 'ER  - ' + newLine + newLine;

        res = res.replace('     ', ' ');
        res = res.replace('    ', ' ');
        res = res.replace('   ', ' ');
        res = res.replace('   ', ' ');
        return res;
    }
    function safeParseInt(value) {
        const parsed = parseInt(value, 10);
        if (isNaN(parsed)) {
            return 0;
        }
        return parsed;
    }
</script>

<br />
<br />
<br />
<br />
<table width="100%">
    <tr>
        <td style="padding:0px 20px 0px 20px">
            <div class="main-panel main-panel-no-sidebar">



                <div class="card">
                    <div class="card-body">

                        <div class="content-full">

                            <table width="100%">
                                <tr>
                                    <td width="30%">
                                        <h5 class="card-title mb-3">List records</h5>
                                        <h5><b>@Model.criteria.description.Replace("\'", "&#39;")</b></h5>
                                    
                                    </td>    
                                    <td width="40%" style="vertical-align:bottom;text-align:center">

                                        @if (Model.items.PageCount > 1)
                                        {

                                        <form asp-controller="ItemList" asp-action="ListFromCrit" method="post" class="form-inline" id="ListPagingForm">

                                            <button class="btn btn-round btn-outline-primary px-1 py-0 m-1" style="width:90px" type="submit" disabled="@(Model.items.PageIndex == 0)"
                                                    name="PageNumber" value="@(Model.items.PageIndex - 1)">
                                                Previous
                                            </button>
                                            <div class="my-auto">&nbsp;&nbsp;Page @(Model.items.PageIndex + 1) of @(Model.items.PageCount)&nbsp;&nbsp;</div>
                                            <button class="btn btn-round btn-outline-primary px-1 py-0 m-1" style="width:90px" type="submit" disabled="@(Model.items.PageIndex == Model.items.PageCount - 1)"
                                                    name="PageNumber" value="@(Model.items.PageIndex + 1)">
                                                Next
                                            </button>

                                            <input type="hidden" value="@Model.criteria.onlyIncluded.ToString()" name="onlyIncluded" />
                                            <input type="hidden" value="@Model.criteria.showDeleted" name="showDeleted" />
                                            <input type="hidden" value="@Model.criteria.sourceId" name="sourceId" />
                                            <input type="hidden" value="@Model.criteria.searchId" name="searchId" />
                                            <input type="hidden" value="@Model.criteria.xAxisSetId" name="xAxisSetId" />
                                            <input type="hidden" value="@Model.criteria.xAxisAttributeId" name="xAxisAttributeId" />
                                            <input type="hidden" value="@Model.criteria.yAxisSetId" name="yAxisSetId" />
                                            <input type="hidden" value="@Model.criteria.yAxisAttributeId" name="yAxisAttributeId" />
                                            <input type="hidden" value="@Model.criteria.filterSetId" name="filterSetId" />
                                            <input type="hidden" value="@Model.criteria.filterAttributeId" name="filterAttributeId" />
                                            <input type="hidden" value="@Model.criteria.attributeSetIdList" name="attributeSetIdList" />
                                            <input type="hidden" value="@Model.criteria.listType" name="listType" />
                                            <input type="hidden" value="@Model.criteria.pageNumber" name="pageNumber" />
                                            <input type="hidden" value="@Model.criteria.pageSize" name="pageSize" />
                                            <input type="hidden" value="@Model.criteria.workAllocationId" name="workAllocationId" />
                                            <input type="hidden" value="@Model.criteria.magSimulationId" name="magSimulationId" />
                                            <input type="hidden" value="@Model.criteria.comparisonId" name="comparisonId" />
                                            <input type="hidden" value="@Model.criteria.description" name="description" />
                                            <input type="hidden" value="@Model.criteria.contactId" name="contactId" />
                                            <input type="hidden" value="@Model.criteria.setId" name="setId" />
                                            <input type="hidden" value="@Model.criteria.showInfoColumn" name="showInfoColumn" />
                                            <input type="hidden" value="@Model.criteria.showScoreColumn" name="showScoreColumn" />
                                            <input type="hidden" value="@Model.criteria.webDbId" name="webDbId" />
                                            <input type="hidden" value="@Model.criteria.withAttributesIds" name="withAttributesIds" />
                                            <input type="hidden" value="@Model.criteria.withSetIdsList" name="withSetIdsList" />
                                            <input type="hidden" value="@Model.criteria.withOutAttributesIdsList" name="withOutAttributesIdsList" />
                                            <input type="hidden" value="@Model.criteria.withOutSetIdsList" name="withOutSetIdsList" />
                                            <input type="hidden" value="@Model.criteria.searchWhat" name="searchWhat" />
                                            <input type="hidden" value="@Model.criteria.searchString" name="searchString" />


                                        </form>
                                        }
                                        else
                                        {
                                            <div class=" px-1 py-0 m-1">&nbsp;</div>
                                        }

                                        <!--
                                        @if (@Model.criteria.description != "")
                                        {
                                            <div class="ml-2 my-auto px-1 alert-light rounded">@Model.criteria.description</div>
                                        }
                                        -->
                                    </td>
                                    <td width="30%" style="text-align:right">

                                        <div class="d-inline-block ml-auto mr-0 border rounded" >
                                            <ul id="menu" class="d-inline-block p-0">
                                                <li class="py-1">
                                                    <span class="btn-label">
                                                        <i class="fa fa-table"></i>
                                                    </span>
                                                    &nbsp;&nbsp;Columns&nbsp;&nbsp;
                                                    <ul>
                                                        <li>
                                                            <input type="checkbox" class="ml-1" id="cbItemId" />&nbsp;&nbsp;Id
                                                        </li>
                                                        <li>
                                                            <input type="checkbox" class="ml-1" id="cbShortTitle" />&nbsp;&nbsp;Short Title
                                                        </li>
                                                        <li>
                                                            <input type="checkbox" class="ml-1" id="cbTitle" />&nbsp;&nbsp;Title
                                                        </li>
                                                        <li>
                                                            <input type="checkbox" class="ml-1" id="cbYear" />&nbsp;&nbsp;Year
                                                        </li>
                                                        <li>
                                                            <input type="checkbox" class="ml-1" id="cbAuthors" />&nbsp;&nbsp;Authors
                                                        </li>
                                                        <li>
                                                            <input type="checkbox" class="ml-1" id="cbJournal" />&nbsp;&nbsp;Journal
                                                        </li>
                                                    </ul>
                                                </li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                            
                                

                                

                                
                            


                            <div class="card-body">

                                <div id="ItemsGrid" class="table-striped" style="height:85vh;">
                                </div>

                                <script id="ItemsGridTemplate" type="text/x-kendo-tmpl">
                                    <table>
                                        <tr class="border border-bottom ">
                                            <td class="px-1 py-0 border-bottom small ">
                                                <form action="ItemDetails" method="post" class="form-inline">
                                                    <button class="btn btn-link px-1 py-0 my-1 mx-0" type="submit"
                                                            name="itemId" value="#= itemId #">
                                                        #= itemId #
                                                    </button>
                                                </form>
                                            </td>
                                            <td class="px-1 py-0 border-bottom small ">
                                                #= shortTitle #
                                            </td>
                                            <td class="px-1 py-0 border-bottom ">
                                                <form action="ItemDetails" method="post" class="form-inline">
                                                    <button class="text-left btn-link px-1 py-0 my-1 mx-0" type="submit" style="overflow: !important;"
                                                            name="itemId" value="#= itemId #">
                                                        #= title #
                                                    </button>
                                                </form>
                                            </td>
                                            <td class="px-1 py-0 border-bottom small ">
                                                #= year #
                                            </td>
                                            <td class="px-1 py-0 border-bottom small ">
                                                #= authors #
                                            </td>
                                            <td class="px-1 py-0 border-bottom small ">
                                                #= parentTitle #
                                            </td>
                                        </tr>
                                    </table>
                                </script>

                                
                                <script id="gridToolbarTemplate" type="text/x-kendo-template">
                                    <a class="k-button btn-round btn-info btn-border" href="\#" onclick="return QuickCitations()">
                                        <span class="btn-label">
                                            <i class="fa fa-pencil-alt mr-1"></i>
                                        </span>Citations&nbsp;
                                    </a>

                                    <a class="k-button k-button-icontext k-grid-excel btn-round btn-info btn-border" href="\#">
                                        <span class="btn-label">
                                            <i class="fa fa-file-excel mr-1"></i>
                                        </span>Excel&nbsp;
                                    </a>

                                    <a class="k-button btn-round btn-info btn-border" href="\#" onclick="return PageToRisClick()">
                                        <span class="btn-label">
                                            <i class="k-icon k-i-list-bulleted mr-1"></i>
                                        </span>To RIS (page)&nbsp;
                                    </a>
                                    @if (Model.items.PageCount > 1)
                                    {
                                        <a class="k-button btn-round btn-info btn-border" href="\#" onclick="return WholeListToRisClick()">
                                            <span class="btn-label">
                                                <i class="k-icon k-i-list-bulleted mr-1"></i>
                                            </span>To RIS (all)&nbsp;
                                        </a>
                                        
                                        <div class="alert-danger ml-1" id="ExportToRisProgress" style="display: none;">
                                            Exporting to RIS: page <span id="ExportToRisProgressN"></span> of @Model.items.PageCount
                                        </div>

                                    }

                                    <span class="k-textbox k-grid-search k-display-flex m-0 p-0 small">
                                        <input autocomplete="off" placeholder="Filter..." title="Filter..." class="k-input px-1">
                                        <span class="k-input-icon">
                                            <span class="k-icon k-i-search"></span>
                                        </span>
                                    </span>
                                </script>

                            </div>


                        </div>
                    </div>
                </div>


                <div class="card">
                    <div class="card-body">
                        <div id="formattedCitations"></div>
                    </div>
                </div>



            </div>
        </td>
    </tr>
</table>


