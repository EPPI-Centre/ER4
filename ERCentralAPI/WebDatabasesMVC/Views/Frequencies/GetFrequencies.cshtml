@model BusinessLibrary.BusinessClasses.WebDbFrequencyCrosstabAndMapSelectionCriteria
@using BusinessLibrary.BusinessClasses


<input type="hidden" value="@Model.included" name="included" id="includedCrit" />
<input type="hidden" value="@Model.attributeIdXAxis" name="attributeIdXAxis" id="attributeIdXAxisCrit" />
<input type="hidden" value="@Model.setIdXAxis" name="setIdXAxis" id="setIdXAxisCrit" />
<input type="hidden" value="@Model.nameXAxis" name="nameXAxis" id="nameXAxisCrit" />
<input type="hidden" value="@Model.onlyThisAttribute" name="onlyThisAttribute" id="onlyThisAttributeCrit" />
<input type="hidden" value="@Model.webDbId" name="webDbId" id="webDbIdCrit" />

<script type="text/javascript">


    let freqData = null;
    let rgx = new RegExp("'", 'g');
    let rgx2 = new RegExp("↖", 'g');
    $(document).ready(function () {
        //console.log("ready function is happening");
        var pars = {
            attributeIdXAxis: @Model.attributeIdXAxis
            , setIdXAxis: @Model.setIdXAxis
            , attributeIdYAxis: @Model.attributeIdYAxis
            , setIdYAxis: @Model.setIdYAxis
            , segmentsParent: @Model.segmentsParent
            , setIdSegments: @Model.setIdSegments
            , included: @Model.included
            , graphic: "table"
        }
        $("#spinner").show();
        $("#resultsTable").hide();
        $.post("../Frequencies/GetFrequenciesResultsJSON", pars, (data, status) => buildResults(data, status));
    });

    function buildResults(data, status) {
        if (data && status == "success") {
            freqData = data;
            GoToFreq();
        }
        else if (status != "success") {
            //show some error message??
        }
    }

    function GoToFreq() {
        $("#BarOrPieChartVisible").hide();
        $("#FrequenciesChart").hide();
        let counter = 0;
        let innerHtml = "";
        for (let itm of freqData)
        {
            innerHtml += '<div class="row">';
            counter++;
            if (counter % 2 == 0) {
                innerHtml += '<div class="col text-left border-bottom" style="background-color:#ebedf2">' + itm.attribute + '</div>';
                innerHtml += '<div class="col text-left border-bottom" style="background-color:#ebedf2">';
            }
            else {
                innerHtml += "<div class=\"col text-left border-bottom\">" + itm.attribute + "</div>";
                innerHtml += "<div class=\"col text-left border-bottom\">";
            }
            if (itm.itemCount == 0)
            {
                innerHtml += '<text>0</text>';
            }
            else if (itm.attributeId == -999999) {
                innerHtml += "<a href=\"javascript:GoToItemsJson(" + itm.attributeId + ", '" + HTMLEncodeText($("#nameXAxisCrit").val()).replace(rgx, "&#39;") + "')\" >" + itm.itemCount + "</a>";
            }
            else {
                innerHtml += "<a href=\"javascript:GoToItemsJson(" + itm.attributeId + ", '" + HTMLEncodeText(itm.attribute).replace(rgx, "&#39;") + "')\">" + itm.itemCount + "</a>";
            }
            innerHtml += "</div></div>";
        }

        $("#spinner").hide();
        $("#FrequenciesGridRows").html(innerHtml);
        $("#FrequenciesGrid").show();
    }



    @*function GetFreqsBar() {
        if (!@Model.criteria.setIdXAxis) {
            return;
        }

        if (@Model.criteria.attributeIdXAxis == 0) {
            $.post("../Frequencies/GetFrequenciesJSON", { attId: 0, setId: @Model.criteria.setIdXAxis, included: true }, function (data, result) { BuildBar(data, result); })
        }
        else {
            $.post("../Frequencies/GetFrequenciesJSON", { attId: @Model.criteria.attributeIdXAxis, setId: @Model.criteria.setIdXAxis, included: true }, function (data, result) { BuildBar(data, result); })
        }
    }*@


    @*function GetFreqsPie() {
        if (!@Model.criteria.setIdXAxis) {
            return;
        }

        if (@Model.criteria.attributeIdXAxis == 0) {
            $.post("../Frequencies/GetFrequenciesJSON", { attId: 0, setId: @Model.criteria.setIdXAxis, included: true }, function (data, result) { BuildPie(data, result); })
        }
        else {
            $.post("../Frequencies/GetFrequenciesJSON", { attId: @Model.criteria.attributeIdXAxis, setId: @Model.criteria.setIdXAxis, included: true }, function (data, result) { BuildPie(data, result); })
        }
    }*@

    function BuildBar() {
        
        $("#BarOrPieChartVisible").show();
        $("#FrequenciesGrid").hide();
        $("#FrequenciesChart").show();
        //$("#FrequenciesResult").text("Frequencies for: " + $("#nameXAxisCrit").val());
        //$("#FrequenciesResult").show();

        $("#FrequenciesChart").kendoChart({
            dataSource: { data: freqData },
            categoryAxis: {
                field: "attribute"
            },
            series: [
                { field: "itemCount" }
            ],
            seriesDefaults: {
                type: 'bar'
            },
            seriesClick: function (e) {
                GoToListBar(e);
            },
            chartArea: {
                height: 250
            },
            tooltip: {
                visible: true,
                template: "#= category #: #= value # records"
            }
        });
        
    }


    function BuildPie() {
        
        $("#BarOrPieChartVisible").show();
        $("#FrequenciesGrid").hide();
        $("#FrequenciesChart").show();
        //$("#FrequenciesResult").html("Frequencies for: " + data.criteria.nameXAxis);
        //$("#FrequenciesResult").show();

        $("#FrequenciesChart").kendoChart({
            dataSource: { data: freqData },
            legend: {
                position: "right"
            },
            chartArea: {
                height: 250
            },
            seriesDefaults: {
                type: "pie"
            },
            seriesClick: function (e) {
                GoToListPie(e);
            },
            series: [{
                field: "itemCount",
                categoryField: "attribute",
                padding: 0
            }],
            tooltip: {
                visible: true,
                template: "#= category #: #= value # records"
            }
        });
    }

    function GoToListPie(dataItem) {
        $("#ItemCount").html("Loading...");
        $("#ItemsGrid").empty();
        $("#ItemsGrid").kendoGrid();
        if (dataItem.dataItem.attributeId == -999999) {

            var attributeIdXAxis = $('#attributeIdXAxisCrit').val();
            $.post("../ItemList/GetFreqListNoneOfTheAboveJSon"
                , {
                    attributeIdXAxis: attributeIdXAxis
                    , setId: dataItem.dataItem.setId
                    , included: "true"
                    , onlyThisAttribute: 0
                    , attName: dataItem.dataItem.attribute
                }
                , function (data, result) { BuildItems(data, result); }
            );
        }
        else {
            //postwith("../ItemList/GetFreqList", {
            //    attId: dataItem.dataItem.attributeId
            //    , attName: dataItem.dataItem.attribute
            //});
            $.post("../ItemList/GetFreqListJSon", {
                attId: dataItem.dataItem.attributeId
                , attName: dataItem.dataItem.attribute
            }
                , function (data, result) { BuildItems(data, result); }
            );
        }
    }

    function GoToListBar(dataItem) {
        $("#ItemCount").html("Loading...");
        $("#ItemsGrid").empty();
        $("#ItemsGrid").kendoGrid();
        if (dataItem.dataItem.attributeId == -999999) {
            var attributeIdXAxis = $('#attributeIdXAxisCrit').val();
            $.post("../ItemList/GetFreqListNoneOfTheAboveJSon", {
                attributeIdXAxis: attributeIdXAxis
                , setId: dataItem.dataItem.setId
                , included: "true"
                , onlyThisAttribute: 0
                , attName: dataItem.dataItem.attribute
            }
                , function (data, result) { BuildItems(data, result); })
        }
        else {
            //postwith("../ItemList/GetFreqList", {
            //    attId: dataItem.dataItem.attributeId
            //    , attName: dataItem.dataItem.attribute
            //}
            $.post("../ItemList/GetFreqListJSon", {
                attId: dataItem.dataItem.attributeId
                , attName: dataItem.dataItem.attribute
            }
                , function (data, result) { BuildItems(data, result); }
            )
        }
    }

    function ExportImg() {
        var title = "@Model.nameXAxis.Replace("\'", "&#39;")";
        var chart = $("#FrequenciesChart").getKendoChart();
        chart.exportImage().done(function (data) {
            kendo.saveAs({
                dataURI: data,
                fileName: title
                /*, proxyURL: "https://demos.telerik.com/kendo-ui/service/export"*/
            });
        });
    };

    function GoToItemsJson(AttId, AttName = '') {
        $("#ItemCount").html("Loading...");
        $("#ItemsGrid").empty();
        $("#ItemsGrid").kendoGrid();
        if (AttId == -999999) {
            AttName = 'None of the above';
            var included = $('#includedCrit').val();
            var attributeIdXAxis = $('#attributeIdXAxisCrit').val();
            var setIdXAxis = $('#setIdXAxisCrit').val();
            var onlyThisAttribute = $('#onlyThisAttributeCrit').val();
            var webDbId = $('#webDbIdCrit').val();
            $.post("../ItemList/GetFreqListNoneOfTheAboveJSon"
                , {
                    attributeIdXAxis: attributeIdXAxis
                    , setId: setIdXAxis
                    , included: included
                    , onlyThisAttribute: onlyThisAttribute
                    , attName: AttName
                }
                , function (data, result) { BuildItems(data, result); }
            );
        } else {
            $.post("../ItemList/GetFreqListJSon"
                , { attId: AttId, attName: AttName.replaceAll('&#39;', '\'') }
                , function (data, result) { BuildItems(data, result); }
            );
        }
    };

</script>



<br />
<br />
<br />

<div class="main-panel main-panel-no-sidebar">

    <div class="page-inner">

        <div class="card">
            <div class="card-body">
                <table width="100%">
                    <tr>
                        <td>
                            <h5 class="card-title mb-3">Frequency report</h5><h5><b>@Model.nameXAxis.Replace("\'", "&#39;")</b></h5>
                        </td>
                        <td style="text-align:right">
                            <div class="card-tools">
                                <button class="btn btn-primary btn-sm btn-round" onclick="GoToFreq()">
                                    <span class="btn-label">
                                        <i class="fa fa-table"></i>
                                    </span>
                                    Table
                                </button>
                                <button class="btn btn-primary btn-sm btn-round" onclick="BuildBar()">
                                    <span class="btn-label">
                                        <i class="fa fa-chart-bar"></i>
                                    </span>
                                    Bar
                                </button>
                                <button class="btn btn-primary btn-sm btn-round" onclick="BuildPie()">
                                    <span class="btn-label">
                                        <i class="fa fa-chart-pie"></i>
                                    </span>
                                    Pie
                                </button>
                                <button class="btn btn-default btn-sm btn-round" onclick="ExportImg()" id="BarOrPieChartVisible" style="display:none;">
                                    <span class="btn-label">
                                        <i class="fa fa-save"></i>
                                    </span>
                                    Save
                                </button>
                                <!--<a href="#" class="btn btn-info btn-border btn-round btn-sm mr-2" disabled>
                        <span class="btn-label">
                            <i class="fa fa-file-excel"></i>
                        </span>
                        Export
                    </a>-->
                                <!--<a href="#" class="btn btn-info btn-border btn-round btn-sm" disabled>
                        <span class="btn-label">
                            <i class="fa fa-copy"></i>
                        </span>
                        Copy
                    </a>-->
                            </div>
                        </td>
                    </tr>
                </table>
                <div id="spinner" class="w-100" style="display:none;">
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div id="FrequenciesGrid" style="display:none;">
                        <div class="row">
                            <div class="col text-left border-bottom font-weight-bold" style="background-color:#ebedf2">Code</div>
                            <div class="col border-bottom font-weight-bold" style="background-color:#ebedf2">Frequency</div>
                        </div>
                        <div id="FrequenciesGridRows"></div>

                    </div>

                    <div id="FrequenciesChart" class="chart" style="text-align:left">
                        <!-- pie and bar charts get displayed here -->
                    </div>

                </div>
            </div>
        </div>

        <div class="card">

            @await Html.PartialAsync("_ItemsList")
        </div>

    </div>


</div>

