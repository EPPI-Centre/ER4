@model BusinessLibrary.BusinessClasses.WebDbFrequencyCrosstabAndMapSelectionCriteria
@using BusinessLibrary.BusinessClasses


<input type="hidden" value="@Model.included" name="included" id="includedCrit" />
<input type="hidden" value="@Model.attributeIdXAxis" name="attributeIdXAxis" id="attributeIdXAxisCrit" />
<input type="hidden" value="@Model.setIdXAxis" name="setIdXAxis" id="setIdXAxisCrit" />
<input type="hidden" value="@Model.nameXAxis" name="nameXAxis" id="nameXAxisCrit" />
<input type="hidden" value="@Model.onlyThisAttribute" name="onlyThisAttribute" id="onlyThisAttributeCrit" />
<input type="hidden" value="@Model.webDbId" name="webDbId" id="webDbIdCrit" />

<script type="text/javascript">

    let freqData = null;

    $(document).ready(function () {
        //console.log("ready function is happening");
        var pars = {
            attributeIdXAxis: @Model.attributeIdXAxis
            , setIdXAxis: @Model.setIdXAxis
            , attributeIdYAxis: @Model.attributeIdYAxis
            , nameXAxis: $("#nameXAxisCrit").val()
            , included: @Model.included
            , graphic: "table"
        }
        $("#BuildBarHideNOA").hide();
        $("#BuildBarShowNOA").hide();
        $("#spinner").show();
        $("#resultsTable").hide();
        $.post("../Frequencies/GetFrequenciesResultsJSON", pars, (data, status) => buildResults(data, status));
    });

    function buildResults(data, status) {
        if (data && status == "success") {
            freqData = data;
            GoToFreq();
        }
        else if (status != "success") {
            //show some error message??
        }
    }

    function GoToFreq() {
        $("#GoToFreqBT").prop("disabled", true);
        $("#BuildBarBT").prop("disabled", false);
        $("#BuildPieBT").prop("disabled", false);
        $("#BarOrPieChartVisible").hide();
        $("#FrequenciesChart").hide();
        $("#BuildBarHideNOA").hide();
        $("#BuildBarShowNOA").hide();
        let counter = 0;
        let innerHtml = "";
        for (let itm of freqData)
        {
            innerHtml += '<div class="row">';
            counter++;
            if (counter % 2 == 0) {
                innerHtml += '<div class="col text-left border-bottom" style="background-color:#ebedf2">' +  HTMLEncodeText(itm.attribute) + '</div>';
                innerHtml += '<div class="col text-left border-bottom" style="background-color:#ebedf2">';
            }
            else {
                innerHtml += "<div class=\"col text-left border-bottom\">" + HTMLEncodeText(itm.attribute) + "</div>";
                innerHtml += "<div class=\"col text-left border-bottom\">";
            }
            if (itm.itemCount == 0)
            {
                innerHtml += '<text>0</text>';
            }
            
            innerHtml += "<a href=\"javascript:GotoItemsTable(" + itm.attributeId + ")\">" + itm.itemCount + "</a>";
            
            innerHtml += "</div></div>";
        }

        $("#spinner").hide();
        $("#FrequenciesGridRows").html(innerHtml);
        $("#FrequenciesGrid").show();
    }


    function BuildBar(showNoneOfTheAbove) {

        $("#GoToFreqBT").prop("disabled", false);
        $("#BuildBarBT").prop("disabled", true);
        $("#BuildPieBT").prop("disabled", false);
        $("#BarOrPieChartVisible").show();
        $("#FrequenciesGrid").hide();
        $("#FrequenciesChart").show();
        //$("#FrequenciesResult").text("Frequencies for: " + $("#nameXAxisCrit").val());
        //$("#FrequenciesResult").show();

        let myData = [];
        for (var i = 0; i < freqData.length; i++) {
            myData.push(freqData[i]);
        }

        if (showNoneOfTheAbove == 0) {
            if (myData[myData.length - 1].attributeId == -999999) {
                myData.splice(freqData.length - 1, 1);
            }
            $("#BuildBarShowNOA").show();
            $("#BuildBarHideNOA").hide();
        }
        else {
            $("#BuildBarShowNOA").hide();
            $("#BuildBarHideNOA").show();
        }



        $("#FrequenciesChart").kendoChart({
            //dataSource: { data: freqData },
            dataSource: { data: myData },
            categoryAxis: {
                field: "attribute"
            },
            series: [
                { field: "itemCount" }
            ],
            seriesDefaults: {
                type: 'bar'
            },
            seriesClick: function (e) {
                GoToListBar(e);
            },
            chartArea: {
                height: 250
            },
            tooltip: {
                visible: true,
                template: "#= HTMLEncodeText(category) #: #= value # records"
            }
        });

    }


    function BuildPieOrig() {

        $("#GoToFreqBT").prop("disabled", false);
        $("#BuildBarBT").prop("disabled", false);
        $("#BuildBarHideNOA").hide();
        $("#BuildBarShowNOA").hide();
        $("#BuildPieBT").prop("disabled", true);
        $("#BarOrPieChartVisible").show();
        $("#FrequenciesGrid").hide();
        $("#FrequenciesChart").show();
        //$("#FrequenciesResult").html("Frequencies for: " + data.criteria.nameXAxis);
        //$("#FrequenciesResult").show();

        $("#FrequenciesChart").kendoChart({
            dataSource: { data: freqData },
            legend: {
                position: "right"
            },
            chartArea: {
                height: 250
            },
            seriesDefaults: {
                type: "pie"
            },
            seriesClick: function (e) {
                GoToListPie(e);
            },
            series: [{
                field: "itemCount",
                categoryField: "attribute",
                padding: 0
            }],
            tooltip: {
                visible: true,
                template: "#= HTMLEncodeText(category) #: #= value # records"
            }
        });
    }

    function BuildPie() {

        $("#GoToFreqBT").prop("disabled", false);
        $("#BuildBarBT").prop("disabled", false);
        $("#BuildPieBT").prop("disabled", true);
        $("#BarOrPieChartVisible").show();
        $("#FrequenciesGrid").hide();
        $("#FrequenciesChart").show();
        $("#BuildBarHideNOA").hide();
        $("#BuildBarShowNOA").hide();

        let myData = [];
        // remove all of the rows that have zero values
        for (var i = freqData.length - 1; i >= 0; i--) {
            if (freqData[i].itemCount > 0) {
                //console.log("adding: ", freqData.results[i]);
                myData.push(freqData[i]);
                //data.results.splice(i, 1);
            }
        }
        if (myData.length == 0) return;
        //var lastRow = myData.length - 1;

        // remove the last row if it is 'none of the above'
        if (myData[0].attributeId == -999999) {
            myData.splice(0, 1);
        }

        var legendPostion = "right";
        var chartHeight = 250;

        var ele = document.getElementById("FrequenciesChart"), // Do not use #
            eleStyle = window.getComputedStyle(ele);
        /* Below is the width of ele */
        var eleWidth = parseInt(eleStyle.width.replace("px", ""));

        if (eleWidth <= 768) {
            legendPostion = "bottom";
            chartHeight = 400;
        }

        //if (myData.length > 200) {
        //    legendPostion = "bottom";
        //chartHeight = 600;
        //}

        $("#FrequenciesGrid").hide();

        if (myData.length != 0) {
            $("#BarOrPieChartVisible").show();
            $("#FrequenciesChart").show();
            $("#NoCodedRecords").hide();

            $("#FrequenciesChart").kendoChart({
                dataSource: { data: myData },
                chartArea: {
                    height: chartHeight
                },
                seriesDefaults: {
                    type: "pie"
                },
                seriesClick: function (e) {
                    GoToListPie(e);
                },
                series: [{
                    field: "itemCount",
                    categoryField: "attribute",
                    padding: 0
                }],
                tooltip: {
                    visible: true,
                    template: "#= HTMLEncodeText(category) #: #= value # records"
                },
                legend: {
                    item: {
                        visual: function (e) {
                            var color = e.options.markers.background;
                            var labelColor = e.options.labels.color;

                            var rect = new kendo.geometry.Rect([0, 0], [400, 50]);
                            if (eleWidth <= 768) {
                                rect = new kendo.geometry.Rect([0, 0], [400, 100]);
                            }


                            var layout = new kendo.drawing.Layout(rect, {
                                spacing: 10
                            });

                            var allZeroValues = false;
                            if (e.series.data[e.pointIndex].itemCount == 0) {
                                allZeroValues = true;
                            }

                            if (!allZeroValues) {
                                // create a circle geometry centered at x=10, y=5, with a radius of 5
                                var CircGeometry = new kendo.geometry.Circle([10, 5], 5);
                                // draw the circle using the geometry and set the color
                                var MarkerCircle = new kendo.drawing.Circle(CircGeometry, {
                                    stroke: { color: color, width: 1 },
                                    fill: { color: color }
                                });

                                var label = new kendo.drawing.Text(e.series.data[e.pointIndex].attribute + " (" +
                                    e.series.data[e.pointIndex].itemCount + ")", [0, 0], {
                                    fill: {
                                        color: labelColor
                                    }
                                });

                                layout.append(MarkerCircle, label);
                                layout.reflow()
                            }
                            return layout;
                        }
                    },
                    position: legendPostion,
                    padding: 10,
                    background: "#e2e3e5",
                    border: {
                        width: 1,
                        color: "#d6d8db"
                    },
                },
            });
        }
        else {
            $("#BarOrPieChartVisible").hide();
            $("#FrequenciesChart").hide();
            $("#NoCodedRecords").show();
        }
    }



    function GotoItemsTable(attributeId) {
        if (freqData == null || freqData.length < 1) return;
        else {
            let foundInd = freqData.findIndex(f => f.attributeId == attributeId);
            if (foundInd > -1) {
                GoToItemsJson(freqData[foundInd].attributeId, freqData[foundInd].attribute);
            }
        }
    }

    function GoToListPie(rowData) {
        GoToItemsJson(rowData.dataItem.attributeId, rowData.dataItem.attribute);
        //$("#ItemCount").html("Loading...");
        //$("#ItemsGrid").empty();
        //$("#ItemsGrid").kendoGrid();
        //if (dataItem.dataItem.attributeId == -999999) {

        //    var attributeIdXAxis = $('#attributeIdXAxisCrit').val();
        //    $.post("../ItemList/GetFreqListNoneOfTheAboveJSon"
        //        , {
        //            attributeIdXAxis: attributeIdXAxis
        //            , setId: dataItem.dataItem.setId
        //            , included: "true"
        //            , onlyThisAttribute: 0
        //            , attName: dataItem.dataItem.attribute
        //        }
        //        , function (data, result) { BuildItems(data, result); }
        //    );
        //}
        //else {
        //    //postwith("../ItemList/GetFreqList", {
        //    //    attId: dataItem.dataItem.attributeId
        //    //    , attName: dataItem.dataItem.attribute
        //    //});
        //    $.post("../ItemList/GetFreqListJSon", {
        //        attId: dataItem.dataItem.attributeId
        //        , attName: dataItem.dataItem.attribute
        //    }
        //        , function (data, result) { BuildItems(data, result); }
        //    );
        //}
    }

    function GoToListBar(rowData) {
        GoToItemsJson(rowData.dataItem.attributeId, rowData.dataItem.attribute);
        //$("#ItemCount").html("Loading...");
        //$("#ItemsGrid").empty();
        //$("#ItemsGrid").kendoGrid();
        //if (dataItem.dataItem.attributeId == -999999) {
        //    var attributeIdXAxis = $('#attributeIdXAxisCrit').val();
        //    $.post("../ItemList/GetFreqListNoneOfTheAboveJSon", {
        //        attributeIdXAxis: attributeIdXAxis
        //        , setId: dataItem.dataItem.setId
        //        , included: "true"
        //        , onlyThisAttribute: 0
        //        , attName: dataItem.dataItem.attribute
        //    }
        //        , function (data, result) { BuildItems(data, result); })
        //}
        //else {
        //    //postwith("../ItemList/GetFreqList", {
        //    //    attId: dataItem.dataItem.attributeId
        //    //    , attName: dataItem.dataItem.attribute
        //    //}
        //    $.post("../ItemList/GetFreqListJSon", {
        //        attId: dataItem.dataItem.attributeId
        //        , attName: dataItem.dataItem.attribute
        //    }
        //        , function (data, result) { BuildItems(data, result); }
        //    )
        //}
    }

    function ExportImg() {
        var title = "@Model.nameXAxis.Replace("\'", "&#39;")";
        var chart = $("#FrequenciesChart").getKendoChart();
        chart.exportImage().done(function (data) {
            kendo.saveAs({
                dataURI: data,
                fileName: title
                /*, proxyURL: "https://demos.telerik.com/kendo-ui/service/export"*/
            });
        });
    };

    function GoToItemsJson(AttId, AttName = '') {
        $("#ItemCount").html("");
        $("#ItemsGrid").empty();
        $("#ItemsGrid").kendoGrid();
        let spinnerItems = $("#spinnerItems");
        if (spinnerItems) spinnerItems.show();
        if (AttId == -999999) {
            AttName = 'None of the above';
            var included = $('#includedCrit').val();
            var attributeIdXAxis = $('#attributeIdXAxisCrit').val();
            var setIdXAxis = $('#setIdXAxisCrit').val();
            var onlyThisAttribute = $('#onlyThisAttributeCrit').val();
            $.post("../ItemList/GetFreqListNoneOfTheAboveJSon"
                , {
                    attributeIdXAxis: attributeIdXAxis
                    , setId: setIdXAxis
                    , included: included
                    , onlyThisAttribute: onlyThisAttribute
                    , attName: AttName
                }
                , function (data, result) {
                    if (spinnerItems) spinnerItems.hide();
                    BuildItems(data, result);
                }
            );
        } else {
            //AttName = AttName.replace(rgx2, "'");
            $.post("../ItemList/GetFreqListJSon"
                , { attId: AttId, attName: AttName }
                , function (data, result) {
                    if (spinnerItems) spinnerItems.hide();
                    BuildItems(data, result);
                }
            );
        }
    };

</script>



<br />
<br />
<br />

<div class="main-panel main-panel-no-sidebar">

    <div class="page-inner">

        <div class="card">
            <div class="card-body">
                <table width="100%">
                    <tr>
                        <td>
                            <h5 class="card-title mb-3">Frequency report</h5><h5><b>@Model.nameXAxis</b></h5>
                        </td>
                        <td style="text-align:right">
                            <div class="card-tools">
                                <button class="btn btn-primary btn-sm btn-round" onclick="GoToFreq()" id="GoToFreqBT">
                                    <span class="btn-label">
                                        <i class="fa fa-table"></i>
                                    </span>
                                    Table
                                </button>
                                <button class="btn btn-primary btn-sm btn-round" onclick="BuildBar(1)" id="BuildBarBT">
                                    <span class="btn-label">
                                        <i class="fa fa-chart-bar"></i>
                                    </span>
                                    Bar
                                </button>
                                <button class="btn btn-primary btn-sm btn-round" onclick="BuildPie()" id="BuildPieBT">
                                    <span class="btn-label">
                                        <i class="fa fa-chart-pie"></i>
                                    </span>
                                    Pie
                                </button>
                                <button class="btn btn-default btn-sm btn-round" onclick="ExportImg()" id="BarOrPieChartVisible" style="display:none;">
                                    <span class="btn-label">
                                        <i class="fa fa-save"></i>
                                    </span>
                                    Save
                                </button>
                                <!--<a href="#" class="btn btn-info btn-border btn-round btn-sm mr-2" disabled>
                        <span class="btn-label">
                            <i class="fa fa-file-excel"></i>
                        </span>
                        Export
                    </a>-->
                                <!--<a href="#" class="btn btn-info btn-border btn-round btn-sm" disabled>
                        <span class="btn-label">
                            <i class="fa fa-copy"></i>
                        </span>
                        Copy
                    </a>-->
                            </div>
                        </td>
                    </tr>
                </table>
                <div id="spinner" class="w-100" style="display:none;">
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div id="FrequenciesGrid" style="display:none;">
                        <div class="row">
                            <div class="col text-left border-bottom font-weight-bold" style="background-color:#ebedf2">Code</div>
                            <div class="col border-bottom font-weight-bold" style="background-color:#ebedf2">Frequency</div>
                        </div>
                        <div id="FrequenciesGridRows"></div>

                    </div>

                    <div id="FrequenciesChart" class="chart" style="text-align:left">
                        <!-- pie and bar charts get displayed here -->
                    </div>
                    <button class="btn btn-primary btn-sm btn-round" onclick="BuildBar(0)" id="BuildBarHideNOA">
                        <span class="btn-label">
                            <i class="fa fa-chart-bar"></i>
                        </span>
                        Remove last row
                    </button>
                    <button class="btn btn-primary btn-sm btn-round" onclick="BuildBar(1)" id="BuildBarShowNOA">
                        <span class="btn-label">
                            <i class="fa fa-chart-bar"></i>
                        </span>
                        Show uncoded
                    </button>

                </div>
            </div>
        </div>

        <div class="card">
            <div id="spinnerItems" class="col-12 row m-0" style="display:none;">
                <div class="col-auto p-1">Loading...</div>
                <div class="col d-flex justify-content-center">
                    <div class="spinner-border" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            </div>

            @await Html.PartialAsync("_ItemsList")
        </div>

    </div>


</div>

