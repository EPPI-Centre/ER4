@model BusinessLibrary.BusinessClasses.ReviewInfo

<div class="row">
    <div class="col-12 ">
        Review Name is:
        <h3>@Model.ReviewName</h3>
    </div>

    <div class="col-6 col-sm-4 col-md-3">
        <div id="treeView"></div>
        <script>
            var treeviewData = null;
            var dataItem = null;
            var dataItemXaxis = null;
            function Buildnode(attr) {
                var nodes = [];

                var res = new kendo.data.Node({
                    text: attr.setName ? attr.setName : attr.attributeName
                });
                for (var ii = 0; ii < attr.attributes.attributesList.length; ii++) {
                    res.append(Buildnode(attr.attributes.attributesList[ii]));
                }
                res.id = attr.attributeId ? attr.attributeId : attr.setId;
                res.isCodeset = false;
                res.setId = attr.setId;
                //res.items = nodes;
                //res.hasChildren = () => {
                //    return this.items.length > 0;
                //};
                return res;
            }
            $(document).ready(function () {
                $("#treeView").kendoTreeView({
                    dataSource: {
                        transport: {
                            read: {
                                url: "../ReviewSetList/FetchJSON",
                                dataType: "json"
                            }
                        },
                        schema: {
                            parse: function (response) {
                                dataItem = null;
                                var nodes = [];
                                for (var i = 0; i < response.length; i++) {
                                    var nodes2 = [];
                                    var nd = new kendo.data.Node({ text: response[i].setName });
                                    nd.id = response[i].setId;
                                    nd.isCodeset = true;
                                    nd.setId = nd.id;
                                    for (var ii = 0; ii < response[i].attributes.attributesList.length; ii++) {
                                        nd.append(Buildnode(response[i].attributes.attributesList[ii]));
                                    }
                                    nd.items = nodes2;
                                    //nd.hasChildren = () => {
                                    //        return this.items.length > 0;
                                    //    };
                                    nodes.push(nd);
                                }
                                return nodes;
                            }
                        }
                    },
                    select: TreeViewSelection
                });
                treeviewData = $("#treeView").data("kendoTreeView");
                //$("#treeView").data("kendoTreeView").bind("change", TreeViewSelection);
            });
            function tree_dataBound(e) {
                console.log("DataBound", e.node);
            }
            function GoToFreq() {
                console.log("CurrentNodeGoToFreq");
                if (!dataItem) {
                    console.log("CurrentNodeGoToFreq no data");
                    return;
                }
                console.log("Planning to go to get frequency with (codeID, setId):", dataItem.id, dataItem.setId)
                if (dataItem.isCodeset == true) {
                    postwith("../Frequencies/GetFrequencies", { attId: 0, setId: dataItem.setId, included: true });
                }
                else postwith("../Frequencies/GetFrequencies", { attId: dataItem.id, setId: dataItem.setId, included:true});
            }
            function GoToCrosstab(isSelfXtab) {
                console.log("CurrentNodeGoToCrosstab");
                if (!dataItem || (isSelfXtab !== true && !dataItemXaxis)) {
                    console.log("CurrentNodeGoToCrosstab no data");
                    return;
                }
                if (isSelfXtab == true) {
                    if (dataItem.isCodeset == true) {
                        postwith("../Frequencies/GetCrosstab", {
                            attIdx: 0
                            , setIdx: dataItem.setId
                            , attIdy: 0
                            , setIdy: dataItem.setId
                            , included: true
                        });
                    }
                    else postwith("../Frequencies/GetCrosstab", {
                        attIdx: dataItem.id
                        , setIdx: dataItem.setId
                        , attIdy: dataItem.id
                        , setIdy: dataItem.setId
                        , included: true
                    });
                } else {
                    var pars = {
                            attIdx: 0
                            , setIdx: 0
                            , attIdy: 0
                            , setIdy: 0
                            , included: true
                        }
                    if (dataItem.isCodeset == true) {
                        pars.attIdy = 0;
                        pars.setIdy = dataItem.setId;
                    }
                    else {
                        pars.attIdy = dataItem.id;
                        pars.setIdy = dataItem.setId;
                    }
                    if (dataItemXaxis.isCodeset == true) {
                        pars.attIdx = 0;
                        pars.setIdx = dataItemXaxis.setId;
                    }
                    else {
                        pars.attIdx = dataItemXaxis.id;
                        pars.setIdx = dataItemXaxis.setId;
                    }
                    postwith("../Frequencies/GetCrosstab", pars);
                }
            }
            
            function TreeViewSelection(e) {
                if (treeviewData == null) retrun;
                dataItem = treeviewData.dataItem(e.node);
                if (!dataItem) {
                    $("#CurrentNodeGoToFreq").prop("disabled", true); CurrentNodeGoToSelfCrosstab
                    $("#CurrentNodeGoToSelfCrosstab").prop("disabled", true);
                    $("#CurrentNodeGoToCrosstab").prop("disabled", true);
                    $("#CurrentNodeSetXAxis").prop("disabled", true);
                    return;
                }
                console.log("Change", dataItem.setId, dataItem.id, dataItem.text);
                $("#CurrentNodeName").text(dataItem.text);
                $("#CurrentNodeId").text(dataItem.id);
                $("#CurrentNodeSetId").text(dataItem.setId);
                $("#CurrentNodeIsCodeSet").text(dataItem.isCodeset.toString());
                if (dataItem.items && dataItem.items.length > 0) {
                    $("#CurrentNodeGoToFreq").prop("disabled", false);
                    $("#CurrentNodeGoToSelfCrosstab").prop("disabled", false);
                    $("#CurrentNodeGoToCrosstab").prop("disabled", dataItemXaxis == null);
                    $("#CurrentNodeSetXAxis").prop("disabled", false);
                }
                else {
                    $("#CurrentNodeGoToFreq").prop("disabled", true);
                    $("#CurrentNodeGoToSelfCrosstab").prop("disabled", true);
                    $("#CurrentNodeGoToCrosstab").prop("disabled", true);
                    $("#CurrentNodeSetXAxis").prop("disabled", true);
                }
            }
            function SetXAxis() {
                if (!dataItem) {
                    dataItemXaxis = null;
                    $("#x_axis_setting").hide();
                    $("CurrentNodeGoToCrosstab").prop("disabled", true);
                }
                else {
                    dataItemXaxis = dataItem;
                    $("#x_axis_name").text(dataItemXaxis.text);
                    $("CurrentNodeGoToCrosstab").prop("disabled", false);
                    $("#x_axis_setting").show();
                }
            }
            //var treeviewData = $("#treeView").data("kendoTreeView");
            //treeview.bind("change", TreeViewSelection);
        </script>
    </div>
    <div class="col-6 col-sm-8 col-md-9">
        <div class="col-12 ">
            Review Id is:
            <h5>@Model.ReviewId</h5>
        </div>
        <div class=" col">
            Screening is:
            @if (Model.ShowScreening)
            {<text>Active</text>}
        else
        {<text>Disabled</text>}
        </div>
        <div class="col-12 ">
            This web DB will only show items with this code:
            <div>@ViewBag.AttName (ID: @ViewBag.AttId)</div>
            <a class="btn btn-outline-success" asp-controller="ItemList" asp-action="Index">
                Got to list
            </a>
        </div>
        <div class="col-12 " id="CurrentNode">
            <div class="row">Selected code: <span class="ml-1 font-weight-bold" id="CurrentNodeName"></span></div>
            <div class="row">Selected Id: <span class="ml-1 font-weight-bold" id="CurrentNodeId"></span></div>
            <div class="row">Selected SetId: <span class="ml-1 font-weight-bold" id="CurrentNodeSetId"></span></div>
            <div class="row">Is a coding tool: <span class="ml-1 font-weight-bold" id="CurrentNodeIsCodeSet"></span></div>
            <button class="btn-outline-primary btn btn-sm" onclick="GoToFreq()" disabled id="CurrentNodeGoToFreq">Freq</button>


            <div class="row" >
                Crosstabs:
                <button class="btn-outline-primary btn btn-sm" onclick="GoToCrosstab(true)" disabled id="CurrentNodeGoToSelfCrosstab">Self Cross Tab</button>
                <button class="btn-outline-success btn btn-sm" onclick="SetXAxis()" disabled id="CurrentNodeSetXAxis">Set X axis</button>
                <div class="col-12" id="x_axis_setting" style="display:none;">
                    X-axis is set to: <span id="x_axis_name" class="m-1"></span>
                    <button class="btn-outline-primary btn btn-sm" onclick="GoToCrosstab(false)" disabled id="CurrentNodeGoToCrosstab">Full Cross Tab</button>
                </div>
            </div>
        </div>

    </div>
    

</div>
