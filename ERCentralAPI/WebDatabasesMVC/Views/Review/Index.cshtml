@model WebDbWithRevInfo;
@using WebDatabasesMVC.ViewModels;
@using Microsoft.AspNetCore.Html;
<div class="row">
    <div class="col-5 col-md-4">
        <script>
            var treeviewData = null;
            var dataItem = null;
            var dataItemXaxis = null;
            function Buildnode(attr) {
                var nodes = [];

                var res = new kendo.data.Node({
                    text: attr.setName ? attr.setName : attr.attributeName
                });
                for (var ii = 0; ii < attr.attributes.attributesList.length; ii++) {
                    res.append(Buildnode(attr.attributes.attributesList[ii]));
                }
                res.id = attr.attributeId ? attr.attributeId : attr.setId;
                res.isCodeset = false;
                res.setId = attr.setId;
                //res.items = nodes;
                //res.hasChildren = () => {
                //    return this.items.length > 0;
                //};
                return res;
            }
            $(document).ready(function () {
                $("#treeView").kendoTreeView({
                    dataSource: {
                        transport: {
                            read: {
                                url: "../ReviewSetList/FetchJSON",
                                dataType: "json"
                            }
                        },
                        schema: {
                            parse: function (response) {
                                dataItem = null;
                                var nodes = [];
                                for (var i = 0; i < response.length; i++) {
                                    var nodes2 = [];
                                    var nd = new kendo.data.Node({ text: response[i].setName });
                                    nd.id = response[i].setId;
                                    nd.isCodeset = true;
                                    nd.setId = nd.id;
                                    for (var ii = 0; ii < response[i].attributes.attributesList.length; ii++) {
                                        nd.append(Buildnode(response[i].attributes.attributesList[ii]));
                                    }
                                    nd.items = nodes2;
                                    //nd.hasChildren = () => {
                                    //        return this.items.length > 0;
                                    //    };
                                    nodes.push(nd);
                                }
                                GetYearsFreqs();//getting the years chart after the codes...
                                return nodes;
                            }
                        }
                    },
                    select: TreeViewSelection
                });
                treeviewData = $("#treeView").data("kendoTreeView");
                //$("#treeView").data("kendoTreeView").bind("change", TreeViewSelection);
            });
            function tree_dataBound(e) {
                console.log("DataBound", e.node);
            }
            function GoToFreq() {
                console.log("CurrentNodeGoToFreq");
                if (!dataItem) {
                    console.log("CurrentNodeGoToFreq no data");
                    return;
                }
                console.log("Planning to go to get frequency with (codeID, setId):", dataItem.id, dataItem.setId)
                if (dataItem.isCodeset == true) {
                    postwith("../Frequencies/GetFrequencies", { attId: 0, setId: dataItem.setId, included: true });
                }
                else postwith("../Frequencies/GetFrequencies", { attId: dataItem.id, setId: dataItem.setId, included: true });
            }
            function GoToCrosstab(isSelfXtab) {
                console.log("CurrentNodeGoToCrosstab");
                if (!dataItem || (isSelfXtab !== true && !dataItemXaxis)) {
                    console.log("CurrentNodeGoToCrosstab no data");
                    return;
                }
                if (isSelfXtab == true) {
                    if (dataItem.isCodeset == true) {
                        postwith("../Frequencies/GetCrosstab", {
                            attIdx: 0
                            , setIdx: dataItem.setId
                            , attIdy: 0
                            , setIdy: dataItem.setId
                            , included: true
                        });
                    }
                    else postwith("../Frequencies/GetCrosstab", {
                        attIdx: dataItem.id
                        , setIdx: dataItem.setId
                        , attIdy: dataItem.id
                        , setIdy: dataItem.setId
                        , included: true
                    });
                } else {
                    var pars = {
                        attIdx: 0
                        , setIdx: 0
                        , attIdy: 0
                        , setIdy: 0
                        , included: true
                    }
                    if (dataItem.isCodeset == true) {
                        pars.attIdy = 0;
                        pars.setIdy = dataItem.setId;
                    }
                    else {
                        pars.attIdy = dataItem.id;
                        pars.setIdy = dataItem.setId;
                    }
                    if (dataItemXaxis.isCodeset == true) {
                        pars.attIdx = 0;
                        pars.setIdx = dataItemXaxis.setId;
                    }
                    else {
                        pars.attIdx = dataItemXaxis.id;
                        pars.setIdx = dataItemXaxis.setId;
                    }
                    postwith("../Frequencies/GetCrosstab", pars);
                }
            }

            function TreeViewSelection(e) {
                if (treeviewData == null) retrun;
                dataItem = treeviewData.dataItem(e.node);
                if (!dataItem) {
                    $("#CurrentNodeGoToFreq").prop("disabled", true); CurrentNodeGoToSelfCrosstab
                    $("#CurrentNodeGoToSelfCrosstab").prop("disabled", true);
                    $("#CurrentNodeGoToCrosstab").prop("disabled", true);
                    $("#CurrentNodeSetXAxis").prop("disabled", true);
                    $("#GoToItemsWithThisCode").prop("disabled", true);
                    $("#GoToItemsWithThisCode").attr('onclick', '');
                    return;
                }
                console.log("Change", dataItem.setId, dataItem.id, dataItem.text);
                $("#CurrentNodeName").text(dataItem.text);
                $("#CurrentNodeId").text(dataItem.id);
                $("#CurrentNodeSetId").text(dataItem.setId);
                $("#CurrentNodeIsCodeSet").text(dataItem.isCodeset.toString());
                if (dataItem.items && dataItem.items.length > 0) {
                    $("#CurrentNodeGoToFreq").prop("disabled", false);
                    $("#CurrentNodeGoToSelfCrosstab").prop("disabled", false);
                    $("#CurrentNodeGoToCrosstab").prop("disabled", dataItemXaxis == null);
                    $("#CurrentNodeSetXAxis").prop("disabled", false);
                }
                else {
                    $("#CurrentNodeGoToFreq").prop("disabled", true);
                    $("#CurrentNodeGoToSelfCrosstab").prop("disabled", true);
                    $("#CurrentNodeGoToCrosstab").prop("disabled", true);
                    $("#CurrentNodeSetXAxis").prop("disabled", true);
                }
                if (dataItem.isCodeset) {
                    $("#GoToItemsWithThisCode").prop("disabled", true);
                    $("#GoToItemsWithThisCode").attr('onclick', '');
                } else {
                    $("#GoToItemsWithThisCode").prop("disabled", false);
                    $("#GoToItemsWithThisCode").attr('onclick', 'GoToItems(dataItem.id)');
                }
            }
            function SetXAxis() {
                if (!dataItem) {
                    dataItemXaxis = null;
                    $("#x_axis_setting").hide();
                    $("CurrentNodeGoToCrosstab").prop("disabled", true);
                }
                else {
                    dataItemXaxis = dataItem;
                    $("#x_axis_name").text(dataItemXaxis.text);
                    $("CurrentNodeGoToCrosstab").prop("disabled", false);
                    $("#x_axis_setting").show();
                }
            }

            function GetYearsFreqs() {
                $("#chart").kendoChart({
                    categoryAxis: {
                        field: "year"
                    },
                    series: [
                        { field: "count" }
                    ],
                    seriesDefaults: {
                        type: 'bar'
                    },
                    seriesClick: function (e) {
                        //console.log("Clicked " + e.value, e);
                        GoToYearList(e.category);
                    },
                    axisLabelClick: function (e) {
                        //console.log("Clicked " + e.value, e);
                        GoToYearList(e.value);
                    },
                    dataSource: {
                        transport: {
                            read: {
                                url: "../Review/YearHistogramJSON",
                                dataType: "json"
                            }
                        }
                    }
                    , tooltip: {
                        visible: true,
                        template: "Items count: #= value #"
                    }

                });
            }

            function GoToYearList(year) {
                //if (year == "Unknown") year = "'    ' OR '0   '";
                postwith("../ItemList/GetListSearchResults", {
                    SearchString: year
                    , SearchWhat: "PubYear"
                    , included: "true"
                })
            }
            //var treeviewData = $("#treeView").data("kendoTreeView");
            //treeview.bind("change", TreeViewSelection);
        </script>

        <div id="treeView" style="overflow: auto; height: 100%; max-height: 75vh;"></div>
    </div>
    <div class="col-7 col-md-8 row mx-0 p-0">
        <div class="col-12 col-sm-8 col-md-7 mb-2 rounded border border-primary alert-primary">
            <div>WebDatabase Name is: <b>@Model.WebDb.WebDBName</b></div>
            <div>WebDatabase Id is: <b>@Model.WebDb.WebDBId</b></div>
            <div class="col-12">WebDatabase Description is: </div>
            <div class="rounded m-2 alert-light col-12">@(new HtmlString(Model.WebDb.WebDBDescription))</div>
            
            <div>This WebDatabase uses EPPI-Reviewer data from the  review called: <b>@Model.RevInfo.ReviewName</b></div>
        </div>
        <div id="chart" class="col-12 col-sm-4 col-md-5 mb-2"></div>
        <div class="col-12 col-sm-8 col-md-7 mb-2 rounded border border-info alert-info " id="CurrentNode">
            <div class="font-weight-bold">Navigate:</div>
            <div class="row m-0">
                <div class="my-auto">
                    List all references:
                </div>
                <a class="btn btn-outline-success btn-sm px-2 py-1 m-1" asp-controller="ItemList" asp-action="Index">Go</a>
            </div>
            <div class="row m-0">
                <div class="my-auto">Selected code: </div>
                <div class="ml-1 font-weight-bold my-auto" id="CurrentNodeName"></div>
                <button id="GoToItemsWithThisCode" class="btn btn-outline-success btn-sm px-2 py-1 m-1" disabled>List</button>
                <button class="btn btn-outline-success btn-sm px-2 py-1 m-1" onclick="GoToFreq()" disabled id="CurrentNodeGoToFreq">Get Frequencies</button>
            </div>
            <div class="row m-0">
                <div class="my-auto">Crosstabs: </div>
                <button class="btn btn-outline-success btn-sm px-2 py-1 m-1" onclick="GoToCrosstab(true)" disabled id="CurrentNodeGoToSelfCrosstab">Self Cross Tab</button>
                <button class="btn btn-outline-primary btn-sm px-2 py-1 m-1" onclick="SetXAxis()" disabled id="CurrentNodeSetXAxis">Set X axis</button>
                <div class="row m-0" id="x_axis_setting" style="display:none;">
                    <div class="my-auto">X-axis is set to: <span id="x_axis_name" class="m-1"></span></div>
                    <button class="btn btn-outline-success btn-sm px-2 py-1 m-1" onclick="GoToCrosstab(false)" disabled id="CurrentNodeGoToCrosstab">Full Cross Tab</button>
                </div>
            </div>
            @*<div class="row">Selected Id: <span class="ml-1 font-weight-bold" id="CurrentNodeId"></span></div>
                <div class="row">Selected SetId: <span class="ml-1 font-weight-bold" id="CurrentNodeSetId"></span></div>
                <div class="row">Is a coding tool: <span class="ml-1 font-weight-bold" id="CurrentNodeIsCodeSet"></span></div>*@
        </div>
        <div class="col-12 col-sm-8 col-md-7 mb-2 rounded border border-success alert-success" >
            <div class="row mt-2">

                <form asp-controller="ItemList" asp-action="GetListSearchResults" method="post" class="col-12 m-0 p-1 ">
                    <div class="row m-1">
                        <div class="col-auto row p-0 m-0">
                            <label for="SearchWhat" class="my-auto">Search In: &nbsp;</label>
                            <select name="SearchWhat" id="SearchWhat" class="ml-1 mr-2">
                                <option value="TitleAbstract">Title and Abstract</option>
                                <option value="Title">Title</option>
                                <option value="Abstract">Abstract</option>
                                <option value="Authors">Authors</option>
                                <option value="PubYear">Publication Year</option>
                                <option value="AdditionalText">"Coded" Text</option>
                                <option value="ItemId">ItemIds (comma separated)</option>
                                <option value="OldItemId">Imported Ids (comma separated)</option>
                            </select>
                        </div>
                        <div class="col-auto row p-0 m-0">
                            <input type="radio" class="ml-auto my-auto" id="includedt" name="included" value="true" checked>
                            <label for="male" class="ml-1 mr-3 my-auto">Included</label>
                            <input type="radio" class="my-auto" id="includedf" name="included" value="false">
                            <label for="female" class="ml-1 mr-auto my-auto">or Excluded</label>
                        </div>
                    </div>
                    <div class="row m-1">
                        <label for="SearchString" class="col-auto p-0">Search string:</label>
                        <input type="text" maxlength="4000" size="60" name="SearchString" id="SearchString" class="ml-1 mr-2 col-auto p-0" />
                    </div>

                    <button class="btn btn-outline-primary px-1 py-0 m-1" type="submit">
                        Search
                    </button>
                </form>

            </div>
        </div>
    </div>



    <div class="col-6 col-sm-7 col-md-8 mt-3">
        <div class="col-12 ">
            Review Id is:
            <h5>@Model.RevInfo.ReviewId</h5>
        </div>
        <div class=" col">
            Screening is:
            @if (Model.RevInfo.ShowScreening)
            {<text>Active</text>}
        else
        {<text>Disabled</text>}
        </div>
        <div class="col-12 ">
            This web DB will only show items with this code:
            <div>@ViewBag.AttName (ID: @ViewBag.AttId)</div>
            <a class="btn btn-outline-success" asp-controller="ItemList" asp-action="Index">
                Got to list
            </a>
        </div>
        <div class="col-12 " id="CurrentNode">
            <div class="row">Selected code: <span class="ml-1 font-weight-bold" id="CurrentNodeName"></span></div>
            <div class="row">Selected Id: <span class="ml-1 font-weight-bold" id="CurrentNodeId"></span></div>
            <div class="row">Selected SetId: <span class="ml-1 font-weight-bold" id="CurrentNodeSetId"></span></div>
            <div class="row">Is a coding tool: <span class="ml-1 font-weight-bold" id="CurrentNodeIsCodeSet"></span></div>
            <button class="btn-outline-primary btn btn-sm" onclick="GoToFreq()" disabled id="CurrentNodeGoToFreq">Freq</button>




            

        </div>

    </div>


</div>
